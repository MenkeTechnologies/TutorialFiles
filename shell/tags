!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
--color	zpwr/.tmux/plugins/tmux-yank/citest	/^    --color=always \\$/;"	v
--enable-gui	zpwr/vim_install.sh	/^        --enable-gui=gtk2 --enable-cscope --prefix=\/usr$/;"	v
--enable-luainterp	zpwr/vim_install.sh	/^        --enable-luainterp=yes \\$/;"	v
--enable-perlinterp	zpwr/vim_install.sh	/^        --enable-perlinterp=yes \\$/;"	v
--enable-python3interp	zpwr/vim_install.sh	/^        --enable-python3interp=yes \\$/;"	v
--enable-pythoninterp	zpwr/vim_install.sh	/^        --enable-pythoninterp=no \\$/;"	v
--enable-rubyinterp	zpwr/vim_install.sh	/^        --enable-rubyinterp=yes \\$/;"	v
--jobnum	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--jobnum=$4 \\$/;"	v
--jobnum	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--jobnum=$5 \\$/;"	v
--jobnum	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--jobnum=$_POWERLINE_JOBS \\$/;"	v
--jobnum	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--jobnum=$_POWERLINE_JOBS$/;"	v
--last-exit-code	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--last-exit-code=$2 \\$/;"	v
--last-exit-code	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--last-exit-code=$3 \\$/;"	v
--last-exit-code	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--last-exit-code=$2 \\$/;"	v
--last-pipe-status	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--last-pipe-status="$3" \\$/;"	v
--last-pipe-status	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--last-pipe-status="$4" \\$/;"	v
--renderer-arg	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--renderer-arg="client_id=$$" \\$/;"	v
--renderer-arg	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--renderer-arg="client_id=$$"$/;"	v
--renderer-arg	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--renderer-arg="local_theme=$6"$/;"	v
--renderer-arg	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--renderer-arg="client_id=$$" \\$/;"	v
--renderer-arg	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--renderer-arg="local_theme=$3"$/;"	v
--shell	zpwr/.tmux/plugins/tmux-yank/citest	/^    --shell=bash \\$/;"	v
--volume	zpwr/.tmux/plugins/tmux-yank/citest	/^    --volume="${PWD}:\/mnt:ro" \\$/;"	v
--width	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		--width="${COLUMNS:-$(_powerline_columns_fallback)}" \\$/;"	v
--width	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		--width="${COLUMNS:-$(_powerline_columns_fallback)}" \\$/;"	v
--with-python3-config-dir	zpwr/vim_install.sh	/^        --with-python3-config-dir=\/usr\/lib\/python3.5\/config \\$/;"	v
--workdir	zpwr/.tmux/plugins/tmux-yank/citest	/^    --workdir="\/mnt" \\$/;"	v
0	zpwr/.vim/sessions/Scripting.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/aliases.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/script2.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/script3.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/script4.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/test.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/text1.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/text2.vim	/^normal! 0$/;"	m
0	zpwr/.vim/sessions/tor.vim	/^normal! 0$/;"	m
010|	zpwr/.vim/sessions/script6.vim	/^normal! 010|$/;"	m
016|	zpwr/.vim/sessions/script5.vim	/^normal! 016|$/;"	m
019|	zpwr/.vim/sessions/vimtricks.vim	/^normal! 019|$/;"	m
026|	zpwr/.vim/sessions/script1.vim	/^normal! 026|$/;"	m
032|	zpwr/.vim/sessions/default.vim	/^normal! 032|$/;"	m
05|	zpwr/.vim/sessions/trc.vim	/^normal! 05|$/;"	m
08|	zpwr/.vim/sessions/zshrc.vim	/^normal! 08|$/;"	m
09|	zpwr/.vim/sessions/vrc.vim	/^normal! 09|$/;"	m
<Leader>dets	zpwr/.vim/colors/detailed.vim	/^nmap <Leader>dets :call <SID>SynStack()<CR>$/;"	m
<M-0>	zpwr/.vim/colors/nefertiti.vim	/^        map <silent> <M-0>  <Plug>NefertitiReset$/;"	m
<M-1>	zpwr/.vim/colors/nefertiti.vim	/^        map <silent> <M-1>  <Plug>NefertitiDarken$/;"	m
<M-2>	zpwr/.vim/colors/nefertiti.vim	/^        map <silent> <M-2>  <Plug>NefertitiBrighten$/;"	m
<M-3>	zpwr/.vim/colors/nefertiti.vim	/^        map <silent> <M-3>  <Plug>NefertitiSearchDarken$/;"	m
<M-4>	zpwr/.vim/colors/nefertiti.vim	/^        map <silent> <M-4>  <Plug>NefertitiSearchBrighten$/;"	m
<Plug>NefertitiBrighten	zpwr/.vim/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiBrighten     :NefertitiBrighten<CR>$/;"	m
<Plug>NefertitiDarken	zpwr/.vim/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiDarken       :NefertitiDarken<CR>$/;"	m
<Plug>NefertitiReset	zpwr/.vim/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiReset        :NefertitiReset<CR>$/;"	m
<Plug>NefertitiSearchBrighten	zpwr/.vim/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiSearchBrighten     :NefertitiSearchBrighten<CR>$/;"	m
<Plug>NefertitiSearchDarken	zpwr/.vim/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiSearchDarken       :NefertitiSearchDarken<CR>$/;"	m
<SID>xx	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>xx	zpwr/taglist_46/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<leader>;	zpwr/.vim/colors/midnight.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	zpwr/.vim/colors/midnight2.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	zpwr/.vim/colors/tomatosoup.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	zpwr/.vim/colors/vj.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>sc	zpwr/.vim/colors/sean.vim	/^nmap <silent> <leader>sc :call ToggleSemicolonHighlighting()<cr>$/;"	m
ACCESS	zpwr/.tmux/powerline/lib/inotify.py	/^	ACCESS = 0x00000001         # File was accessed.$/;"	v	class:INotify
ADDITIONAL_CONFIG_FILE_1	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^ADDITIONAL_CONFIG_FILE_1="$HOME\/.tmux\/additional_config_file_1"$/;"	v
ADDITIONAL_CONFIG_FILE_2	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^ADDITIONAL_CONFIG_FILE_2="$HOME\/.tmux\/additional_config_file_2"$/;"	v
ALL_EVENTS	zpwr/.tmux/powerline/lib/inotify.py	/^	ALL_EVENTS = ($/;"	v	class:INotify
ATTRIB	zpwr/.tmux/powerline/lib/inotify.py	/^	ATTRIB = 0x00000004         # Metadata changed.$/;"	v	class:INotify
ATTR_BOLD	zpwr/.tmux/powerline/colorscheme.py	/^ATTR_BOLD = 1$/;"	v
ATTR_BOLD	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_BOLD	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_BOLD	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_BOLD	zpwr/.tmux/powerline/renderers/tmux.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_BOLD	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_ITALIC	zpwr/.tmux/powerline/colorscheme.py	/^ATTR_ITALIC = 2$/;"	v
ATTR_ITALIC	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_ITALIC	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_ITALIC	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_ITALIC	zpwr/.tmux/powerline/renderers/tmux.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_ITALIC	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/colorscheme.py	/^ATTR_UNDERLINE = 4$/;"	v
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from powerline.colorscheme import ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/tmux.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
ATTR_UNDERLINE	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.colorscheme import ATTR_BOLD, ATTR_ITALIC, ATTR_UNDERLINE$/;"	i
AddCterm	zpwr/.vim/colors/lucius.vim	/^function! s:AddCterm(name)$/;"	f
AddGroundValues	zpwr/.vim/colors/gotham.vim	/^function! s:AddGroundValues(accumulator, ground, color)$/;"	f
AddGroundValues	zpwr/.vim/colors/gotham256.vim	/^function! s:AddGroundValues(accumulator, ground, color)$/;"	f
AddSpCterm	zpwr/.vim/colors/lucius.vim	/^function! s:AddSpCterm(name)$/;"	f
AliasEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class AliasEvent(NodeEvent):$/;"	c
ArgSpec	zpwr/.tmux/powerline/lint/inspect.py	/^from inspect import ArgSpec, getargspec$/;"	i
Args	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^class Args(object):$/;"	c
ArgumentParser	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from argparse import ArgumentParser$/;"	i
Attr	zpwr/.vim/colors/gotham.vim	/^function! s:Attr(group, attr)$/;"	f
Attr	zpwr/.vim/colors/gotham256.vim	/^function! s:Attr(group, attr)$/;"	f
Attrs	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from prompt_toolkit.styles import DynamicStyle, Attrs$/;"	i
AwesomeThread	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from powerline.bindings.wm.awesome import AwesomeThread$/;"	i
AwesomeThread	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^class AwesomeThread(Thread):$/;"	c
BASE_DIR	remoteRepoMonitorDaemon.sh	/^BASE_DIR="$HOME\/forkedRepos"$/;"	v
BASE_DIR	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^BASE_DIR="$HOME\/forkedRepos"$/;"	v
BINDINGS_DIR	zpwr/.tmux/plugins/tpm/tpm	/^BINDINGS_DIR="$CURRENT_DIR\/bindings"$/;"	v
BINDINGS_DIRECTORY	zpwr/.tmux/powerline/config.py	/^BINDINGS_DIRECTORY = os.path.join(POWERLINE_ROOT, 'powerline', 'bindings')$/;"	v
BLUE	blueText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	blueUpperText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	boldText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	coolFormatter.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	zpwr/scripts/blueText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	zpwr/scripts/blueUpperText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	zpwr/scripts/boldText.sh	/^BLUE='\\e[37;44m'$/;"	v
BLUE	zpwr/scripts/coolFormatter.sh	/^BLUE='\\e[37;44m'$/;"	v
BUFFER	zpwr/.shell_aliases_functions.sh	/^        BUFFER=""$/;"	v
BaseConstructor	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^class BaseConstructor:$/;"	c
BaseDirChanged	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^class BaseDirChanged(ValueError):$/;"	c
BaseDirChanged	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.inotify import INotifyTreeWatcher, DirTooLarge, NoSuchDir, BaseDirChanged$/;"	i
BasePrompt	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from IPython.Prompts import BasePrompt$/;"	i
BaseResolver	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^class BaseResolver:$/;"	c
BashPromptRenderer	zpwr/.tmux/powerline/renderers/shell/bash.py	/^class BashPromptRenderer(ShellRenderer):$/;"	c
Black	zpwr/.vim/colors/mango.vim	/^    let Black = "guifg=#444444 guibg=NONE gui=NONE ctermfg=238 ctermbg=NONE cterm=NONE"$/;"	v
Black	zpwr/.vim/colors/mango.vim	/^    let Black = "guifg=#585858 guibg=NONE gui=NONE ctermfg=240 ctermbg=NONE cterm=NONE"$/;"	v
Blue	zpwr/.vim/colors/mango.vim	/^  let Blue = "guifg=#5fafdf guibg=NONE gui=NONE ctermfg=74 ctermbg=NONE cterm=NONE"$/;"	v
BranchSegment	zpwr/.tmux/powerline/segments/common/vcs.py	/^class BranchSegment(Segment):$/;"	c
BranchSegment	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.segments.common.vcs import BranchSegment, StashSegment$/;"	i
Brightness	zpwr/.vim/colors/xterm16.vim	/^command! -nargs=* Brightness$/;"	c
Brightness	zpwr/.vim/colors/xterm16.vim	/^function! Brightness(...)$/;"	f
CALCULATED	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from libqtile.bar import CALCULATED$/;"	i
CARGO_PID	zpwr/install.sh	/^    CARGO_PID=$!$/;"	v
CLOCK_ID	zpwr/.tmux/powerline/lib/monotonic.py	/^			from time import CLOCK_MONOTONIC as CLOCK_ID$/;"	i
CLOCK_ID	zpwr/.tmux/powerline/lib/monotonic.py	/^			from time import CLOCK_MONOTONIC_RAW as CLOCK_ID$/;"	i
CLOCK_MONOTONIC	zpwr/.tmux/powerline/lib/monotonic.py	/^			CLOCK_MONOTONIC = 1$/;"	v
CLOCK_MONOTONIC_RAW	zpwr/.tmux/powerline/lib/monotonic.py	/^			CLOCK_MONOTONIC_RAW = 4$/;"	v
CLOEXEC	zpwr/.tmux/powerline/lib/inotify.py	/^	CLOEXEC = 0x80000$/;"	v	class:INotify
CLOSE	zpwr/.tmux/powerline/lib/inotify.py	/^	CLOSE = (CLOSE_WRITE | CLOSE_NOWRITE)  # Close.$/;"	v	class:INotify
CLOSE_NOWRITE	zpwr/.tmux/powerline/lib/inotify.py	/^	CLOSE_NOWRITE = 0x00000010  # Unwrittable file closed.$/;"	v	class:INotify
CLOSE_WRITE	zpwr/.tmux/powerline/lib/inotify.py	/^	CLOSE_WRITE = 0x00000008    # Writtable file was closed.$/;"	v	class:INotify
CMD	myWatchNoBlink.sh	/^        CMD="$@"$/;"	v
CMD	myWatchNoBlinkColorized.sh	/^        CMD="$@"$/;"	v
CMD	zpwr/scripts/myWatchNoBlink.sh	/^        CMD="$@"$/;"	v
CMD	zpwr/scripts/myWatchNoBlinkColorized.sh	/^        CMD="$@"$/;"	v
CMDNAME	mantozshcomp.py	/^CMDNAME = ""$/;"	v
CMDNAME	zpwr/scripts/mantozshcomp.py	/^CMDNAME = ""$/;"	v
COLS	myWatchNoBlink.sh	/^        COLS=$(tput cols)$/;"	v
COLS	myWatchNoBlinkColorized.sh	/^        COLS=$(tput cols)$/;"	v
COLS	zpwr/scripts/myWatchNoBlink.sh	/^        COLS=$(tput cols)$/;"	v
COLS	zpwr/scripts/myWatchNoBlinkColorized.sh	/^        COLS=$(tput cols)$/;"	v
COMPLETION_DIR	remoteRepoMonitorDaemon.sh	/^    COMPLETION_DIR="$HOME\/.oh-my-zsh\/custom\/plugins"$/;"	v
COMPLETION_DIR	zpwr/.shell_aliases_functions.sh	/^    COMPLETION_DIR="$HOME\/.oh-my-zsh\/custom\/plugins"$/;"	v
COMPLETION_DIR	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^    COMPLETION_DIR="$HOME\/.oh-my-zsh\/custom\/plugins"$/;"	v
CONFIG_DIR	remoteRepoMonitorDaemon.sh	/^CONFIG_DIR="$HOME\/forkedRepos\/$REPO_NAME"$/;"	v
CONFIG_DIR	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^CONFIG_DIR="$HOME\/forkedRepos\/$REPO_NAME"$/;"	v
CONFIG_FILE_NAME	zpwr/.tmux/powerline/bindings/config.py	/^CONFIG_FILE_NAME = re.compile(r'powerline_tmux_(?P<major>\\d+)\\.(?P<minor>\\d+)(?P<suffix>[a-z]+)?(?:_(?P<mod>plus|minus))?\\.conf')$/;"	v
CONFIG_MATCHERS	zpwr/.tmux/powerline/bindings/config.py	/^CONFIG_MATCHERS = {$/;"	v
CONFIG_PRIORITY	zpwr/.tmux/powerline/bindings/config.py	/^CONFIG_PRIORITY = {$/;"	v
COW_FILES	macOnly/randomCow.sh	/^    COW_FILES=($("$node_exe" -l | perl -ne 'do{{$_=~s@(\\x09|\\x20)+@\\x0a@g;print}} if !\/Cow files.*:\/'))$/;"	v
COW_FILES	macOnly/randomCow.sh	/^    COW_FILES=($(cowsay -l | perl -ne 'do{{$_=~s@(\\x09|\\x20)+@\\x0a@g;print}} if !\/Cow files.*:\/'))$/;"	v
COW_FILES	zpwr/scripts/macOnly/randomCow.sh	/^    COW_FILES=($("$node_exe" -l | perl -ne 'do{{$_=~s@(\\x09|\\x20)+@\\x0a@g;print}} if !\/Cow files.*:\/'))$/;"	v
COW_FILES	zpwr/scripts/macOnly/randomCow.sh	/^    COW_FILES=($(cowsay -l | perl -ne 'do{{$_=~s@(\\x09|\\x20)+@\\x0a@g;print}} if !\/Cow files.*:\/'))$/;"	v
CPULoadPercentSegment	zpwr/.tmux/powerline/segments/common/sys.py	/^	class CPULoadPercentSegment(ThreadedSegment):$/;"	c
CR	batchRename.sh	/^    local CR="\\r"$/;"	v
CR	openAll.sh	/^    local CR="\\r"$/;"	v
CR	zpwr/scripts/batchRename.sh	/^    local CR="\\r"$/;"	v
CR	zpwr/scripts/openAll.sh	/^    local CR="\\r"$/;"	v
CREATE	zpwr/.tmux/powerline/lib/inotify.py	/^	CREATE = 0x00000100         # Subfile was created.$/;"	v	class:INotify
CSAHi	zpwr/.vim/colors/gryffin.vim	/^    command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	zpwr/.vim/colors/gryffin.vim	/^    command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	zpwr/.vim/colors/herokudoc.vim	/^    command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	zpwr/.vim/colors/herokudoc.vim	/^    command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	zpwr/.vim/colors/iangenzo.vim	/^    command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	zpwr/.vim/colors/iangenzo.vim	/^    command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	zpwr/.vim/colors/legiblelight.vim	/^        command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	zpwr/.vim/colors/legiblelight.vim	/^        command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	zpwr/.vim/colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	zpwr/.vim/colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSV_PARSE_LINES	zpwr/.tmux/powerline/segments/vim/__init__.py	/^CSV_PARSE_LINES = 10$/;"	v
CSV_SNIFF_LINES	zpwr/.tmux/powerline/segments/vim/__init__.py	/^CSV_SNIFF_LINES = 100$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_graph.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_disable.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_disable.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^CURRENT_DIR="$( dirname ${BASH_SOURCE[0]} )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_save.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bin/clean_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bin/install_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bin/update_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bindings/clean_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bindings/install_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CURRENT_DIR	zpwr/.tmux/plugins/tpm/tpm	/^CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"$/;"	v
CUSTOM_PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^CUSTOM_PLUGINS_DIR="$HOME\/foo\/plugins"$/;"	v
CUSTOM_PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^CUSTOM_PLUGINS_DIR="$HOME\/foo\/plugins"$/;"	v
CheckPalette	zpwr/.vim/colors/sprinkles.vim	/^function! s:CheckPalette(palette)$/;"	f
Clear	zpwr/.vim/colors/gotham.vim	/^function! s:Clear(group)$/;"	f
Clear	zpwr/.vim/colors/gotham256.vim	/^function! s:Clear(group)$/;"	f
ClementinePlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class ClementinePlayerSegment(PlayerSegment):$/;"	c
CmusPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class CmusPlayerSegment(PlayerSegment):$/;"	c
CodeFile	boiler_gen.py	/^class CodeFile:$/;"	c
CodeFile	zpwr/scripts/boiler_gen.py	/^class CodeFile:$/;"	c
CoerceIO	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^class CoerceIO(StringIO):$/;"	c
Col	zpwr/.vim/colors/gotham.vim	/^function! s:Col(group, fg_name, ...)$/;"	f
Col	zpwr/.vim/colors/gotham256.vim	/^function! s:Col(group, fg_name, ...)$/;"	f
CollectionEndEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class CollectionEndEvent(Event):$/;"	c
CollectionNode	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^class CollectionNode(Node):$/;"	c
CollectionStartEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class CollectionStartEvent(NodeEvent):$/;"	c
Color	zpwr/.vim/colors/mdark.vim	/^function s:Color(name, color_settings)$/;"	f
ColorDictParser	zpwr/.vim/colors/distinguished.vim	/^	function! s:ColorDictParser(color_dict)$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-faff.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-greenish.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-material.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-stblue.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-stbright.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-steighties.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsHideCursor	zpwr/.vim/colors/colorsbox-stnight.vim	/^function! ColorsboxHlsHideCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-faff.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-greenish.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-material.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-stblue.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-stbright.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-steighties.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
ColorsboxHlsShowCursor	zpwr/.vim/colors/colorsbox-stnight.vim	/^function! ColorsboxHlsShowCursor()$/;"	f
Colorscheme	zpwr/.tmux/powerline/__init__.py	/^from powerline.colorscheme import Colorscheme$/;"	i
Colorscheme	zpwr/.tmux/powerline/colorscheme.py	/^class Colorscheme(object):$/;"	c
Composer	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^class Composer:$/;"	c
Composer	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.composer import Composer$/;"	i
ComposerError	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^class ComposerError(MarkedError):$/;"	c
ConfigArgParser	zpwr/.tmux/powerline/commands/config.py	/^class ConfigArgParser(argparse.ArgumentParser):$/;"	c
ConfigLoader	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.config import ConfigLoader$/;"	i
ConfigLoader	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.lib.config import ConfigLoader$/;"	i
ConfigLoader	zpwr/.tmux/powerline/lib/config.py	/^class ConfigLoader(MultiRunnedThread):$/;"	c
ConfigLoader	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lib.config import ConfigLoader$/;"	i
ConfigurableIPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	class ConfigurableIPythonPowerline(IPythonPowerline):$/;"	c	class:ShutdownHook
ConfigurableIPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class ConfigurableIPythonPowerline(IPythonPowerline):$/;"	c
ConfigurableIPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^class ConfigurableIPythonPowerline(IPythonPowerline):$/;"	c
Constructor	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^class Constructor(BaseConstructor):$/;"	c
Constructor	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.constructor import Constructor$/;"	i
ConstructorError	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^class ConstructorError(MarkedError):$/;"	c
Context	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.context import Context$/;"	i
Context	zpwr/.tmux/powerline/lint/context.py	/^class Context(tuple):$/;"	c
CursorColor	zpwr/.vim/colors/getfresh.vim	/^let CursorColor   = '#FF8939'$/;"	v
CursorLColor	zpwr/.vim/colors/getfresh.vim	/^let CursorLColor  = '#202020'$/;"	v
CwdSegment	zpwr/.tmux/powerline/segments/common/env.py	/^class CwdSegment(Segment):$/;"	c
CwdSegment	zpwr/.tmux/powerline/segments/shell.py	/^from powerline.segments.common.env import CwdSegment$/;"	i
DEFAULT_MAPPING_TAG	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	DEFAULT_MAPPING_TAG = 'tag:yaml.org,2002:map'$/;"	v	class:BaseResolver
DEFAULT_MODE_KEY	zpwr/.tmux/powerline/colorscheme.py	/^DEFAULT_MODE_KEY = None$/;"	v
DEFAULT_SCALAR_TAG	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	DEFAULT_SCALAR_TAG = 'tag:yaml.org,2002:str'$/;"	v	class:BaseResolver
DEFAULT_SEQUENCE_TAG	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	DEFAULT_SEQUENCE_TAG = 'tag:yaml.org,2002:seq'$/;"	v	class:BaseResolver
DEFAULT_SYSTEM_CONFIG_DIR	zpwr/.tmux/powerline/__init__.py	/^from powerline.config import DEFAULT_SYSTEM_CONFIG_DIR$/;"	i
DEFAULT_SYSTEM_CONFIG_DIR	zpwr/.tmux/powerline/config.py	/^DEFAULT_SYSTEM_CONFIG_DIR = None$/;"	v
DEFAULT_TPM_ENV_VAR_NAME	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^DEFAULT_TPM_ENV_VAR_NAME="TMUX_PLUGIN_MANAGER_PATH"$/;"	v
DEFAULT_TPM_PATH	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^DEFAULT_TPM_PATH="$HOME\/.tmux\/plugins\/"$/;"	v
DEFAULT_UPDATE_INTERVAL	zpwr/.tmux/powerline/__init__.py	/^DEFAULT_UPDATE_INTERVAL = 2$/;"	v
DEFAULT_UPDATE_INTERVAL	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from powerline.bindings.wm import DEFAULT_UPDATE_INTERVAL$/;"	i
DEFAULT_UPDATE_INTERVAL	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from powerline.bindings.wm import DEFAULT_UPDATE_INTERVAL$/;"	i
DEFAULT_UPDATE_INTERVAL	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^DEFAULT_UPDATE_INTERVAL = 0.5$/;"	v
DELETE	zpwr/.tmux/powerline/lib/inotify.py	/^	DELETE = 0x00000200         # Subfile was deleted.$/;"	v	class:INotify
DELETE_SELF	zpwr/.tmux/powerline/lib/inotify.py	/^	DELETE_SELF = 0x00000400    # Self was deleted.$/;"	v	class:INotify
DIGITS	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^DIGITS = re.compile('[0-9]+')$/;"	v
DIR	macOnly/rsyncr.sh	/^localDIR="$1"$/;"	v
DIR	zpwr/scripts/macOnly/rsyncr.sh	/^localDIR="$1"$/;"	v
DIRECTORY	zpwr/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^DIRECTORY="$2"$/;"	v
DIRECTORY	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^DIRECTORY="$2"$/;"	v
DIRECTORY	zpwr/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^DIRECTORY="$2"$/;"	v
DIRECTORY	zpwr/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^DIRECTORY="$2"$/;"	v
DONE	zpwr/.shell_aliases_functions.sh	/^    DONE=false$/;"	v
DONT_FOLLOW	zpwr/.tmux/powerline/lib/inotify.py	/^	DONT_FOLLOW = 0x02000000  # Do not follow a sym link.$/;"	v	class:INotify
DarkBlue	zpwr/.vim/colors/getfresh.vim	/^let DarkBlue      = '#1CA1DB'$/;"	v
DarkCyan	zpwr/.vim/colors/getfresh.vim	/^let DarkCyan      = '#EA7D24'$/;"	v
DarkGray	zpwr/.vim/colors/getfresh.vim	/^let DarkGray      = '#393939'$/;"	v
DarkGreen	zpwr/.vim/colors/getfresh.vim	/^let DarkGreen     = '#9DBA3A'$/;"	v
DarkMagenta	zpwr/.vim/colors/getfresh.vim	/^let DarkMagenta   = '#652F90'$/;"	v
DarkRed	zpwr/.vim/colors/getfresh.vim	/^let DarkRed       = '#BF1E2D'$/;"	v
DarkYellow	zpwr/.vim/colors/getfresh.vim	/^let DarkYellow    = '#F5B915'$/;"	v
DbusPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class DbusPlayerSegment(PlayerSegment):$/;"	c
Dec2hex	zpwr/.vim/colors/spectro.vim	/^fun! Dec2hex(s)$/;"	f
DeferredWatcher	zpwr/.tmux/powerline/lib/config.py	/^class DeferredWatcher(object):$/;"	c
DelayedEchoErr	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.markedjson.error import DelayedEchoErr, Mark$/;"	i
DelayedEchoErr	zpwr/.tmux/powerline/lint/markedjson/error.py	/^class DelayedEchoErr(EchoErr):$/;"	c
DelayedEchoErr	zpwr/.tmux/powerline/lint/spec.py	/^from powerline.lint.markedjson.error import echoerr, DelayedEchoErr, NON_PRINTABLE_STR$/;"	i
Deroffer	mantozshcomp.py	/^class Deroffer:$/;"	c
Deroffer	zpwr/scripts/mantozshcomp.py	/^class Deroffer:$/;"	c
Description	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	Description=tmux default session (detached)$/;"	v
DirTooLarge	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^class DirTooLarge(ValueError):$/;"	c
DirTooLarge	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.inotify import INotifyTreeWatcher, DirTooLarge, NoSuchDir, BaseDirChanged$/;"	i
DocumentEndEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class DocumentEndEvent(Event):$/;"	c
DocumentStartEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class DocumentStartEvent(Event):$/;"	c
Documentation	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	Documentation=man:tmux(1)$/;"	v
DummyTreeWatcher	zpwr/.tmux/powerline/lib/watcher/tree.py	/^class DummyTreeWatcher(object):$/;"	c
DummyWatcher	zpwr/.tmux/powerline/lib/config.py	/^class DummyWatcher(object):$/;"	c
DynamicStyle	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from prompt_toolkit.styles import DynamicStyle, Attrs$/;"	i
E2T	zpwr/.vim/colors/bocau.vim	/^function! E2T(a)$/;"	f
E2T	zpwr/.vim/colors/jiks.vim	/^function! E2T(a)$/;"	f
E2T	zpwr/.vim/colors/vividchalk.vim	/^function! E2T(a)$/;"	f
ECHO	oldCounter.sh	/^        ECHO="true"$/;"	v
ECHO	zpwr/scripts/oldCounter.sh	/^        ECHO="true"$/;"	v
END_MESSAGE	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^END_MESSAGE="$2"$/;"	v
ENOENT	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from errno import ENOENT$/;"	i
ESCAPE_CHAR	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^ESCAPE_CHAR = '\\001'$/;"	v
ESCAPE_CODES	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	ESCAPE_CODES = {$/;"	v	class:Scanner
ESCAPE_REPLACEMENTS	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	ESCAPE_REPLACEMENTS = {$/;"	v	class:Scanner
EXA_COMMAND	clearList.sh	/^EXA_COMMAND="command exa --git -il -F -H --extended --color-scale -g -a --colour=always"$/;"	v
EXA_COMMAND	zpwr/scripts/clearList.sh	/^EXA_COMMAND="command exa --git -il -F -H --extended --color-scale -g -a --colour=always"$/;"	v
EXCL_UNLINK	zpwr/.tmux/powerline/lib/inotify.py	/^	EXCL_UNLINK = 0x04000000  # Exclude events on unlinked objects.$/;"	v	class:INotify
EXISTING_PANES_VAR	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	EXISTING_PANES_VAR="${EXISTING_PANES_VAR}${delimiter}${pane_custom_id}"$/;"	v
EXISTING_PANES_VAR	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^EXISTING_PANES_VAR=""$/;"	v
EchoErr	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.markedjson.error import echoerr, EchoErr, MarkedError$/;"	i
EchoErr	zpwr/.tmux/powerline/lint/markedjson/error.py	/^class EchoErr(object):$/;"	c
EmailIMAPSegment	zpwr/.tmux/powerline/segments/common/mail.py	/^class EmailIMAPSegment(KwThreadedSegment):$/;"	c
EmptyArgs	zpwr/.tmux/powerline/bindings/config.py	/^class EmptyArgs(object):$/;"	c
Environment	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	Environment=DISPLAY=:0$/;"	v
Environment	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^class Environment(object):$/;"	c
Event	zpwr/.tmux/powerline/__init__.py	/^from threading import Lock, Event$/;"	i
Event	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from threading import Thread, Event$/;"	i
Event	zpwr/.tmux/powerline/lib/config.py	/^from threading import Event, Lock$/;"	i
Event	zpwr/.tmux/powerline/lib/threaded.py	/^from threading import Thread, Lock, Event$/;"	i
Event	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class Event(object):$/;"	c
ExecStart	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	ExecStart=\/usr\/bin\/tmux ${systemd_tmux_server_start_cmd}$/;"	v
ExecStop	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	ExecStop=${HOME}\/.tmux\/plugins\/tmux-resurrect\/scripts\/save.sh$/;"	v
ExecStop	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	ExecStop=\/usr\/bin\/tmux kill-server$/;"	v
ExternalIpSegment	zpwr/.tmux/powerline/segments/common/net.py	/^class ExternalIpSegment(ThreadedSegment):$/;"	c
FAIL	zpwr/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^	FAIL="true"$/;"	v
FIGLET_DIR	macOnly/figletRandomFont.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	macOnly/figletRandomFont.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	macOnly/figletRandomFontOnce.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	macOnly/figletRandomFontOnce.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	macOnly/figletRotater.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	macOnly/figletRotater.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	macOnly/menkeTechRandomFont.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	macOnly/menkeTechRandomFont.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	zpwr/.shell_aliases_functions.sh	/^        FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	zpwr/.shell_aliases_functions.sh	/^        FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRandomFont.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRandomFont.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRotater.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/figletRotater.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^    FIGLET_DIR="\/usr\/local\/Cellar\/figlet\/2.2.5\/share\/figlet\/fonts"$/;"	v
FIGLET_DIR	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^    FIGLET_DIR="\/usr\/share\/figlet"$/;"	v
FILTER	macOnly/figletRandomFont.sh	/^FILTER="$2"$/;"	v
FILTER	macOnly/figletRandomFontOnce.sh	/^FILTER="$2"$/;"	v
FILTER	macOnly/figletRotater.sh	/^FILTER="$2"$/;"	v
FILTER	macOnly/menkeTechRandomFont.sh	/^FILTER="$1"$/;"	v
FILTER	macOnly/randomCow.sh	/^FILTER="$2"$/;"	v
FILTER	zpwr/scripts/macOnly/figletRandomFont.sh	/^FILTER="$2"$/;"	v
FILTER	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^FILTER="$2"$/;"	v
FILTER	zpwr/scripts/macOnly/figletRotater.sh	/^FILTER="$2"$/;"	v
FILTER	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^FILTER="$1"$/;"	v
FILTER	zpwr/scripts/macOnly/randomCow.sh	/^FILTER="$2"$/;"	v
FINDERS_WITHOUT_PATH	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^FINDERS_WITHOUT_PATH = set(($/;"	v
FailedUnicode	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.unicode import unicode, safe_unicode, FailedUnicode$/;"	i
FailedUnicode	zpwr/.tmux/powerline/lib/unicode.py	/^class FailedUnicode(unicode):$/;"	c
FailedUnicode	zpwr/.tmux/powerline/vim.py	/^from powerline import Powerline, FailedUnicode, finish_common_config$/;"	i
FalseObject	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class FalseObject(object):$/;"	c
FileStatusCache	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^class FileStatusCache(dict):$/;"	c
FlowEntryToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class FlowEntryToken(Token):$/;"	c
FlowMappingEndToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class FlowMappingEndToken(Token):$/;"	c
FlowMappingStartToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class FlowMappingStartToken(Token):$/;"	c
FlowSequenceEndToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class FlowSequenceEndToken(Token):$/;"	c
FlowSequenceStartToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class FlowSequenceStartToken(Token):$/;"	c
FoldColBG	zpwr/.vim/colors/getfresh.vim	/^let FoldColBG     = '#050505'$/;"	v
FoldFG	zpwr/.vim/colors/getfresh.vim	/^let FoldFG        = DarkCyan$/;"	v
FoldLineBG	zpwr/.vim/colors/getfresh.vim	/^let FoldLineBG    = NormalBG$/;"	v
FormatRGB	zpwr/.vim/colors/spectro.vim	/^fun! FormatRGB(rgb)$/;"	f
FrameType	zpwr/.tmux/powerline/lib/debug.py	/^from types import FrameType$/;"	i
GIT_AUTHOR_EMAIL	zpwr/.shell_aliases_functions.sh	/^        GIT_AUTHOR_EMAIL="'$newEmail'"; git commit-tree "$@";$/;"	v
GIT_TERMINAL_PROMPT	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^		GIT_TERMINAL_PROMPT=0 git clone --recursive "$plugin" >\/dev\/null 2>&1$/;"	v
GIT_TERMINAL_PROMPT	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^		GIT_TERMINAL_PROMPT=0 git pull &&$/;"	v
GIT_TERMINAL_PROMPT	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^		GIT_TERMINAL_PROMPT=0 git submodule update --init --recursive$/;"	v
GRC_DIR	zpwr/install.sh	/^    GRC_DIR=\/usr\/local\/share\/grc$/;"	v
GRC_DIR	zpwr/install.sh	/^    GRC_DIR=\/usr\/share\/grc$/;"	v
GUI	zpwr/.vim/colors/getfresh.vim	/^let GUI           = 'none'$/;"	v
GetColor	zpwr/.vim/colors/fx.vim	/^func! g:GetColor(color, term)$/;"	f
GetObject	zpwr/.tmux/powerline/segments/common/bat.py	/^			from win32com.client import GetObject$/;"	i
GetTickCount64	zpwr/.tmux/powerline/lib/monotonic.py	/^			GetTickCount64 = ctypes.windll.kernel32.GetTickCount64$/;"	v
GitRepository	zpwr/.tmux/powerline/lib/vcs/git.py	/^class GitRepository(object):$/;"	c
Gray	zpwr/.vim/colors/mango.vim	/^  let Gray = "guifg=#bcbcbc guibg=NONE gui=NONE ctermfg=250 ctermbg=NONE cterm=NONE"$/;"	v
Green	zpwr/.vim/colors/mango.vim	/^  let Green = "guifg=#87af5f guibg=NONE gui=NONE ctermfg=107 ctermbg=NONE cterm=NONE"$/;"	v
GruvboxHlsHideCursor	zpwr/.vim/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	zpwr/.vim/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
H	zpwr/.vim/colors/abbott.vim	/^function! s:H(group, style)$/;"	f
H	zpwr/.vim/colors/saturn.vim	/^fu! <SID>H(group, fg, bg, attr)$/;"	f
HELPERS_DIR	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^HELPERS_DIR="$CURRENT_DIR"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^HELPERS_DIR="$CURRENT_DIR"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^HELPERS_DIR="${CURRENT_DIR}\/scripts"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/bindings/clean_plugins	/^HELPERS_DIR="$ZPWR_SCRIPTS_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/bindings/install_plugins	/^HELPERS_DIR="$ZPWR_SCRIPTS_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^HELPERS_DIR="$ZPWR_SCRIPTS_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^HELPERS_DIR="$CURRENT_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^HELPERS_DIR="$CURRENT_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^HELPERS_DIR="$CURRENT_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^HELPERS_DIR="$CURRENT_DIR\/helpers"$/;"	v
HELPERS_DIR	zpwr/.tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^HELPERS_DIR="$CURRENT_DIR\/helpers"$/;"	v
HI	zpwr/.vim/colors/jellyx.vim	/^command! -nargs=+ HI call s:HI(<f-args>)$/;"	c
HI	zpwr/.vim/colors/jellyx.vim	/^function! s:HI(group, fg, bg, fx, ...)$/;"	f
HL	zpwr/.vim/colors/PaperColor.vim	/^fun s:HL(group, fg, bg, attr)$/;"	f
HL	zpwr/.vim/colors/alduin.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/badwolf.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/bluewolf.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-faff.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-greenish.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-material.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-stblue.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-stbright.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-steighties.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/colorsbox-stnight.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/enigma.vim	/^fun <sid>HL(group, ctermfg, ctermbg, attr)$/;"	f
HL	zpwr/.vim/colors/goodwolf.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/laederon.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/materialbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/preto.vim	/^function! s:HL(item, fgColor, bgColor, style, ...)$/;"	f
HL	zpwr/.vim/colors/sierra.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	zpwr/.vim/colors/ubaryd.vim	/^function! s:HL(group, fg, ...)$/;"	f
HTTPError	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.error import HTTPError  # NOQA$/;"	i
HTTPError	zpwr/.tmux/powerline/lib/url.py	/^	from urllib2 import urlopen, HTTPError  # NOQA$/;"	i
Helptags	zpwr/.vim/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiLink	zpwr/.vim/colors/ciscoacl.vim	/^	   command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	zpwr/.vim/colors/ciscoacl.vim	/^	   command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	zpwr/.vim/colors/pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	zpwr/.vim/colors/pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	zpwr/.vim/colors/psql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	zpwr/.vim/colors/psql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	zpwr/.vim/colors/rtl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	zpwr/.vim/colors/rtl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight	zpwr/.vim/colors/gotham.vim	/^function! s:Highlight(args)$/;"	f
Highlight	zpwr/.vim/colors/gotham256.vim	/^function! s:Highlight(args)$/;"	f
Highlight	zpwr/.vim/colors/harlequin.vim	/^function! s:Highlight(group_name, guifg, guibg, gui, guisp)$/;"	f
HighlightX	zpwr/.vim/colors/harlequin.vim	/^function! s:HighlightX(group_name, guifg, guibg, gui, guisp)$/;"	f
Hsl2rgb	zpwr/.vim/colors/spectro.vim	/^fun! Hsl2rgb(h)$/;"	f
Hue2rgb	zpwr/.vim/colors/spectro.vim	/^fun! Hue2rgb(v1,v2,H)$/;"	f
I3Powerline	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^class I3Powerline(Powerline):$/;"	c
I3Thread	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^	class I3Thread(Thread):$/;"	c	function:i3_subscribe
I3barRenderer	zpwr/.tmux/powerline/renderers/i3bar.py	/^class I3barRenderer(Renderer):$/;"	c
IFS	listAllCommands.sh	/^IFS=:$/;"	v
IFS	saygoogle.sh	/^IFS=+$/;"	v
IFS	sortedArrayCounter.sh	/^        IFS="$oldifs"$/;"	v
IFS	sortedArrayCounter.sh	/^IFS=$'\\n'$/;"	v
IFS	sortedArrayCounter.sh	/^IFS=:$/;"	v
IFS	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    IFS='.' read -ra current_version <<<"$tmux_version"$/;"	v
IFS	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    IFS='.' read -ra wanted_version <<<"$1"$/;"	v
IFS	zpwr/scripts/listAllCommands.sh	/^IFS=:$/;"	v
IFS	zpwr/scripts/saygoogle.sh	/^IFS=+$/;"	v
IFS	zpwr/scripts/sortedArrayCounter.sh	/^        IFS="$oldifs"$/;"	v
IFS	zpwr/scripts/sortedArrayCounter.sh	/^IFS=$'\\n'$/;"	v
IFS	zpwr/scripts/sortedArrayCounter.sh	/^IFS=:$/;"	v
IGNORED	zpwr/.tmux/powerline/lib/inotify.py	/^	IGNORED = 0x00008000     # File was ignored.$/;"	v	class:INotify
IMAP4	zpwr/.tmux/powerline/segments/common/mail.py	/^from imaplib import IMAP4_SSL_PORT, IMAP4_SSL, IMAP4$/;"	i
IMAP4_SSL	zpwr/.tmux/powerline/segments/common/mail.py	/^from imaplib import IMAP4_SSL_PORT, IMAP4_SSL, IMAP4$/;"	i
IMAP4_SSL_PORT	zpwr/.tmux/powerline/segments/common/mail.py	/^from imaplib import IMAP4_SSL_PORT, IMAP4_SSL, IMAP4$/;"	i
INSTALLER_DIR	zpwr/common.sh	/^INSTALLER_DIR="$(pwd -P)"$/;"	v
INSTALLER_DIR	zpwr/go_install.sh	/^INSTALLER_DIR="$(pwd -P)"$/;"	v
INSTALLER_DIR	zpwr/install.sh	/^INSTALLER_DIR="$(pwd -P)"$/;"	v
INSTALLER_DIR	zpwr/plugins_install.sh	/^INSTALLER_DIR="$(pwd -P)"$/;"	v
INSTALLER_DIR	zpwr/rustupinstall.sh	/^INSTALLER_DIR="$(pwd -P)"$/;"	v
INSTALLER_DIR	zpwr/tmux_plugins_install.sh	/^INSTALLER_DIR="$(pwd)"$/;"	v
INSTALLER_DIR	zpwr/vim_plugins_install.sh	/^INSTALLER_DIR="$(pwd)"$/;"	v
INSTALLER_DIR	zpwr/zsh_plugins_install.sh	/^INSTALLER_DIR="$(pwd)"$/;"	v
INTERFACE	macOnly/tor.sh	/^INTERFACE=Wi-Fi$/;"	v
INTERFACE	zpwr/scripts/macOnly/tor.sh	/^INTERFACE=Wi-Fi$/;"	v
INotify	zpwr/.tmux/powerline/lib/inotify.py	/^class INotify(object):$/;"	c
INotify	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from powerline.lib.inotify import INotify$/;"	i
INotifyError	zpwr/.tmux/powerline/lib/inotify.py	/^class INotifyError(Exception):$/;"	c
INotifyError	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.inotify import INotifyError$/;"	i
INotifyError	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.inotify import INotifyError$/;"	i
INotifyFileWatcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.watcher.inotify import INotifyFileWatcher$/;"	i
INotifyFileWatcher	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^class INotifyFileWatcher(INotify):$/;"	c
INotifyTreeWatcher	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^class INotifyTreeWatcher(INotify):$/;"	c
INotifyTreeWatcher	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.inotify import INotifyTreeWatcher, DirTooLarge, NoSuchDir, BaseDirChanged$/;"	i
IPythonInfo	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from powerline.ipython import IPythonPowerline, IPythonInfo$/;"	i
IPythonInfo	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class IPythonInfo(object):$/;"	c
IPythonInfo	zpwr/.tmux/powerline/ipython.py	/^class IPythonInfo(object):$/;"	c
IPythonInfo	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from powerline.ipython import IPythonInfo$/;"	i
IPythonNonPromptRenderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^class IPythonNonPromptRenderer(IPythonPre50Renderer):$/;"	c
IPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from powerline.ipython import IPythonPowerline, IPythonInfo$/;"	i
IPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from powerline.ipython import IPythonPowerline, RewriteResult$/;"	i
IPythonPowerline	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from powerline.ipython import IPythonPowerline$/;"	i
IPythonPowerline	zpwr/.tmux/powerline/ipython.py	/^class IPythonPowerline(Powerline):$/;"	c
IPythonPre50Renderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^class IPythonPre50Renderer(IPythonRenderer, ShellRenderer):$/;"	c
IPythonPromptRenderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^class IPythonPromptRenderer(IPythonPre50Renderer, ReadlineRenderer):$/;"	c
IPythonPygmentsRenderer	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^class IPythonPygmentsRenderer(IPythonRenderer):$/;"	c
IPythonRenderer	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^class IPythonRenderer(PromptRenderer):$/;"	c
IPythonRenderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from powerline.renderers.ipython import IPythonRenderer$/;"	i
IPythonRenderer	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from powerline.renderers.ipython import IPythonRenderer$/;"	i
ISDIR	zpwr/.tmux/powerline/lib/inotify.py	/^	ISDIR = 0x40000000        # Event occurred against dir.$/;"	v	class:INotify
ITunesPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class ITunesPlayerSegment(PlayerSegment):$/;"	c
InsertStatuslineColor	zpwr/.vim/colors/getfresh.vim	/^function! InsertStatuslineColor(mode)$/;"	f
JStr	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.context import JStr, list_themes$/;"	i
JStr	zpwr/.tmux/powerline/lint/context.py	/^class JStr(unicode):$/;"	c
KEY_BINDING_REGEX	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^KEY_BINDING_REGEX="bind-key[[:space:]]\\+\\(-r[[:space:]]\\+\\)\\?\\(-T prefix[[:space:]]\\+\\)\\?"$/;"	v
KeyToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class KeyToken(Token):$/;"	c
KillMode	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	KillMode=none$/;"	v
KshPromptRenderer	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^class KshPromptRenderer(ShellRenderer):$/;"	c
KwThreadedSegment	zpwr/.tmux/powerline/lib/threaded.py	/^class KwThreadedSegment(ThreadedSegment):$/;"	c
KwThreadedSegment	zpwr/.tmux/powerline/segments/common/mail.py	/^from powerline.lib.threaded import KwThreadedSegment$/;"	i
KwThreadedSegment	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.lib.threaded import ThreadedSegment, KwThreadedSegment$/;"	i
KwThreadedSegment	zpwr/.tmux/powerline/segments/common/wthr.py	/^from powerline.lib.threaded import KwThreadedSegment$/;"	i
LC_MESSAGES	zpwr/.shell_aliases_functions.sh	/^  LC_MESSAGES=C command grep -Hm1 '^' < "${1-$REPLY}" | command grep -sq '^Binary'$/;"	v
LOGFILE	zpwr/scripts/updaterEmail.sh	/^LOGFILE="\/Users\/jacobmenke\/updaterlog.txt"$/;"	v
LOG_KEYS	zpwr/.tmux/powerline/__init__.py	/^LOG_KEYS = set(('log_format', 'log_level', 'log_file', 'paths'))$/;"	v
LemonbarPowerline	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from powerline.lemonbar import LemonbarPowerline$/;"	i
LemonbarPowerline	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from powerline.lemonbar import LemonbarPowerline$/;"	i
LemonbarPowerline	zpwr/.tmux/powerline/lemonbar.py	/^class LemonbarPowerline(Powerline):$/;"	c
LemonbarRenderer	zpwr/.tmux/powerline/renderers/lemonbar.py	/^class LemonbarRenderer(Renderer):$/;"	c
LightBlue	zpwr/.vim/colors/getfresh.vim	/^let LightBlue     = '#00AFDA'$/;"	v
LightCyan	zpwr/.vim/colors/getfresh.vim	/^let LightCyan     = '#F79321'$/;"	v
LightGray	zpwr/.vim/colors/getfresh.vim	/^let LightGray     = '#AF875F'$/;"	v
LightGreen	zpwr/.vim/colors/getfresh.vim	/^let LightGreen    = '#A9C938'$/;"	v
LightMagenta	zpwr/.vim/colors/getfresh.vim	/^let LightMagenta  = '#894E9F'$/;"	v
LightRed	zpwr/.vim/colors/getfresh.vim	/^let LightRed      = '#E7212A'$/;"	v
LightYellow	zpwr/.vim/colors/getfresh.vim	/^let LightYellow   = '#F7D325'$/;"	v
LineNrBG	zpwr/.vim/colors/getfresh.vim	/^let LineNrBG      = '#101010'$/;"	v
LineNrFG	zpwr/.vim/colors/getfresh.vim	/^let LineNrFG      = '#555555'$/;"	v
LoadRandomColorScheme	zpwr/.vim/colors/random.vim	/^  function s:LoadRandomColorScheme()$/;"	f
Load_Settings_Override	zpwr/.vim/colors/PaperColor.vim	/^fun s:Load_Settings_Override(custom)$/;"	f
Loader	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^from powerline.lint.markedjson.loader import Loader$/;"	i
Loader	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^class Loader(Reader, Scanner, Parser, Composer, Constructor, Resolver):$/;"	c
Lock	zpwr/.tmux/powerline/__init__.py	/^from threading import Lock, Event$/;"	i
Lock	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from threading import Lock, Timer$/;"	i
Lock	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from threading import Lock$/;"	i
Lock	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from threading import Lock, Timer$/;"	i
Lock	zpwr/.tmux/powerline/lib/config.py	/^from threading import Event, Lock$/;"	i
Lock	zpwr/.tmux/powerline/lib/threaded.py	/^from threading import Thread, Lock, Event$/;"	i
Lock	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from threading import Lock$/;"	i
LuciusBlack	zpwr/.vim/colors/lucius.vim	/^command! LuciusBlack call SetLucius("dark", "normal", "high")$/;"	c
LuciusBlackHighContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusBlackHighContrast call SetLucius("dark", "high", "high")$/;"	c
LuciusBlackLowContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusBlackLowContrast call SetLucius("dark", "low", "high")$/;"	c
LuciusDark	zpwr/.vim/colors/lucius.vim	/^command! LuciusDark call SetLucius("dark", "normal", "normal")$/;"	c
LuciusDarkHighContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusDarkHighContrast call SetLucius("dark", "high", "normal")$/;"	c
LuciusDarkLowContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusDarkLowContrast call SetLucius("dark", "low", "normal")$/;"	c
LuciusLight	zpwr/.vim/colors/lucius.vim	/^command! LuciusLight call SetLucius("light", "normal", "normal")$/;"	c
LuciusLightHighContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusLightHighContrast call SetLucius("light", "high", "normal")$/;"	c
LuciusLightLowContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusLightLowContrast call SetLucius("light", "low", "normal")$/;"	c
LuciusWhite	zpwr/.vim/colors/lucius.vim	/^command! LuciusWhite call SetLucius("light", "normal", "high")$/;"	c
LuciusWhiteHighContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusWhiteHighContrast call SetLucius("light", "high", "high")$/;"	c
LuciusWhiteLowContrast	zpwr/.vim/colors/lucius.vim	/^command! LuciusWhiteLowContrast call SetLucius("light", "low", "high")$/;"	c
M	zpwr/.vim/colors/bocau.vim	/^fun! s:M(a)$/;"	f
M	zpwr/.vim/colors/hotpot.vim	/^fun! <SID>M(a)$/;"	f
M	zpwr/.vim/colors/inkpot.vim	/^fun! <SID>M(a)$/;"	f
M	zpwr/.vim/colors/jiks.vim	/^fun! s:M(a)$/;"	f
M	zpwr/.vim/colors/pf_earth.vim	/^fun! <SID>M(a)$/;"	f
M	zpwr/.vim/colors/vividchalk.vim	/^fun! s:M(a)$/;"	f
MASK_ADD	zpwr/.tmux/powerline/lib/inotify.py	/^	MASK_ADD = 0x20000000     # Add to the mask of an already existing watch.$/;"	v	class:INotify
MESSAGE	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^MESSAGE="$1"$/;"	v
MODIFY	zpwr/.tmux/powerline/lib/inotify.py	/^	MODIFY = 0x00000002         # File was modified.$/;"	v	class:INotify
MOVE	zpwr/.tmux/powerline/lib/inotify.py	/^	MOVE = (MOVED_FROM | MOVED_TO)         # Moves.$/;"	v	class:INotify
MOVED_FROM	zpwr/.tmux/powerline/lib/inotify.py	/^	MOVED_FROM = 0x00000040     # File was moved from X.$/;"	v	class:INotify
MOVED_TO	zpwr/.tmux/powerline/lib/inotify.py	/^	MOVED_TO = 0x00000080       # File was moved to Y.$/;"	v	class:INotify
MOVE_SELF	zpwr/.tmux/powerline/lib/inotify.py	/^	MOVE_SELF = 0x00000800      # Self was moved.$/;"	v	class:INotify
Magics	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from IPython.core.magic import Magics, magics_class, line_magic$/;"	i
ManParser	mantozshcomp.py	/^class ManParser(object):$/;"	c
ManParser	zpwr/scripts/mantozshcomp.py	/^class ManParser(object):$/;"	c
MappingEndEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class MappingEndEvent(CollectionEndEvent):$/;"	c
MappingNode	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^class MappingNode(CollectionNode):$/;"	c
MappingStartEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class MappingStartEvent(CollectionStartEvent):$/;"	c
Mark	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.markedjson.error import DelayedEchoErr, Mark$/;"	i
Mark	zpwr/.tmux/powerline/lint/markedjson/error.py	/^class Mark:$/;"	c
Mark	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from powerline.lint.markedjson.error import MarkedError, Mark, NON_PRINTABLE_RE$/;"	i
Marked	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^		class Marked(MarkedValue):$/;"	c	function:gen_marked_value
MarkedDict	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedDict(dict):$/;"	c
MarkedError	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.markedjson.error import echoerr, EchoErr, MarkedError$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from powerline.lint.markedjson.error import MarkedError$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from powerline.lint.markedjson.error import MarkedError$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/error.py	/^class MarkedError(Exception):$/;"	c
MarkedError	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from powerline.lint.markedjson.error import MarkedError$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from powerline.lint.markedjson.error import MarkedError, Mark, NON_PRINTABLE_RE$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from powerline.lint.markedjson.error import MarkedError$/;"	i
MarkedError	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from powerline.lint.markedjson.error import MarkedError$/;"	i
MarkedFloat	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedFloat(float):$/;"	c
MarkedInt	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedInt(int):$/;"	c
MarkedList	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedList(list):$/;"	c
MarkedUnicode	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.markedjson.markedvalue import MarkedUnicode$/;"	i
MarkedUnicode	zpwr/.tmux/powerline/lint/context.py	/^from powerline.lint.markedjson.markedvalue import MarkedUnicode$/;"	i
MarkedUnicode	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedUnicode(unicode):$/;"	c
MarkedValue	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^class MarkedValue:$/;"	c
Marklar	zpwr/.vim/colors/marklar.vim	/^        command! -nargs=*  Marklar  :call s:Marklar(<f-args>)$/;"	c
Marklar	zpwr/.vim/colors/marklar.vim	/^        function! s:Marklar(...)$/;"	f
MaterialboxHlsHideCursor	zpwr/.vim/colors/materialbox.vim	/^function! MaterialboxHlsHideCursor()$/;"	f
MaterialboxHlsShowCursor	zpwr/.vim/colors/materialbox.vim	/^function! MaterialboxHlsShowCursor()$/;"	f
MethodType	zpwr/.tmux/powerline/lib/threaded.py	/^from types import MethodType$/;"	i
MethodType	zpwr/.tmux/powerline/segments/__init__.py	/^from types import MethodType$/;"	i
MocPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class MocPlayerSegment(PlayerSegment):$/;"	c
MpdPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class MpdPlayerSegment(PlayerSegment):$/;"	c
MultiRunnedThread	zpwr/.tmux/powerline/lib/config.py	/^from powerline.lib.threaded import MultiRunnedThread$/;"	i
MultiRunnedThread	zpwr/.tmux/powerline/lib/threaded.py	/^class MultiRunnedThread(object):$/;"	c
NBSP	zpwr/.tmux/powerline/renderer.py	/^NBSP = ' '$/;"	v
NERD_TREE_RE	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^NERD_TREE_RE = re.compile(b'NERD_tree_\\\\d+')$/;"	v
NONBLOCK	zpwr/.tmux/powerline/lib/inotify.py	/^	NONBLOCK = 0x800$/;"	v	class:INotify
NON_DIGITS	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^NON_DIGITS = re.compile('[^0-9]+')$/;"	v
NON_LETTERS	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^NON_LETTERS = re.compile('[^a-z]+')$/;"	v
NON_PRINTABLE_RE	zpwr/.tmux/powerline/lint/markedjson/error.py	/^NON_PRINTABLE_RE = re.compile(NON_PRINTABLE_STR)$/;"	v
NON_PRINTABLE_RE	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from powerline.lint.markedjson.error import MarkedError, Mark, NON_PRINTABLE_RE$/;"	i
NON_PRINTABLE_RE	zpwr/.tmux/powerline/lint/spec.py	/^NON_PRINTABLE_RE = re.compile($/;"	v
NON_PRINTABLE_STR	zpwr/.tmux/powerline/lint/markedjson/error.py	/^NON_PRINTABLE_STR = ($/;"	v
NON_PRINTABLE_STR	zpwr/.tmux/powerline/lint/spec.py	/^from powerline.lint.markedjson.error import echoerr, DelayedEchoErr, NON_PRINTABLE_STR$/;"	i
NOQA	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from pygments.token import Token  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/monotonic.py	/^		from time import time as monotonic  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/url.py	/^	from urllib import urlencode as urllib_urlencode  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.error import HTTPError  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.parse import urlencode as urllib_urlencode  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.request import urlopen  # NOQA$/;"	i
NOQA	zpwr/.tmux/powerline/lib/url.py	/^	from urllib2 import urlopen, HTTPError  # NOQA$/;"	i
NefertitiBrighten	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=? NefertitiBrighten :call <SID>_nefertiti_change_brightness(<q-args>, 1)$/;"	c
NefertitiColors	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=0 NefertitiColors :call <SID>_nefertiti_set_colors()$/;"	c
NefertitiDarken	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=? NefertitiDarken :call <SID>_nefertiti_change_brightness(<q-args>, 0)$/;"	c
NefertitiReset	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=0 NefertitiReset :call <SID>_nefertiti_reset_brightness()$/;"	c
NefertitiSearchBrighten	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=? NefertitiSearchBrighten :call <SID>_nefertiti_search_highlight_intensity(<q-args>, 1)$/;"	c
NefertitiSearchDarken	zpwr/.vim/colors/nefertiti.vim	/^    command! -nargs=? NefertitiSearchDarken :call <SID>_nefertiti_search_highlight_intensity(<q-args>, 0)$/;"	c
NetworkLoadSegment	zpwr/.tmux/powerline/segments/common/net.py	/^class NetworkLoadSegment(KwThreadedSegment):$/;"	c
NoSuchDir	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^class NoSuchDir(ValueError):$/;"	c
NoSuchDir	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.inotify import INotifyTreeWatcher, DirTooLarge, NoSuchDir, BaseDirChanged$/;"	i
Node	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^class Node(object):$/;"	c
NodeEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class NodeEvent(Event):$/;"	c
NormalBG	zpwr/.vim/colors/getfresh.vim	/^let NormalBG      = '#151515'$/;"	v
NormalFG	zpwr/.vim/colors/getfresh.vim	/^let NormalFG      = '#DDCCBB'$/;"	v
NotInterceptedError	zpwr/.tmux/powerline/__init__.py	/^class NotInterceptedError(BaseException):$/;"	c
ONESHOT	zpwr/.tmux/powerline/lib/inotify.py	/^	ONESHOT = 0x80000000      # Only send event once.$/;"	v	class:INotify
ONLYDIR	zpwr/.tmux/powerline/lib/inotify.py	/^	ONLYDIR = 0x01000000      # Only watch the path if it is a directory.$/;"	v	class:INotify
OPEN	zpwr/.tmux/powerline/lib/inotify.py	/^	OPEN = 0x00000020           # File was opened.$/;"	v	class:INotify
ORGIN_NAME	gitgo.sh	/^    local ORGIN_NAME="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
ORGIN_NAME	zpwr/scripts/gitgo.sh	/^    local ORGIN_NAME="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
ORIGINAL_COMMAND	zpwr/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^ORIGINAL_COMMAND="$1"$/;"	v
ORIGINAL_COMMAND	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^ORIGINAL_COMMAND="$1"$/;"	v
ORIGINAL_COMMAND	zpwr/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^ORIGINAL_COMMAND="$1"$/;"	v
ORIGINAL_COMMAND	zpwr/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^ORIGINAL_COMMAND="$1"$/;"	v
Orange	zpwr/.vim/colors/mango.vim	/^    let Orange = "guifg=#ff5f00 guibg=NONE gui=NONE ctermfg=202 ctermbg=NONE cterm=NONE"$/;"	v
Orange	zpwr/.vim/colors/mango.vim	/^    let Orange = "guifg=#ffaf00 guibg=NONE gui=NONE ctermfg=214 ctermbg=NONE cterm=NONE"$/;"	v
OtherFont	zpwr/.vim/colors/getfresh.vim	/^let OtherFont     = '-*-neep-medium-*-*-*-10-*-*-*-*-*-*-*'$/;"	v
Output	macOnly/figletRandomFont.sh	/^    Output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
Output	zpwr/scripts/macOnly/figletRandomFont.sh	/^    Output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
OverridePHPSyntax	zpwr/.vim/colors/triplejelly.vim	/^func! s:OverridePHPSyntax()$/;"	f
PANE_PID	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^PANE_PID="$1"$/;"	v
PANE_PID	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^PANE_PID="$1"$/;"	v
PANE_PID	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^PANE_PID="$1"$/;"	v
PARSER_INFO	mantozshcomp.py	/^PARSER_INFO = {}$/;"	v
PARSER_INFO	zpwr/scripts/mantozshcomp.py	/^PARSER_INFO = {}$/;"	v
PATH	macOnly/tmuxer.sh	/^PATH="\/usr\/local\/bin:$PATH"$/;"	v
PATH	zpwr/scripts/macOnly/tmuxer.sh	/^PATH="\/usr\/local\/bin:$PATH"$/;"	v
PDBPowerline	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from powerline.pdb import PDBPowerline$/;"	i
PDBPowerline	zpwr/.tmux/powerline/pdb.py	/^class PDBPowerline(Powerline):$/;"	c
PDBRenderer	zpwr/.tmux/powerline/renderers/pdb.py	/^class PDBRenderer(ReadlineRenderer):$/;"	c
PIPE	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from subprocess import Popen, PIPE$/;"	i
PIPE	zpwr/.tmux/powerline/lib/shell.py	/^from subprocess import Popen, PIPE$/;"	i
PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^PLUGINS_DIR="$HOME\/.tmux\/plugins"$/;"	v
PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^PLUGINS_DIR="$HOME\/.tmux\/plugins"$/;"	v
PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^PLUGINS_DIR="$HOME\/.tmux\/plugins"$/;"	v
PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^PLUGINS_DIR="$HOME\/.tmux\/plugins"$/;"	v
PLUGINS_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^PLUGINS_DIR="$HOME\/.tmux\/plugins"$/;"	v
PLUGIN_PID	zpwr/install.sh	/^    PLUGIN_PID=$!$/;"	v
POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE=true$/;"	v
POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=3$/;"	v
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=1$/;"	v
POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='235'$/;"	v
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='white'$/;"	v
POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND='235'$/;"	v
POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND='white'$/;"	v
POWERLEVEL9K_CUSTOM_BATT	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_BATT="milliamps"$/;"	v
POWERLEVEL9K_CUSTOM_BATT_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_BATT_BACKGROUND="red"$/;"	v
POWERLEVEL9K_CUSTOM_BATT_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_BATT_FOREGROUND="black"$/;"	v
POWERLEVEL9K_CUSTOM_NEWLINE	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_NEWLINE="print '\\n'"$/;"	v
POWERLEVEL9K_CUSTOM_NEWLINE_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_NEWLINE_BACKGROUND="green"$/;"	v
POWERLEVEL9K_CUSTOM_NEWLINE_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_NEWLINE_FOREGROUND="white"$/;"	v
POWERLEVEL9K_CUSTOM_PID	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_PID='echo -e "\\uf258 $$ \\uf258  `date +%D` \\uf168"'$/;"	v
POWERLEVEL9K_CUSTOM_PID_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_PID_BACKGROUND="green"$/;"	v
POWERLEVEL9K_CUSTOM_PID_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_PID_FOREGROUND="black"$/;"	v
POWERLEVEL9K_CUSTOM_TTY	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_TTY="tty"$/;"	v
POWERLEVEL9K_CUSTOM_TTY_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_TTY_BACKGROUND="blue"$/;"	v
POWERLEVEL9K_CUSTOM_TTY_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_CUSTOM_TTY_FOREGROUND="white"$/;"	v
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="white"$/;"	v
POWERLEVEL9K_DIR_HOME_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_DIR_HOME_FOREGROUND="red"$/;"	v
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="white"$/;"	v
POWERLEVEL9K_HISTORY_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_HISTORY_BACKGROUND='235'$/;"	v
POWERLEVEL9K_HISTORY_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_HISTORY_FOREGROUND='green'$/;"	v
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir history ssh rbenv root_indicator status vcs)$/;"	v
POWERLEVEL9K_MODE	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_MODE='nerdfont-complete'$/;"	v
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="\\u256D \\n"$/;"	v
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="\\u2570>%K{blue}%F{white} \\Uf136 `tty` \\uf168 %f%k%F{blue}%f "$/;"	v
POWERLEVEL9K_PROMPT_ON_NEWLINE	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_PROMPT_ON_NEWLINE=true$/;"	v
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vi_mode command_execution_time dir_writable background_jobs custom_pid)$/;"	v
POWERLEVEL9K_RPROMPT_ON_NEWLINE	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_RPROMPT_ON_NEWLINE=true$/;"	v
POWERLEVEL9K_TIME_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_TIME_BACKGROUND='green'$/;"	v
POWERLEVEL9K_TIME_FORMAT	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S}"$/;"	v
POWERLEVEL9K_VCS_CLEAN_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_CLEAN_BACKGROUND='yellow'$/;"	v
POWERLEVEL9K_VCS_CLEAN_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_CLEAN_FOREGROUND='white'$/;"	v
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='blue'$/;"	v
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='black'$/;"	v
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='green'$/;"	v
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='red'$/;"	v
POWERLEVEL9K_VI_MODE_INSERT_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_INSERT_BACKGROUND='purple'$/;"	v
POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND='white'$/;"	v
POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND='blue'$/;"	v
POWERLEVEL9K_VI_MODE_NORMAL_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_NORMAL_FOREGROUND='white'$/;"	v
POWERLEVEL9K_VI_MODE_VISUAL_BACKGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_VISUAL_BACKGROUND='red'$/;"	v
POWERLEVEL9K_VI_MODE_VISUAL_FOREGROUND	zpwr/.powerlevel9kconfig.sh	/^POWERLEVEL9K_VI_MODE_VISUAL_FOREGROUND='white'$/;"	v
POWERLINE_COMMAND	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		POWERLINE_COMMAND="$("$POWERLINE_CONFIG_COMMAND" shell command)"$/;"	v
POWERLINE_COMMAND	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		POWERLINE_COMMAND="$("$POWERLINE_CONFIG_COMMAND" shell command)"$/;"	v
POWERLINE_CONFIG_COMMAND	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		POWERLINE_CONFIG_COMMAND="$(dirname "$BASH_SOURCE")\/..\/..\/..\/scripts\/powerline-config"$/;"	v
POWERLINE_CONFIG_COMMAND	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		POWERLINE_CONFIG_COMMAND=powerline-config$/;"	v
POWERLINE_CONFIG_COMMAND	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		POWERLINE_CONFIG_COMMAND="$(dirname "$_POWERLINE_SOURCED")\/..\/..\/..\/scripts\/powerline-config"$/;"	v
POWERLINE_CONFIG_COMMAND	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		POWERLINE_CONFIG_COMMAND=powerline-config$/;"	v
POWERLINE_ROOT	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.config import POWERLINE_ROOT, TMUX_CONFIG_DIRECTORY$/;"	i
POWERLINE_ROOT	zpwr/.tmux/powerline/config.py	/^POWERLINE_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))$/;"	v
PROGRAM_NAME	zpwr/.tmux/plugins/tpm/bin/update_plugins	/^PROGRAM_NAME="$0"$/;"	v
PROMPT_COMMAND	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		PROMPT_COMMAND="$PROMPT_COMMAND"$'\\n'"$full_cmd"$/;"	v
PROMPT_COMMAND	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		PROMPT_COMMAND="$full_cmd"$'\\n'"$PROMPT_COMMAND"$/;"	v
PS1	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	PS1="$(_powerline_prompt aboveleft $last_exit_code "$last_pipe_status" $jobnum)"$/;"	v
PS1	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		PS1="$PS1"'$(_powerline_tmux_set_pwd)'$/;"	v
PS1	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	PS1='$(_powerline_prompt aboveleft $?)'$/;"	v
PS2	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		PS2="$(_powerline_local_prompt left -r.bash $last_exit_code "$last_pipe_status" $jobnum continuation)"$/;"	v
PS2	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	PS2="$(_powerline_local_prompt left -r.bash 0 0 0 continuation)"$/;"	v
PS2	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^					PS2="$(_powerline_local_prompt left $? continuation)"$/;"	v
PS2	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			PS2='$(_powerline_local_prompt left $? continuation)'$/;"	v
PS2	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	PS2="$(_powerline_local_prompt left 0 continuation)"$/;"	v
PS3	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		PS3="$(_powerline_local_prompt left '' $last_exit_code "$last_pipe_status" $jobnum select)"$/;"	v
PS3	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	PS3="$(_powerline_local_prompt left '' 0 0 0 select)"$/;"	v
PS3	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^					PS3="$(_powerline_local_prompt left $? select)"$/;"	v
PS3	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	PS3="$(_powerline_local_prompt left 0 select)"$/;"	v
PULL_URL	gitgo.sh	/^        local PULL_URL="$(git remote -v |$/;"	v
PULL_URL	zpwr/scripts/gitgo.sh	/^        local PULL_URL="$(git remote -v |$/;"	v
PangoMarkupRenderer	zpwr/.tmux/powerline/renderers/pango_markup.py	/^class PangoMarkupRenderer(Renderer):$/;"	c
Parser	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.parser import Parser$/;"	i
Parser	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^class Parser:$/;"	c
ParserError	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^class ParserError(MarkedError):$/;"	c
Pdb	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	class Pdb(pdb.Pdb, object):$/;"	c	function:main
Peach	zpwr/.vim/colors/mango.vim	/^    let Peach = "guifg=#ff875f guibg=NONE gui=NONE ctermfg=209 ctermbg=NONE cterm=NONE"$/;"	v
Peach	zpwr/.vim/colors/mango.vim	/^    let Peach = "guifg=#ffd787 guibg=NONE gui=NONE ctermfg=222 ctermbg=NONE cterm=NONE"$/;"	v
PhoenixBlue	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixBlue call SetPhoenix("normal", "blue")$/;"	c
PhoenixBlueEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixBlueEighties call SetPhoenix("eighties", "blue")$/;"	c
PhoenixGreen	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixGreen call SetPhoenix("normal", "green")$/;"	c
PhoenixGreenEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixGreenEighties call SetPhoenix("eighties", "green")$/;"	c
PhoenixOrange	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixOrange call SetPhoenix("normal", "orange")$/;"	c
PhoenixOrangeEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixOrangeEighties call SetPhoenix("eighties", "orange")$/;"	c
PhoenixPurple	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixPurple call SetPhoenix("normal", "purple")$/;"	c
PhoenixPurpleEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixPurpleEighties call SetPhoenix("eighties", "purple")$/;"	c
PhoenixRed	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixRed call SetPhoenix("normal", "red")$/;"	c
PhoenixRedEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixRedEighties call SetPhoenix("eighties", "red")$/;"	c
PhoenixYellow	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixYellow call SetPhoenix("normal", "yellow")$/;"	c
PhoenixYellowEighties	zpwr/.vim/colors/phoenix.vim	/^command! PhoenixYellowEighties call SetPhoenix("eighties", "yellow")$/;"	c
Pink	zpwr/.vim/colors/mango.vim	/^  let Pink = "guifg=#ff5faf guibg=NONE gui=NONE ctermfg=205 ctermbg=NONE cterm=NONE"$/;"	v
PlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class PlayerSegment(Segment):$/;"	c
Popen	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from subprocess import Popen, PIPE$/;"	i
Popen	zpwr/.tmux/powerline/lib/shell.py	/^	Popen = partial(Popen, creationflags=0x08000000)$/;"	v
Popen	zpwr/.tmux/powerline/lib/shell.py	/^from subprocess import Popen, PIPE$/;"	i
PowerClass	zpwr/.tmux/powerline/segments/common/bat.py	/^		class PowerClass(Structure):$/;"	c	function:_fetch_battery_info
Powerline	zpwr/.tmux/powerline/__init__.py	/^class Powerline(object):$/;"	c
Powerline	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^Powerline = PowerlineTextBox$/;"	v
Powerline	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/ipython.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/lemonbar.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/pdb.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/shell.py	/^from powerline import Powerline$/;"	i
Powerline	zpwr/.tmux/powerline/vim.py	/^from powerline import Powerline, FailedUnicode, finish_common_config$/;"	i
PowerlineLogger	zpwr/.tmux/powerline/__init__.py	/^class PowerlineLogger(object):$/;"	c
PowerlineMagics	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^class PowerlineMagics(Magics):$/;"	c
PowerlineMagics	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from powerline.bindings.ipython.post_0_11 import PowerlineMagics, ShutdownHook$/;"	i
PowerlinePrompt	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class PowerlinePrompt(BasePrompt):$/;"	c
PowerlinePrompt1	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class PowerlinePrompt1(PowerlinePrompt):$/;"	c
PowerlinePrompt2	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class PowerlinePrompt2(PowerlinePromptOut):$/;"	c
PowerlinePromptManager	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	class PowerlinePromptManager(PromptManager):$/;"	c	class:ShutdownHook
PowerlinePromptOut	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class PowerlinePromptOut(PowerlinePrompt):$/;"	c
PowerlinePromptStyle	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from powerline.renderers.ipython.since_5 import PowerlinePromptStyle$/;"	i
PowerlinePromptStyle	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^class PowerlinePromptStyle(DynamicStyle):$/;"	c
PowerlinePromptToken	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^PowerlinePromptToken = Token.Generic.Prompt.Powerline$/;"	v
PowerlinePrompts	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		from powerline.bindings.ipython.since_5 import PowerlinePrompts$/;"	i
PowerlinePrompts	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^class PowerlinePrompts(Prompts):$/;"	c
PowerlineRenderBytesResult	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	class PowerlineRenderBytesResult(bytes):$/;"	c
PowerlineRenderResult	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	PowerlineRenderResult = str$/;"	v
PowerlineRenderResult	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	class PowerlineRenderResult(unicode):$/;"	c
PowerlineStyleDict	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^class PowerlineStyleDict(defaultdict):$/;"	c
PowerlineTextBox	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^class PowerlineTextBox(TextBox):$/;"	c
Prompt	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^class Prompt(object):$/;"	c
PromptManager	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	from IPython.core.prompts import PromptManager$/;"	i
PromptRenderer	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from powerline.renderers.shell import PromptRenderer$/;"	i
PromptRenderer	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^class PromptRenderer(Renderer):$/;"	c
Prompts	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from IPython.terminal.prompts import Prompts$/;"	i
Purple	zpwr/.vim/colors/mango.vim	/^  let Purple = "guifg=#af87ff guibg=NONE gui=NONE ctermfg=141 ctermbg=NONE cterm=NONE"$/;"	v
Python	zpwr/.tmux/powerline/segments/common/bat.py	/^		from shutil import which  # Python-3.3 and later$/;"	i
QTilePowerline	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^class QTilePowerline(Powerline):$/;"	c
Q_OVERFLOW	zpwr/.tmux/powerline/lib/inotify.py	/^	Q_OVERFLOW = 0x00004000  # Event queued overflowed.$/;"	v	class:INotify
RDIOPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class RDIOPlayerSegment(PlayerSegment):$/;"	c
RED	redText.sh	/^RED='\\e[31;1m'$/;"	v
RED	zpwr/scripts/redText.sh	/^RED='\\e[31;1m'$/;"	v
REMOTE_SHELL_WAIT_TIME	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^REMOTE_SHELL_WAIT_TIME="0.4"$/;"	v
REMOVE_THIS_KEY	zpwr/.tmux/powerline/lib/dict.py	/^REMOVE_THIS_KEY = object()$/;"	v
REMOVE_THIS_KEY	zpwr/.tmux/powerline/lib/overrides.py	/^from powerline.lib.dict import REMOVE_THIS_KEY$/;"	i
REPLY	zpwr/.shell_aliases_functions.sh	/^            REPLY="$(cat "$ZPWR_TEMPFILE")"$/;"	v
REPLY	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		REPLY="${${(Q)${${(z)${"$(bindkey -lL main)"}}[3]}}:-.safe}"$/;"	v
REPO_NAME	gitgo.sh	/^        local REPO_NAME="$(git remote -v | awk '{print $2}' | tail -1 | tr -d ' ')"$/;"	v
REPO_NAME	zpwr/scripts/gitgo.sh	/^        local REPO_NAME="$(git remote -v | awk '{print $2}' | tail -1 | tr -d ' ')"$/;"	v
REPO_NAME_TO_CREATE	gitgo.sh	/^        local REPO_NAME_TO_CREATE="$1"$/;"	v
REPO_NAME_TO_CREATE	zpwr/scripts/gitgo.sh	/^        local REPO_NAME_TO_CREATE="$1"$/;"	v
RESET	blueText.sh	/^RESET='\\e[0m'$/;"	v
RESET	blueUpperText.sh	/^RESET='\\e[0m'$/;"	v
RESET	boldText.sh	/^RESET='\\e[0m'$/;"	v
RESET	coolFormatter.sh	/^RESET='\\e[0m'$/;"	v
RESET	redText.sh	/^RESET='\\e[0m'$/;"	v
RESET	zpwr/scripts/blueText.sh	/^RESET='\\e[0m'$/;"	v
RESET	zpwr/scripts/blueUpperText.sh	/^RESET='\\e[0m'$/;"	v
RESET	zpwr/scripts/boldText.sh	/^RESET='\\e[0m'$/;"	v
RESET	zpwr/scripts/coolFormatter.sh	/^RESET='\\e[0m'$/;"	v
RESET	zpwr/scripts/redText.sh	/^RESET='\\e[0m'$/;"	v
RESTORE_PANE_CONTENTS	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	RESTORE_PANE_CONTENTS="true"$/;"	v
RESTORE_PANE_CONTENTS	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^RESTORE_PANE_CONTENTS="false"$/;"	v
RESTORING_FROM_SCRATCH	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	RESTORING_FROM_SCRATCH="true"$/;"	v
RESTORING_FROM_SCRATCH	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^RESTORING_FROM_SCRATCH="false"$/;"	v
RESURRECT_FILE_EXTENSION	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^RESURRECT_FILE_EXTENSION="txt"$/;"	v
RESURRECT_FILE_PREFIX	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^RESURRECT_FILE_PREFIX="tmux_resurrect"$/;"	v
RLock	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from threading import RLock$/;"	i
RLock	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from threading import RLock$/;"	i
RLock	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from threading import RLock$/;"	i
ROWS	myWatchNoBlink.sh	/^        ROWS=$(tput lines)$/;"	v
ROWS	myWatchNoBlinkColorized.sh	/^        ROWS=$(tput lines)$/;"	v
ROWS	zpwr/scripts/myWatchNoBlink.sh	/^        ROWS=$(tput lines)$/;"	v
ROWS	zpwr/scripts/myWatchNoBlinkColorized.sh	/^        ROWS=$(tput lines)$/;"	v
Reader	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.reader import Reader$/;"	i
Reader	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^class Reader(object):$/;"	c
ReaderError	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^class ReaderError(MarkedError):$/;"	c
ReadlineRenderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from powerline.renderers.shell.readline import ReadlineRenderer$/;"	i
ReadlineRenderer	zpwr/.tmux/powerline/renderers/pdb.py	/^from powerline.renderers.shell.readline import ReadlineRenderer$/;"	i
ReadlineRenderer	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^from powerline.renderers.shell.readline import ReadlineRenderer$/;"	i
ReadlineRenderer	zpwr/.tmux/powerline/renderers/shell/readline.py	/^class ReadlineRenderer(ShellRenderer):$/;"	c
Red	zpwr/.vim/colors/mango.vim	/^    let Red = "guifg=#ff0000 guibg=NONE gui=NONE ctermfg=196 ctermbg=NONE cterm=NONE"$/;"	v
Red	zpwr/.vim/colors/mango.vim	/^    let Red = "guifg=#ff5f5f guibg=NONE gui=NONE ctermfg=203 ctermbg=NONE cterm=NONE"$/;"	v
Renderer	zpwr/.tmux/powerline/renderer.py	/^class Renderer(object):$/;"	c
Renderer	zpwr/.tmux/powerline/renderers/i3bar.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/pdb.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/tmux.py	/^from powerline.renderer import Renderer$/;"	i
Renderer	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.renderer import Renderer$/;"	i
RendererProxy	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^class RendererProxy(object):$/;"	c
Repository	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^class Repository(object):$/;"	c
Repository	zpwr/.tmux/powerline/lib/vcs/git.py	/^	class Repository(GitRepository):$/;"	c	class:GitRepository
Repository	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^class Repository(object):$/;"	c
Resolver	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.resolver import Resolver$/;"	i
Resolver	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^class Resolver(BaseResolver):$/;"	c
ResolverError	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^class ResolverError(MarkedError):$/;"	c
RestartSec	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	RestartSec=2$/;"	v
RewriteResult	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	from powerline.ipython import RewriteResult$/;"	i
RewriteResult	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from powerline.ipython import IPythonPowerline, RewriteResult$/;"	i
RewriteResult	zpwr/.tmux/powerline/ipython.py	/^class RewriteResult(object):$/;"	c
RhythmboxPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class RhythmboxPlayerSegment(PlayerSegment):$/;"	c
SCHEME_RE	zpwr/.tmux/powerline/segments/vim/__init__.py	/^SCHEME_RE = re.compile(b'^\\\\w[\\\\w\\\\d+\\\\-.]*(?=:)')$/;"	v
SCRATCHPAD_ICONS	zpwr/.tmux/powerline/segments/i3wm.py	/^SCRATCHPAD_ICONS = {$/;"	v
ZPWR_SCRIPTS	macOnly/tutorialConfigUpdater.sh	/^ZPWR_SCRIPTS="$ZPWR_HIDDEN_DIR\/scripts"$/;"	v
ZPWR_SCRIPTS	printHeader.sh	/^    ZPWR_SCRIPTS="$HOME\/.zpwr\/scripts"$/;"	v
ZPWR_SCRIPTS	updaterEmail.sh	/^ZPWR_SCRIPTS="$HOME\/.zpwr\/scripts"$/;"	v
ZPWR_SCRIPTS	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^ZPWR_SCRIPTS="$HOME\/Documents\/shellScripts"$/;"	v
ZPWR_SCRIPTS	zpwr/scripts/printHeader.sh	/^    ZPWR_SCRIPTS="$HOME\/Documents\/shellScripts"$/;"	v
ZPWR_SCRIPTS	zpwr/scripts/updaterEmail.sh	/^ZPWR_SCRIPTS="\/Users\/jacobmenke\/Documents\/shellScripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^ZPWR_SCRIPTS_DIR="${CURRENT_DIR}\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bin/clean_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bin/install_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bin/update_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bindings/clean_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bindings/install_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/..\/scripts"$/;"	v
ZPWR_SCRIPTS_DIR	zpwr/.tmux/plugins/tpm/tpm	/^ZPWR_SCRIPTS_DIR="$CURRENT_DIR\/scripts"$/;"	v
SCRIPT_OUTPUT	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^SCRIPT_OUTPUT="$1"$/;"	v
SHELL_ACTIONS	zpwr/.tmux/powerline/commands/config.py	/^SHELL_ACTIONS = {$/;"	v
SPIN	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^SPIN='-\\|\/'$/;"	v
STATE_SYMBOLS	zpwr/.tmux/powerline/segments/common/players.py	/^STATE_SYMBOLS = {$/;"	v
SUPPORTED_TMUX_VERSION	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^SUPPORTED_TMUX_VERSION="1.9"$/;"	v
SUPPORTED_VERSION	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^SUPPORTED_VERSION="1.9"$/;"	v
SUPPORTED_VERSION	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^SUPPORTED_VERSION="1.9"$/;"	v
ScalarEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class ScalarEvent(NodeEvent):$/;"	c
ScalarNode	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^class ScalarNode(Node):$/;"	c
ScalarToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class ScalarToken(Token):$/;"	c
Scanner	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.scanner import Scanner$/;"	i
Scanner	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^class Scanner:$/;"	c
ScannerError	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^class ScannerError(MarkedError):$/;"	c
Segment	zpwr/.tmux/powerline/lib/threaded.py	/^from powerline.segments import Segment$/;"	i
Segment	zpwr/.tmux/powerline/lint/inspect.py	/^from powerline.segments import Segment$/;"	i
Segment	zpwr/.tmux/powerline/segments/__init__.py	/^class Segment(object):$/;"	c
Segment	zpwr/.tmux/powerline/segments/common/env.py	/^from powerline.segments import Segment, with_docstring$/;"	i
Segment	zpwr/.tmux/powerline/segments/common/players.py	/^from powerline.segments import Segment, with_docstring$/;"	i
Segment	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.segments import Segment, with_docstring$/;"	i
SequenceEndEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class SequenceEndEvent(CollectionEndEvent):$/;"	c
SequenceNode	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^class SequenceNode(CollectionNode):$/;"	c
SequenceStartEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class SequenceStartEvent(CollectionStartEvent):$/;"	c
SessionLoad	zpwr/.vim/sessions/Scripting.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/aliases.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/default.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script1.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script2.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script3.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script4.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script5.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/script6.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/test.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/text1.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/text2.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/tor.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/trc.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/vimtricks.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/vrc.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	zpwr/.vim/sessions/zshrc.vim	/^let SessionLoad = 1$/;"	v
SetFont	zpwr/.vim/colors/fx.vim	/^function! s:SetFont()$/;"	f
SetLucius	zpwr/.vim/colors/lucius.vim	/^function! SetLucius(style, contrast, contrast_bg)$/;"	f
SetOption	zpwr/.vim/colors/parsec.vim	/^function! s:SetOption(name,default)$/;"	f
SetOption	zpwr/.vim/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetPhoenix	zpwr/.vim/colors/phoenix.vim	/^function! SetPhoenix(background, accent)$/;"	f
ShellCwdSegment	zpwr/.tmux/powerline/segments/shell.py	/^class ShellCwdSegment(CwdSegment):$/;"	c
ShellPowerline	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.shell import ShellPowerline$/;"	i
ShellPowerline	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.shell import ShellPowerline$/;"	i
ShellPowerline	zpwr/.tmux/powerline/shell.py	/^class ShellPowerline(Powerline):$/;"	c
ShellRenderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from powerline.renderers.shell import ShellRenderer$/;"	i
ShellRenderer	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^class ShellRenderer(PromptRenderer):$/;"	c
ShellRenderer	zpwr/.tmux/powerline/renderers/shell/bash.py	/^from powerline.renderers.shell import ShellRenderer$/;"	i
ShellRenderer	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^from powerline.renderers.shell import ShellRenderer$/;"	i
ShellRenderer	zpwr/.tmux/powerline/renderers/shell/readline.py	/^from powerline.renderers.shell import ShellRenderer$/;"	i
ShellRenderer	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^from powerline.renderers.shell import ShellRenderer$/;"	i
ShutdownHook	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^class ShutdownHook(object):$/;"	c
ShutdownHook	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^class ShutdownHook(object):$/;"	c
ShutdownHook	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from powerline.bindings.ipython.post_0_11 import PowerlineMagics, ShutdownHook$/;"	i
Silver	zpwr/.vim/colors/mango.vim	/^  let Silver = "guifg=#8a8a8a guibg=NONE gui=NONE ctermfg=245 ctermbg=NONE cterm=NONE"$/;"	v
SimpleKey	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^class SimpleKey:$/;"	c
SolarizedHiTrail	zpwr/.vim/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	zpwr/.vim/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	zpwr/.vim/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	zpwr/.vim/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	zpwr/.vim/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Spec	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.spec import Spec$/;"	i
Spec	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.spec import Spec$/;"	i
Spec	zpwr/.tmux/powerline/lint/spec.py	/^class Spec(object):$/;"	c
SplitBG	zpwr/.vim/colors/getfresh.vim	/^let SplitBG       = SplitFG$/;"	v
SplitFG	zpwr/.vim/colors/getfresh.vim	/^let SplitFG       = '#1B1B1B'$/;"	v
SpotifyAppleScriptPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class SpotifyAppleScriptPlayerSegment(PlayerSegment):$/;"	c
SpotifyDbusPlayerSegment	zpwr/.tmux/powerline/segments/common/players.py	/^class SpotifyDbusPlayerSegment(PlayerSegment):$/;"	c
StashSegment	zpwr/.tmux/powerline/segments/common/vcs.py	/^class StashSegment(Segment):$/;"	c
StashSegment	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.segments.common.vcs import BranchSegment, StashSegment$/;"	i
StatFileWatcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.watcher.stat import StatFileWatcher$/;"	i
StatFileWatcher	zpwr/.tmux/powerline/lib/watcher/stat.py	/^class StatFileWatcher(object):$/;"	c
StatusBG	zpwr/.vim/colors/getfresh.vim	/^let StatusBG      = DarkGray$/;"	v
StatusLine	zpwr/.vim/colors/cabin.vim	/^function! s:StatusLine(focus)$/;"	f
StrFunction	zpwr/.tmux/powerline/commands/config.py	/^class StrFunction(object):$/;"	c
StreamEndEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class StreamEndEvent(Event):$/;"	c
StreamEndToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class StreamEndToken(Token):$/;"	c
StreamStartEvent	zpwr/.tmux/powerline/lint/markedjson/events.py	/^class StreamStartEvent(Event):$/;"	c
StreamStartToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class StreamStartToken(Token):$/;"	c
StringIO	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from io import StringIO$/;"	i
Structure	zpwr/.tmux/powerline/segments/common/bat.py	/^		from ctypes import Structure, c_byte, c_ulong, byref$/;"	i
Style	zpwr/.vim/colors/sprinkles.vim	/^function! s:Style(hlgroup, fg, bg, attr)$/;"	f
SynStack	zpwr/.vim/colors/detailed.vim	/^fun! <SID>SynStack()$/;"	f
Syntax_extensions	zpwr/.vim/colors/lettuce.vim	/^augroup Syntax_extensions$/;"	a
TEXT_TO_DISPLAY	macOnly/figletRandomFont.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	macOnly/figletRandomFontOnce.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	macOnly/figletRotater.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	macOnly/menkeTechRandomFont.sh	/^TEXT_TO_DISPLAY="Menke Technologies"$/;"	v
TEXT_TO_DISPLAY	zpwr/scripts/macOnly/figletRandomFont.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	zpwr/scripts/macOnly/figletRotater.sh	/^TEXT_TO_DISPLAY="$1"$/;"	v
TEXT_TO_DISPLAY	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^TEXT_TO_DISPLAY="Menke Technologies"$/;"	v
TMUX	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		TMUX="" tmux -S "$(tmux_socket)" new-session -d -s "$grouped_session" -t "$original_session"$/;"	v
TMUX	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		TMUX="" tmux -S "$(tmux_socket)" new-session -d -s "$session_name" -n "$window_name" -c "$dir" "$pane_creation_command"$/;"	v
TMUX	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		TMUX="" tmux -S "$(tmux_socket)" new-session -d -s "$session_name" -n "$window_name" -c "$dir"$/;"	v
TMUX	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	TMUX="$_POWERLINE_TMUX" tmux refresh -S$/;"	v
TMUX	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	TMUX="$_POWERLINE_TMUX" tmux setenv -g TMUX_"$1"_`_powerline_tmux_pane` "$2"$/;"	v
TMUX	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	TMUX="$_POWERLINE_TMUX" tmux refresh -S$/;"	v
TMUX	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	TMUX="$_POWERLINE_TMUX" tmux setenv -g TMUX_"$1"_`_powerline_tmux_pane` "$2"$/;"	v
TMUX_ACTIONS	zpwr/.tmux/powerline/commands/config.py	/^TMUX_ACTIONS = {$/;"	v
TMUX_CONFIG_DIRECTORY	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.config import POWERLINE_ROOT, TMUX_CONFIG_DIRECTORY$/;"	i
TMUX_CONFIG_DIRECTORY	zpwr/.tmux/powerline/config.py	/^TMUX_CONFIG_DIRECTORY = os.path.join(BINDINGS_DIRECTORY, 'tmux')$/;"	v
TMUX_COPY_MODE	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^    TMUX_COPY_MODE="$(tmux show-option -gwv mode-keys)"$/;"	v
TMUX_COPY_MODE	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^TMUX_COPY_MODE=""$/;"	v
TMUX_VAR_RE	zpwr/.tmux/powerline/bindings/config.py	/^TMUX_VAR_RE = re.compile('\\$(_POWERLINE_\\w+)')$/;"	v
TPM_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^TPM_DIR="$PWD"$/;"	v
TPM_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^TPM_DIR="$PWD"$/;"	v
TPM_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^TPM_DIR="$PWD"$/;"	v
TPM_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^TPM_DIR="$PWD"$/;"	v
TPM_DIR	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^TPM_DIR="$PWD"$/;"	v
TRUE_FULL_SCREEN	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^TRUE_FULL_SCREEN="$1"$/;"	v
TRUE_FULL_SCREEN	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^TRUE_FULL_SCREEN="$1"$/;"	v
TabBufSegmentInfo	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class TabBufSegmentInfo(dict):$/;"	c
Tabpage	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class Tabpage(FalseObject):$/;"	c
Tabula	zpwr/.vim/colors/tabula.vim	/^function! Tabula()$/;"	f
Tabula_1	zpwr/.vim/colors/tabula.vim	/^function! Tabula_1()$/;"	f
Tabula_2	zpwr/.vim/colors/tabula.vim	/^function! Tabula_2()$/;"	f
Tabula_3	zpwr/.vim/colors/tabula.vim	/^function! Tabula_3()$/;"	f
Tabula_4	zpwr/.vim/colors/tabula.vim	/^function! Tabula_4()$/;"	f
Tabula_5	zpwr/.vim/colors/tabula.vim	/^function! Tabula_5()$/;"	f
Tabula_6	zpwr/.vim/colors/tabula.vim	/^function! Tabula_6()$/;"	f
Tabula_7	zpwr/.vim/colors/tabula.vim	/^function! Tabula_7()$/;"	f
Tabula_8	zpwr/.vim/colors/tabula.vim	/^function! Tabula_8()$/;"	f
Tabula_9	zpwr/.vim/colors/tabula.vim	/^function! Tabula_9()$/;"	f
TagList_IsValid	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_IsValid	zpwr/taglist_46/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_Start	zpwr/taglist_46/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_WrapUp	zpwr/taglist_46/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagList_title	zpwr/taglist_46/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TcshPromptRenderer	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^class TcshPromptRenderer(ZshPromptRenderer):$/;"	c
Template	help2comp.py	/^from string import Template$/;"	i
Template	zpwr/scripts/help2comp.py	/^from string import Template$/;"	i
TextBox	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from libqtile.widget import TextBox$/;"	i
Theme	zpwr/.tmux/powerline/renderer.py	/^from powerline.theme import Theme$/;"	i
Theme	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from powerline.theme import Theme$/;"	i
Theme	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from powerline.theme import Theme$/;"	i
Theme	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from powerline.theme import Theme$/;"	i
Theme	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.theme import Theme$/;"	i
Theme	zpwr/.tmux/powerline/theme.py	/^class Theme(object):$/;"	c
Thread	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^	from threading import Thread$/;"	i
Thread	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from threading import Thread, Event$/;"	i
Thread	zpwr/.tmux/powerline/lib/threaded.py	/^from threading import Thread, Lock, Event$/;"	i
Thread	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from threading import Thread$/;"	i
ThreadedSegment	zpwr/.tmux/powerline/lib/threaded.py	/^class ThreadedSegment(Segment, MultiRunnedThread):$/;"	c
ThreadedSegment	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lib.threaded import ThreadedSegment$/;"	i
ThreadedSegment	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.lib.threaded import ThreadedSegment, KwThreadedSegment$/;"	i
ThreadedSegment	zpwr/.tmux/powerline/segments/common/sys.py	/^from powerline.lib.threaded import ThreadedSegment$/;"	i
Timer	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from threading import Lock, Timer$/;"	i
Timer	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from threading import Lock, Timer$/;"	i
Tlist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
Tlist	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFiles	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistAddFilesRecursive	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistClose	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistDebug	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistHighlightTag	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistLock	zpwr/taglist_46/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistMessages	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistOpen	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionLoad	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistSessionSave	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowPrototype	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistShowTag	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistSync	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistToggle	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUndebug	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUnlock	zpwr/taglist_46/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
TlistUpdate	zpwr/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Add_Files_Recursive	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Highlight_Tag	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Open	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Auto_Update	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Ballon_Expr	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Buffer_Removed	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Change_Sort	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Close_On_Select	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Compact_Format	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Create_Folds_For_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Ctags_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Disable	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Enable	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Debug_Show	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Detect_Filetype	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_FileInfo	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Prototype	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Display_Tag_Scope	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Enable_Fold_Column	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exe_Cmd_No_Acmds	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Exit_OnlyWindow	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tag_Scope	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_Extract_Tagtype	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_FileType_Init	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_File_Fold_Auto_Close	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_Find_Nearest_Tag_Idx	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_GainFocus_On_ToggleOpen	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_Buffer_Filetype	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_File_Index	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Filenames	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Linenum	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_Scope	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Get_Tagname_By_Line	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Highlight_Tag_On_BufEnter	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Inc_Winwidth	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	zpwr/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Init_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Log_Msg	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Submenu_Items	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Max_Tag_Length	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_Add_Base_Menu	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_File_Refresh	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Init	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Jump_To_Tag	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Refresh	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Remove_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Menu_Update_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Parse_Tagline	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Post_Close_Cleanup	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_Dir	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_File_Always	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Process_Filelist	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Refresh_Folds	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Remove_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Load	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Session_Save	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Set_App	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_Menu	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Show_One_File	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Skip_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Sort_Type	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_Current_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_File	zpwr/taglist_46/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Update_Remove_List	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Horiz_Window	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_Right_Window	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_Use_SingleClick	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_User_Removed_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Vim_Session_Load	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_Warning_Msg	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinHeight	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_WinWidth	zpwr/taglist_46/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Auto_Open	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Check_Width	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Close	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Create	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Display_Help	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Exit_Only_Window	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Index	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Goto_Window	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Line	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Highlight_Tag	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Init	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Jump_To_Tag	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Mark_File_Window	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Move_To_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Open_File_Fold	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Refresh_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Remove_File_From_Display	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Show_Info	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Toggle_Help_Text	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_File	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Update_Line_Offsets	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Tlist_Window_Zoom	zpwr/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TmuxRenderer	zpwr/.tmux/powerline/renderers/tmux.py	/^class TmuxRenderer(Renderer):$/;"	c
TmuxVersionInfo	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.bindings.tmux import (TmuxVersionInfo, run_tmux_command, set_tmux_environment, get_tmux_version,$/;"	i
TmuxVersionInfo	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^TmuxVersionInfo = namedtuple('TmuxVersionInfo', ('major', 'minor', 'suffix'))$/;"	v
ToggleSemicolonHighlighting	zpwr/.vim/colors/midnight.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	zpwr/.vim/colors/midnight2.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	zpwr/.vim/colors/sean.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	zpwr/.vim/colors/tomatosoup.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	zpwr/.vim/colors/vj.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
Token	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from pygments.token import Token  # NOQA$/;"	i
Token	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class Token(object):$/;"	c
Token	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from pygments.token import Token$/;"	i
TreeStatusCache	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^class TreeStatusCache(dict):$/;"	c
TreeWatcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.watcher.tree import TreeWatcher$/;"	i
TreeWatcher	zpwr/.tmux/powerline/lib/watcher/tree.py	/^class TreeWatcher(object):$/;"	c
TryNext	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		from IPython.core.hooks import TryNext$/;"	i
TryNext	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^		from IPython.ipapi import TryNext$/;"	i
TryNext	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from IPython.ipapi import TryNext$/;"	i
Type	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	Type=forking$/;"	v
Type1ManParser	mantozshcomp.py	/^class Type1ManParser(ManParser):$/;"	c
Type1ManParser	zpwr/scripts/mantozshcomp.py	/^class Type1ManParser(ManParser):$/;"	c
Type2ManParser	mantozshcomp.py	/^class Type2ManParser(ManParser):$/;"	c
Type2ManParser	zpwr/scripts/mantozshcomp.py	/^class Type2ManParser(ManParser):$/;"	c
Type3ManParser	mantozshcomp.py	/^class Type3ManParser(ManParser):$/;"	c
Type3ManParser	zpwr/scripts/mantozshcomp.py	/^class Type3ManParser(ManParser):$/;"	c
Type4ManParser	mantozshcomp.py	/^class Type4ManParser(ManParser):$/;"	c
Type4ManParser	zpwr/scripts/mantozshcomp.py	/^class Type4ManParser(ManParser):$/;"	c
TypeDarwinManParser	mantozshcomp.py	/^class TypeDarwinManParser(ManParser):$/;"	c
TypeDarwinManParser	zpwr/scripts/mantozshcomp.py	/^class TypeDarwinManParser(ManParser):$/;"	c
TypeDeroffManParser	mantozshcomp.py	/^class TypeDeroffManParser(ManParser):$/;"	c
TypeDeroffManParser	zpwr/scripts/mantozshcomp.py	/^class TypeDeroffManParser(ManParser):$/;"	c
UNICODE_TEXT_TRANSLATION	zpwr/.tmux/powerline/segments/common/time.py	/^UNICODE_TEXT_TRANSLATION = {$/;"	v
UNMOUNT	zpwr/.tmux/powerline/lib/inotify.py	/^	UNMOUNT = 0x00002000     # Backing fs was unmounted.$/;"	v	class:INotify
UNSUPPORTED_MSG	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^UNSUPPORTED_MSG="$2"$/;"	v
UNSUPPORTED_MSG	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^UNSUPPORTED_MSG="$2"$/;"	v
UNSUPPORTED_MSG	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^UNSUPPORTED_MSG="$2"$/;"	v
URL	gitgo.sh	/^    local URL="https:\/\/github.com\/$GITHUB_ACCOUNT\/$REPO_NAME_TO_CREATE"$/;"	v
URL	help2comp.py	/^URL = 'http:\/\/github.com\/RobSis\/zsh-completion-generator'$/;"	v
URL	zpwr/scripts/gitgo.sh	/^    local URL="https:\/\/github.com\/$GITHUB_ACCOUNT\/$REPO_NAME_TO_CREATE"$/;"	v
URL	zpwr/scripts/help2comp.py	/^URL = 'http:\/\/github.com\/RobSis\/zsh-completion-generator'$/;"	v
UvFileWatcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.watcher.uv import UvFileWatcher, UvNotFound$/;"	i
UvFileWatcher	zpwr/.tmux/powerline/lib/watcher/uv.py	/^class UvFileWatcher(UvWatcher):$/;"	c
UvNotFound	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from powerline.lib.watcher.uv import UvFileWatcher, UvNotFound$/;"	i
UvNotFound	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.uv import UvTreeWatcher, UvNotFound$/;"	i
UvNotFound	zpwr/.tmux/powerline/lib/watcher/uv.py	/^class UvNotFound(NotImplementedError):$/;"	c
UvThread	zpwr/.tmux/powerline/lib/watcher/uv.py	/^class UvThread(Thread):$/;"	c
UvTreeWatcher	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.watcher.uv import UvTreeWatcher, UvNotFound$/;"	i
UvTreeWatcher	zpwr/.tmux/powerline/lib/watcher/uv.py	/^class UvTreeWatcher(UvWatcher):$/;"	c
UvWatcher	zpwr/.tmux/powerline/lib/watcher/uv.py	/^class UvWatcher(object):$/;"	c
VERSION	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^VERSION="$1"$/;"	v
VERSION	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^VERSION="$1"$/;"	v
VERSION	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^VERSION="$1"$/;"	v
VIRTUAL_ENV_DISABLE_PROMPT	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	VIRTUAL_ENV_DISABLE_PROMPT=1$/;"	v
VIRTUAL_ENV_DISABLE_PROMPT	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	VIRTUAL_ENV_DISABLE_PROMPT=1$/;"	v
ValueToken	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^class ValueToken(Token):$/;"	c
VimBranchSegment	zpwr/.tmux/powerline/segments/vim/__init__.py	/^class VimBranchSegment(BranchSegment):$/;"	c
VimEnviron	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^class VimEnviron(object):$/;"	c
VimFunc	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class VimFunc(object):$/;"	c	function:eval_unicode
VimPowerline	zpwr/.tmux/powerline/vim.py	/^class VimPowerline(Powerline):$/;"	c
VimRenderer	zpwr/.tmux/powerline/renderers/vim.py	/^class VimRenderer(Renderer):$/;"	c
VimStashSegment	zpwr/.tmux/powerline/segments/vim/__init__.py	/^class VimStashSegment(StashSegment):$/;"	c
VimVarHandler	zpwr/.tmux/powerline/vim.py	/^class VimVarHandler(logging.Handler, object):$/;"	c
WORKSPACE_REGEX	zpwr/.tmux/powerline/segments/i3wm.py	/^WORKSPACE_REGEX = re.compile(r'^[0-9]+: ?')$/;"	v
WantedBy	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	WantedBy=default.target$/;"	v
Warn	zpwr/.vim/colors/sprinkles.vim	/^function! s:Warn(msg)$/;"	f
WeakValueDictionary	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from weakref import WeakValueDictionary, ref$/;"	i
WeatherSegment	zpwr/.tmux/powerline/segments/common/wthr.py	/^class WeatherSegment(KwThreadedSegment):$/;"	c
White	zpwr/.vim/colors/getfresh.vim	/^let White         = '#E7E8E9'$/;"	v
White	zpwr/.vim/colors/mango.vim	/^  let White = "guifg=#eeeeee guibg=NONE gui=NONE ctermfg=255 ctermbg=NONE cterm=NONE"$/;"	v
Window	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class Window(FalseObject):$/;"	c
WindowVars	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	class WindowVars(object):$/;"	c
WithPath	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.imp import WithPath, import_function, import_segment$/;"	i
WithPath	zpwr/.tmux/powerline/lint/imp.py	/^class WithPath(object):$/;"	c
WriteProfiling	zpwr/.tmux/powerline/bindings/vim/autoload/powerline/debug.vim	/^command -nargs=1 -complete=file WriteProfiling :call powerline#debug#write_profile(<q-args>)$/;"	c
X	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/antares.vim	/^  fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/bluedrake.vim	/^    function! <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/bocau.vim	/^fun! s:X(a)$/;"	f
X	zpwr/.vim/colors/candyman.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	zpwr/.vim/colors/cobalt2.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	zpwr/.vim/colors/coda.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/desert256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>X(group, fg, bg, attr, ...)$/;"	f
X	zpwr/.vim/colors/evening.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/heroku.vim	/^  fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/hotpot.vim	/^fun! <SID>X(a)$/;"	f
X	zpwr/.vim/colors/inkpot.vim	/^fun! <SID>X(a)$/;"	f
X	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	zpwr/.vim/colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	zpwr/.vim/colors/jiks.vim	/^fun! s:X(a)$/;"	f
X	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/lizard256.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/pf_earth.vim	/^fun! <SID>X(a)$/;"	f
X	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/simple256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/triplejelly.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/vividchalk.vim	/^fun! s:X(a)$/;"	f
X	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
X	zpwr/.vim/colors/znake.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
XRANDR_OUTPUT_RE	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^XRANDR_OUTPUT_RE = re.compile(r'^(?P<name>[0-9A-Za-z-]+) connected(?P<primary> primary)? (?P<width>\\d+)x(?P<height>\\d+)\\+(?P<x>\\d+)\\+(?P<y>\\d+)', re.MULTILINE)$/;"	v
YCM_CORES	zpwr/ycm_install.sh	/^    YCM_CORES=1 python3 install.py --clang-completer$/;"	v
YCM_PID	zpwr/install.sh	/^    YCM_PID=$!$/;"	v
ZLE_RPROMPT_INDENT	zpwr/.powerlevel9kconfig.sh	/^ZLE_RPROMPT_INDENT=0$/;"	v
ZPWR_LOGFILE	updaterEmail.sh	/^ZPWR_LOGFILE="$ZPWR_HIDDEN_DIR\/zpwrLog.txt"$/;"	v
ZPWR_OS_TYPE	zpwr/.tmux/google.sh	/^ZPWR_OS_TYPE="$(uname -s | perl -e 'print lc<>')"$/;"	v
ZPWR_OS_TYPE	zpwr/common.sh	/^ZPWR_OS_TYPE="$(uname -s | perl -e 'print lc<>')"$/;"	v
ZPWR_OS_TYPE	zpwr/install.sh	/^ZPWR_OS_TYPE="$(uname -s | perl -e 'print lc<>')"$/;"	v
ZPWR_OS_TYPE	zpwr/plugins_install.sh	/^ZPWR_OS_TYPE="$(uname -s | perl -e 'print lc<>')"$/;"	v
ZPWR_TEMPFILE	keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	keybindingsToFZFVim.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	keybindingsToREADME.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	macOnly/splitReg.sh	/^    ZPWR_TEMPFILE="\/tmp\/temp$$"$/;"	v
ZPWR_TEMPFILE	zpwr/scripts/keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	zpwr/scripts/keybindingsToFZFVim.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	zpwr/scripts/keybindingsToREADME.zsh	/^    ZPWR_TEMPFILE="\/tmp\/.temp$$"$/;"	v
ZPWR_TEMPFILE	zpwr/scripts/macOnly/splitReg.sh	/^    ZPWR_TEMPFILE="\/tmp\/temp$$"$/;"	v
ZPWR_TEMPFILE1	keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE1="\/tmp\/.temp$$-1"$/;"	v
ZPWR_TEMPFILE1	zpwr/scripts/keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE1="\/tmp\/.temp$$-1"$/;"	v
ZPWR_TEMPFILE2	keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE2="\/tmp\/.temp$$-2"$/;"	v
ZPWR_TEMPFILE2	zpwr/scripts/keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE2="\/tmp\/.temp$$-2"$/;"	v
ZPWR_TEMPFILE3	keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE3="\/tmp\/.temp$$-3"$/;"	v
ZPWR_TEMPFILE3	zpwr/scripts/keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE3="\/tmp\/.temp$$-3"$/;"	v
ZPWR_TEMPFILE4	keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE4="\/tmp\/.temp$$-4"$/;"	v
ZPWR_TEMPFILE4	zpwr/scripts/keybindingsToFZF.zsh	/^    ZPWR_TEMPFILE4="\/tmp\/.temp$$-4"$/;"	v
ZSH_COMP_DIR	remoteRepoMonitorDaemon.sh	/^ZSH_COMP_DIR="$HOME\/.oh-my-zsh\/custom\/plugins\/$ZSH_COMP_REPO_NAME"$/;"	v
ZSH_COMP_DIR	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^ZSH_COMP_DIR="$HOME\/.oh-my-zsh\/custom\/plugins\/$ZSH_COMP_REPO_NAME"$/;"	v
ZSH_THEME	zpwr/.powerlevel9kconfig.sh	/^ZSH_THEME="powerlevel9k\/powerlevel9k"$/;"	v
ZshPowerline	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^class ZshPowerline(ShellPowerline):$/;"	c
ZshPromptRenderer	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^from powerline.renderers.shell.zsh import ZshPromptRenderer$/;"	i
ZshPromptRenderer	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^class ZshPromptRenderer(ShellRenderer):$/;"	c
_CACHED_TPM_PATH	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_CACHED_TPM_PATH="$(_tpm_path)"$/;"	v
_IMAPKey	zpwr/.tmux/powerline/segments/common/mail.py	/^_IMAPKey = namedtuple('Key', 'username password server port folder use_ssl')$/;"	v
_POWERLINE_HAS_JOBS_IN_SUBSHELL	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	_POWERLINE_HAS_JOBS_IN_SUBSHELL=$?$/;"	v
_POWERLINE_HAS_PIPESTATUS	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_POWERLINE_HAS_PIPESTATUS="$($/;"	v
_POWERLINE_JOBS	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_POWERLINE_JOBS="$(jobs -p|wc -l|tr -d ' ')"$/;"	v
_POWERLINE_JOBS	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_POWERLINE_JOBS="$(wc -l < $_POWERLINE_TEMP | tr -d ' ')"$/;"	v
_POWERLINE_PID	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_POWERLINE_PID=$\$$/;"	v
_POWERLINE_PID	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_POWERLINE_PID=$\$$/;"	v
_POWERLINE_SAVED_PWD	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		_POWERLINE_SAVED_PWD="$PWD"$/;"	v
_POWERLINE_SAVED_PWD	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_POWERLINE_SAVED_PWD="$PWD"$/;"	v
_POWERLINE_SOURCED	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_POWERLINE_SOURCED="$_"$/;"	v
_POWERLINE_SOURCED	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^local _POWERLINE_SOURCED="$0:A"$/;"	v
_POWERLINE_TEMP	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_POWERLINE_TEMP="$(mktemp "${TMPDIR:-\/tmp}\/powerline.XXXXXXXX")"$/;"	v
_POWERLINE_TMUX	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		_POWERLINE_TMUX="$TMUX"$/;"	v
_POWERLINE_TMUX	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_POWERLINE_TMUX="$TMUX"$/;"	v
_POWERLINE_USED_SHELL	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_POWERLINE_USED_SHELL=${0#-}$/;"	v
_POWERLINE_USED_SHELL	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_POWERLINE_USED_SHELL=${_POWERLINE_USED_SHELL##*\/}$/;"	v
_RESURRECT_DIR	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^_RESURRECT_DIR=""$/;"	v
_RESURRECT_DIR	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^_RESURRECT_DIR="$(resurrect_dir)"$/;"	v
_RESURRECT_FILE_PATH	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^_RESURRECT_FILE_PATH=""$/;"	v
_RESURRECT_FILE_PATH	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^_RESURRECT_FILE_PATH="$(resurrect_file_path)"$/;"	v
__ScriptVersion	CPU_Stresser.sh	/^__ScriptVersion="1.0.2"$/;"	v
__ScriptVersion	macOnly/splitReg.sh	/^__ScriptVersion=1.0.0$/;"	v
__ScriptVersion	powerTo.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	splitReg.sh	/^__ScriptVersion=1.0.0$/;"	v
__ScriptVersion	storageShower.sh	/^__ScriptVersion="version"$/;"	v
__ScriptVersion	tgzLocalInstaller.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	updater.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	updaterNoPip.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	zpwr/install.sh	/^__ScriptVersion="1.0.1"$/;"	v
__ScriptVersion	zpwr/scripts/CPU_Stresser.sh	/^__ScriptVersion="1.0.2"$/;"	v
__ScriptVersion	zpwr/scripts/macOnly/splitReg.sh	/^__ScriptVersion=1.0.0$/;"	v
__ScriptVersion	zpwr/scripts/powerTo.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	zpwr/scripts/splitReg.sh	/^__ScriptVersion=1.0.0$/;"	v
__ScriptVersion	zpwr/scripts/storageShower.sh	/^__ScriptVersion="version"$/;"	v
__ScriptVersion	zpwr/scripts/tgzLocalInstaller.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	zpwr/scripts/updater.sh	/^__ScriptVersion="1.0.0"$/;"	v
__ScriptVersion	zpwr/scripts/updaterNoPip.sh	/^__ScriptVersion="1.0.0"$/;"	v
__add__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __add__(self, other):$/;"	m	class:PowerlineRenderBytesResult	file:
__add__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __add__(self, other):$/;"	m	class:PowerlineRenderResult	file:
__add__	zpwr/.tmux/powerline/ipython.py	/^	def __add__(self, s):$/;"	m	class:RewriteResult	file:
__all__	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^__all__ = ['Composer', 'ComposerError']$/;"	v
__bool__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		__bool__ = __nonzero__$/;"	v	class:.FalseObject
__bool__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	__bool__ = __nonzero__$/;"	v	class:DelayedEchoErr
__call__	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	def __call__(self):$/;"	m	class:ShutdownHook	file:
__call__	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def __call__(self):$/;"	m	class:ShutdownHook	file:
__call__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __call__(self, *args):$/;"	m	class:eval_unicode.VimFunc	file:
__call__	zpwr/.tmux/powerline/commands/config.py	/^	def __call__(self, *args, **kwargs):$/;"	m	class:StrFunction	file:
__call__	zpwr/.tmux/powerline/lib/config.py	/^	def __call__(self, *args, **kwargs):$/;"	m	class:DeferredWatcher	file:
__call__	zpwr/.tmux/powerline/lib/config.py	/^	def __call__(self, *args, **kwargs):$/;"	m	class:DummyWatcher	file:
__call__	zpwr/.tmux/powerline/lib/memoize.py	/^	def __call__(self, func):$/;"	m	class:memoize	file:
__call__	zpwr/.tmux/powerline/lib/threaded.py	/^	def __call__(self, pl, update_first=True, **kwargs):$/;"	m	class:ThreadedSegment	file:
__call__	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def __call__(self, repo):$/;"	m	class:TreeStatusCache	file:
__call__	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def __call__(self):$/;"	m	class:INotifyTreeWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def __call__(self, path):$/;"	m	class:INotifyFileWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def __call__(self, path):$/;"	m	class:StatFileWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def __call__(self):$/;"	m	class:DummyTreeWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def __call__(self, path, ignore_event=None):$/;"	m	class:TreeWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __call__(self):$/;"	m	class:UvTreeWatcher	file:
__call__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __call__(self, path):$/;"	m	class:UvFileWatcher	file:
__call__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __call__(self, **kwargs):$/;"	m	class:DelayedEchoErr	file:
__call__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __call__(self, **kwargs):$/;"	m	class:EchoErr	file:
__call__	zpwr/.tmux/powerline/segments/common/env.py	/^	def __call__(self, pl, segment_info,$/;"	m	class:CwdSegment	file:
__call__	zpwr/.tmux/powerline/segments/common/players.py	/^	def __call__(self, format='{state_symbol} {artist} - {title} ({total})', state_symbols=STATE_SYMBOLS, **kwargs):$/;"	m	class:PlayerSegment	file:
__call__	zpwr/.tmux/powerline/segments/common/vcs.py	/^	def __call__(self, pl, segment_info, create_watcher):$/;"	m	class:StashSegment	file:
__call__	zpwr/.tmux/powerline/segments/common/vcs.py	/^	def __call__(self, pl, segment_info, create_watcher, status_colors=False, ignore_statuses=()):$/;"	m	class:BranchSegment	file:
__contains__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def __contains__(key):$/;"	m	class:Environment	file:
__copyright__	zpwr/.tmux/powerline/lib/inotify.py	/^__copyright__ = '2013, Kovid Goyal <kovid at kovidgoyal.net>'$/;"	v
__del__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def __del__(self):$/;"	m	class:Prompt	file:
__del__	zpwr/.tmux/powerline/lib/inotify.py	/^	def __del__(self):$/;"	m	class:INotify	file:
__del__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __del__(self):$/;"	m	class:UvWatcher	file:
__doc__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^			__doc__ = cls.__doc__$/;"	v	class:use_powerline_prompt.prompt.cls
__docformat__	zpwr/.tmux/powerline/lib/inotify.py	/^__docformat__ = 'restructuredtext en'$/;"	v
__enter__	zpwr/.tmux/powerline/__init__.py	/^	def __enter__(self):$/;"	m	class:Powerline	file:
__enter__	zpwr/.tmux/powerline/lint/imp.py	/^	def __enter__(self):$/;"	m	class:WithPath	file:
__eq__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __eq__(self, tabpage):$/;"	m	class:.Tabpage	file:
__eq__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __eq__(self, other):$/;"	m	class:Mark	file:
__exit__	zpwr/.tmux/powerline/__init__.py	/^	def __exit__(self, *args):$/;"	m	class:Powerline	file:
__exit__	zpwr/.tmux/powerline/lint/imp.py	/^	def __exit__(self, *args):$/;"	m	class:WithPath	file:
__getattr__	zpwr/.tmux/powerline/bindings/config.py	/^	def __getattr__(self, attr):$/;"	m	class:EmptyArgs	file:
__getinitargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getinitargs__ = gen_getnewargs(None)$/;"	v	class:MarkedValue
__getitem__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __getitem__(self, *args):$/;"	m	class:PowerlineRenderBytesResult	file:
__getitem__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __getitem__(self, *args):$/;"	m	class:PowerlineRenderResult	file:
__getitem__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __getitem__(self, key):$/;"	m	class:.TabBufSegmentInfo	file:
__getitem__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __getitem__(self, key):$/;"	m	class:.WindowVars	file:
__getitem__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def __getitem__(key):$/;"	m	class:VimEnviron	file:
__getitem__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def __getitem__(key):$/;"	m	class:Environment	file:
__getitem__	zpwr/.tmux/powerline/lint/spec.py	/^	def __getitem__(self, key):$/;"	m	class:Spec	file:
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getnewargs__ = gen_getnewargs(dict)$/;"	v	class:MarkedDict
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getnewargs__ = gen_getnewargs(float)$/;"	v	class:MarkedFloat
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getnewargs__ = gen_getnewargs(int)$/;"	v	class:MarkedInt
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getnewargs__ = gen_getnewargs(list)$/;"	v	class:MarkedList
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__getnewargs__ = gen_getnewargs(unicode)$/;"	v	class:MarkedUnicode
__getnewargs__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __getnewargs__(self):$/;"	f	function:gen_getnewargs	file:
__getslice__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __getslice__(self, *args):$/;"	m	class:PowerlineRenderBytesResult	file:
__getslice__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __getslice__(self, *args):$/;"	m	class:PowerlineRenderResult	file:
__init__	boiler_gen.py	/^    def __init__(self, filename, directory, contents):$/;"	m	class:CodeFile
__init__	mantozshcomp.py	/^    def __init__(self):$/;"	m	class:Deroffer
__init__	zpwr/.tmux/powerline/__init__.py	/^	def __init__(self, *args, **kwargs):$/;"	m	class:Powerline
__init__	zpwr/.tmux/powerline/__init__.py	/^	def __init__(self, use_daemon_threads, logger, ext):$/;"	m	class:PowerlineLogger
__init__	zpwr/.tmux/powerline/bindings/config.py	/^	def __init__(self, ext, config_path):$/;"	m	class:EmptyArgs
__init__	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		def __init__(self, powerline, shell):$/;"	m	class:ShutdownHook.PowerlinePromptManager
__init__	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	def __init__(self, ip):$/;"	m	class:ShutdownHook
__init__	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	def __init__(self, ip, powerline):$/;"	m	class:PowerlineMagics
__init__	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def __init__(self, cache):$/;"	m	class:IPythonInfo
__init__	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def __init__(self, powerline, powerline_last_in, old_prompt):$/;"	m	class:PowerlinePrompt
__init__	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^	def __init__(self, shell):$/;"	m	class:PowerlinePrompts
__init__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __init__(self):$/;"	m	class:main.Pdb
__init__	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def __init__(self, timeout=2, text=b' ', width=CALCULATED, side='right', update_interval=None, **config):$/;"	m	class:PowerlineTextBox
__init__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __init__(self, f, rettype=None):$/;"	m	class:eval_unicode.VimFunc
__init__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __init__(self, number):$/;"	m	class:.Tabpage
__init__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __init__(self, tabnr, number):$/;"	m	class:.Window
__init__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __init__(self, window):$/;"	m	class:.WindowVars
__init__	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^		def __init__(self, conn):$/;"	m	class:i3_subscribe.I3Thread
__init__	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^	def __init__(self, **kwargs):$/;"	m	class:AwesomeThread
__init__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def __init__(self, powerline, side, theme, savedpsvar=None, savedps=None, above=False):$/;"	m	class:Prompt
__init__	zpwr/.tmux/powerline/colorscheme.py	/^	def __init__(self, colorscheme_config, colors_config):$/;"	m	class:Colorscheme
__init__	zpwr/.tmux/powerline/commands/config.py	/^	def __init__(self, function, name=None):$/;"	m	class:StrFunction
__init__	zpwr/.tmux/powerline/ipython.py	/^	def __init__(self, prompt):$/;"	m	class:RewriteResult
__init__	zpwr/.tmux/powerline/ipython.py	/^	def __init__(self, shell):$/;"	m	class:IPythonInfo
__init__	zpwr/.tmux/powerline/lib/config.py	/^	def __init__(self, *args, **kwargs):$/;"	m	class:DeferredWatcher
__init__	zpwr/.tmux/powerline/lib/config.py	/^	def __init__(self, shutdown_event=None, watcher=None, watcher_type=None, load=load_json_config, run_once=False):$/;"	m	class:ConfigLoader
__init__	zpwr/.tmux/powerline/lib/inotify.py	/^	def __init__(self, cloexec=True, nonblock=True):$/;"	m	class:INotify
__init__	zpwr/.tmux/powerline/lib/memoize.py	/^	def __init__(self, timeout, cache_key=default_cache_key, cache_reg_func=None):$/;"	m	class:memoize
__init__	zpwr/.tmux/powerline/lib/threaded.py	/^	def __init__(self):$/;"	m	class:KwThreadedSegment
__init__	zpwr/.tmux/powerline/lib/threaded.py	/^	def __init__(self):$/;"	m	class:MultiRunnedThread
__init__	zpwr/.tmux/powerline/lib/threaded.py	/^	def __init__(self):$/;"	m	class:ThreadedSegment
__init__	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def __init__(self):$/;"	m	class:FileStatusCache
__init__	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def __init__(self, pl):$/;"	m	class:TreeStatusCache
__init__	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def __init__(self, directory, create_watcher):$/;"	m	class:Repository
__init__	zpwr/.tmux/powerline/lib/vcs/git.py	/^		def __init__(self, *args, **kwargs):$/;"	m	class:GitRepository.Repository
__init__	zpwr/.tmux/powerline/lib/vcs/git.py	/^	def __init__(self, directory, create_watcher):$/;"	m	class:GitRepository
__init__	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	def __init__(self, directory, create_watcher):$/;"	m	class:Repository
__init__	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def __init__(self, basedir, ignore_event=None):$/;"	m	class:INotifyTreeWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def __init__(self, bdir):$/;"	m	class:DirTooLarge
__init__	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def __init__(self, expire_time=10):$/;"	m	class:INotifyFileWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def __init__(self):$/;"	m	class:StatFileWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def __init__(self, basedir):$/;"	m	class:DummyTreeWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def __init__(self, pl, watcher_type, expire_time):$/;"	m	class:TreeWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __init__(self):$/;"	m	class:UvFileWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __init__(self):$/;"	m	class:UvWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __init__(self, basedir, ignore_event=None):$/;"	m	class:UvTreeWatcher
__init__	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def __init__(self, loop):$/;"	m	class:UvThread
__init__	zpwr/.tmux/powerline/lint/imp.py	/^	def __init__(self, import_paths):$/;"	m	class:WithPath
__init__	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def __init__(self):$/;"	m	class:Composer
__init__	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def __init__(self):$/;"	m	class:BaseConstructor
__init__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __init__(self, context=None, context_mark=None, problem=None, problem_mark=None, note=None):$/;"	m	class:MarkedError
__init__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __init__(self, echoerr, logger, indent=0):$/;"	m	class:EchoErr
__init__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __init__(self, echoerr, message='', separator_message=''):$/;"	m	class:DelayedEchoErr
__init__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __init__(self, name, line, column, buffer, pointer, old_mark=None, merged_marks=None):$/;"	m	class:Mark
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, implicit, start_mark=None, end_mark=None, flow_style=None):$/;"	m	class:CollectionStartEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, implicit, value, start_mark=None, end_mark=None, style=None):$/;"	m	class:ScalarEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, start_mark=None, end_mark=None):$/;"	m	class:Event
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, start_mark=None, end_mark=None):$/;"	m	class:NodeEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, start_mark=None, end_mark=None, encoding=None):$/;"	m	class:StreamStartEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, start_mark=None, end_mark=None, explicit=None):$/;"	m	class:DocumentEndEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __init__(self, start_mark=None, end_mark=None, explicit=None, version=None, tags=None):$/;"	m	class:DocumentStartEvent
__init__	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^	def __init__(self, stream):$/;"	m	class:Loader
__init__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__init__ = gen_init(dict)$/;"	v	class:MarkedDict
__init__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__init__ = gen_init(list)$/;"	v	class:MarkedList
__init__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __init__(self, value, mark):$/;"	f	function:gen_init
__init__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __init__(self, value, mark):$/;"	m	class:MarkedValue
__init__	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	def __init__(self, tag, value, start_mark, end_mark):$/;"	m	class:Node
__init__	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	def __init__(self, tag, value, start_mark=None, end_mark=None, flow_style=None):$/;"	m	class:CollectionNode
__init__	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	def __init__(self, tag, value, start_mark=None, end_mark=None, style=None):$/;"	m	class:ScalarNode
__init__	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def __init__(self):$/;"	m	class:Parser
__init__	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def __init__(self, stream):$/;"	m	class:Reader
__init__	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def __init__(self):$/;"	m	class:BaseResolver
__init__	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def __init__(self):$/;"	m	class:Scanner
__init__	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def __init__(self, token_number, index, line, column, mark):$/;"	m	class:SimpleKey
__init__	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	def __init__(self, start_mark, end_mark):$/;"	m	class:Token
__init__	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	def __init__(self, start_mark=None, end_mark=None, encoding=None):$/;"	m	class:StreamStartToken
__init__	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	def __init__(self, value, plain, start_mark, end_mark, style=None):$/;"	m	class:ScalarToken
__init__	zpwr/.tmux/powerline/lint/spec.py	/^	def __init__(self, **keys):$/;"	m	class:Spec
__init__	zpwr/.tmux/powerline/renderer.py	/^	def __init__(self,$/;"	m	class:Renderer
__init__	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def __init__(self, **kwargs):$/;"	m	class:RendererProxy
__init__	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def __init__(self, missing_func):$/;"	m	class:PowerlineStyleDict
__init__	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def __init__(self, old_widths=None, **kwargs):$/;"	m	class:PromptRenderer
__init__	zpwr/.tmux/powerline/renderers/vim.py	/^	def __init__(self, *args, **kwargs):$/;"	m	class:VimRenderer
__init__	zpwr/.tmux/powerline/theme.py	/^	def __init__(self,$/;"	m	class:Theme
__init__	zpwr/.tmux/powerline/vim.py	/^	def __init__(self, varname):$/;"	m	class:VimVarHandler
__init__	zpwr/scripts/boiler_gen.py	/^    def __init__(self, filename, directory, contents):$/;"	m	class:CodeFile
__init__	zpwr/scripts/mantozshcomp.py	/^    def __init__(self):$/;"	m	class:Deroffer
__len__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __len__(self):$/;"	m	class:PowerlineRenderBytesResult	file:
__main__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		import __main__$/;"	i
__main__	zpwr/.tmux/powerline/vim.py	/^		import __main__$/;"	i
__missing__	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def __missing__(self, key):$/;"	m	class:PowerlineStyleDict	file:
__module__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^			__module__ = cls.__module__$/;"	v	class:use_powerline_prompt.prompt.cls
__new__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __new__(cls, s, encoding=None):$/;"	m	class:PowerlineRenderBytesResult	file:
__new__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __new__(cls, s, encoding=None):$/;"	m	class:PowerlineRenderResult	file:
__new__	zpwr/.tmux/powerline/lint/context.py	/^	def __new__(cls, base, context_key=None, context_value=None):$/;"	m	class:Context	file:
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__new__ = gen_new(float)$/;"	v	class:MarkedFloat
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__new__ = gen_new(int)$/;"	v	class:MarkedInt
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__new__ = gen_new(list)$/;"	v	class:MarkedList
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	__new__ = gen_new(unicode)$/;"	v	class:MarkedUnicode
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __new__(arg_cls, value, mark):$/;"	f	function:gen_new	file:
__new__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __new__(arg_cls, value, mark):$/;"	m	class:MarkedDict	file:
__new__	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def __new__(cls, missing_func):$/;"	m	class:PowerlineStyleDict	file:
__nonzero__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def __nonzero__():$/;"	m	class:.FalseObject	file:
__nonzero__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def __nonzero__(self):$/;"	m	class:DelayedEchoErr	file:
__path__	zpwr/.tmux/powerline/matchers/__init__.py	/^__path__ = extend_path(__path__, __name__)$/;"	v
__path__	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^__path__ = extend_path(__path__, __name__)$/;"	v
__path__	zpwr/.tmux/powerline/segments/__init__.py	/^__path__ = extend_path(__path__, __name__)$/;"	v
__path__	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^__path__ = extend_path(__path__, __name__)$/;"	v
__radd__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __radd__(self, other):$/;"	m	class:PowerlineRenderBytesResult	file:
__radd__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __radd__(self, other):$/;"	m	class:PowerlineRenderResult	file:
__repr__	zpwr/.tmux/powerline/lint/markedjson/events.py	/^	def __repr__(self):$/;"	m	class:Event	file:
__repr__	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	def __repr__(self):$/;"	m	class:Node	file:
__repr__	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	def __repr__(self):$/;"	m	class:Token	file:
__setitem__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def __setitem__(key, value):$/;"	m	class:VimEnviron	file:
__setitem__	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def __setitem__(self, key, value):$/;"	m	class:MarkedDict	file:
__setitem__	zpwr/.tmux/powerline/lint/spec.py	/^	def __setitem__(self, key, value):$/;"	m	class:Spec	file:
__slots__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		__slots__ = ('f', 'eval')$/;"	v	class:eval_unicode.VimFunc
__slots__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		__slots__ = ('number',)$/;"	v	class:.Tabpage
__slots__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		__slots__ = ('tabnr', 'number', '_vars')$/;"	v	class:.Window
__slots__	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		__slots__ = ('tabnr', 'winnr')$/;"	v	class:.WindowVars
__slots__	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^	__slots__ = ('powerline_shutdown_event',)$/;"	v	class:AwesomeThread
__slots__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	__slots__ = ('last_pipe_status', 'last_exit_code')$/;"	v	class:Args
__slots__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	__slots__ = ('powerline', 'side', 'savedpsvar', 'savedps', 'args', 'theme', 'above', '__weakref__')$/;"	v	class:Prompt
__slots__	zpwr/.tmux/powerline/lib/vcs/git.py	/^	__slots__ = ('directory', 'create_watcher')$/;"	v	class:GitRepository
__slots__	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	__slots__ = ('directory', 'create_watcher')$/;"	v	class:Repository
__slots__	zpwr/.tmux/powerline/lint/context.py	/^	__slots__ = ()$/;"	v	class:Context
__slots__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	__slots__ = ('echoerr', 'logger', 'errs', 'message', 'separator_message', 'indent', 'indent_shift')$/;"	v	class:DelayedEchoErr
__slots__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	__slots__ = ('echoerr', 'logger', 'indent')$/;"	v	class:EchoErr
__str__	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def __str__(self):$/;"	m	class:PowerlinePrompt	file:
__str__	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def __str__(self):$/;"	m	class:PowerlinePrompt1	file:
__str__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __str__(self):$/;"	m	class:PowerlineRenderResult	file:
__str__	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def __str__(self):$/;"	m	class:Prompt	file:
__str__	zpwr/.tmux/powerline/commands/config.py	/^	def __str__(self):$/;"	m	class:StrFunction	file:
__str__	zpwr/.tmux/powerline/ipython.py	/^	def __str__(self):$/;"	m	class:RewriteResult	file:
__str__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^		def __str__(self):$/;"	f	function:Mark.to_string	file:
__unicode__	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def __unicode__(self):$/;"	m	class:PowerlineRenderBytesResult	file:
__unicode__	zpwr/.tmux/powerline/lint/markedjson/error.py	/^		def __unicode__(self):$/;"	f	function:Mark.to_string	file:
_access_check	zpwr/.tmux/powerline/lib/shell.py	/^		def _access_check(fn, mode):$/;"	f	function:.which
_async_cb	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _async_cb(self, handle):$/;"	m	class:UvThread
_branch_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^_branch_watcher = None$/;"	v
_clear_special_values	zpwr/.tmux/powerline/lib/dict.py	/^def _clear_special_values(d):$/;"	f
_config_loader_condition	zpwr/.tmux/powerline/__init__.py	/^def _config_loader_condition(path):$/;"	f
_configure	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def _configure(self, qtile, bar):$/;"	m	class:PowerlineTextBox
_convert_seconds	zpwr/.tmux/powerline/segments/common/players.py	/^def _convert_seconds(seconds):$/;"	f
_convert_state	zpwr/.tmux/powerline/segments/common/players.py	/^def _convert_state(state):$/;"	f
_cpu_count	zpwr/.tmux/powerline/segments/common/sys.py	/^from multiprocessing import cpu_count as _cpu_count$/;"	i
_escape	help2comp.py	/^def _escape(line):$/;"	f
_escape	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from xml.sax.saxutils import escape as _escape$/;"	i
_escape	zpwr/scripts/help2comp.py	/^def _escape(line):$/;"	f
_external_ip	zpwr/.tmux/powerline/segments/common/net.py	/^def _external_ip(query_url='http:\/\/ipv4.icanhazip.com\/'):$/;"	f
_failing_get_status	zpwr/.tmux/powerline/segments/common/bat.py	/^	def _failing_get_status(pl):$/;"	f	function:_get_battery_status
_fallback_logger	zpwr/.tmux/powerline/__init__.py	/^_fallback_logger = None$/;"	v
_fatal_error_abort	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_fatal_error_abort() {$/;"	f
_fetch_battery_info	zpwr/.tmux/powerline/segments/common/bat.py	/^def _fetch_battery_info(pl):$/;"	f
_fields_	zpwr/.tmux/powerline/lib/monotonic.py	/^				_fields_ = ($/;"	v	class:mach_timebase_info_data_t
_fields_	zpwr/.tmux/powerline/lib/monotonic.py	/^				_fields_ = ($/;"	v	class:timespec
_fields_	zpwr/.tmux/powerline/segments/common/bat.py	/^			_fields_ = [$/;"	v	class:_fetch_battery_info.PowerClass
_file_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^_file_watcher = None$/;"	v
_find_config_files	zpwr/.tmux/powerline/__init__.py	/^def _find_config_files(search_paths, config_file, config_loader=None, loader_callback=None):$/;"	f
_flatten_battery	zpwr/.tmux/powerline/segments/common/bat.py	/^					def _flatten_battery(pl):$/;"	f	function:_fetch_battery_info
_generate_change_callback	zpwr/.tmux/powerline/__init__.py	/^def _generate_change_callback(lock, key, dictionary):$/;"	f
_get_battery_perc	zpwr/.tmux/powerline/segments/common/bat.py	/^					def _get_battery_perc(pl):$/;"	f	function:_fetch_battery_info._get_battery_status
_get_battery_status	zpwr/.tmux/powerline/segments/common/bat.py	/^					def _get_battery_status(pl):$/;"	f	function:_fetch_battery_info._get_battery_status
_get_battery_status	zpwr/.tmux/powerline/segments/common/bat.py	/^			def _get_battery_status(pl):$/;"	f	function:_fetch_battery_info
_get_battery_status	zpwr/.tmux/powerline/segments/common/bat.py	/^		def _get_battery_status(pl):$/;"	f	function:_fetch_battery_info
_get_battery_status	zpwr/.tmux/powerline/segments/common/bat.py	/^def _get_battery_status(pl):$/;"	f
_get_bytes	zpwr/.tmux/powerline/segments/common/net.py	/^	def _get_bytes(interface):$/;"	f
_get_command_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_command_strategy() {$/;"	f
_get_dbus_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def _get_dbus_player_status(pl, bus_name, player_path, iface_prop,$/;"	f
_get_dbus_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def _get_dbus_player_status(pl, player_name, **kwargs):$/;"	m	class:MpdPlayerSegment
_get_inline_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_inline_strategy() {$/;"	f
_get_interfaces	zpwr/.tmux/powerline/segments/common/net.py	/^	def _get_interfaces():$/;"	f
_get_log_keys	zpwr/.tmux/powerline/__init__.py	/^def _get_log_keys(common_config):$/;"	f
_get_proc_match_element	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_proc_match_element() {$/;"	f
_get_proc_restore_element	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_proc_restore_element() {$/;"	f
_get_strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_strategy_file() {$/;"	f
_get_uptime	zpwr/.tmux/powerline/segments/common/sys.py	/^		def _get_uptime():$/;"	f	function:._get_uptime
_get_uptime	zpwr/.tmux/powerline/segments/common/sys.py	/^	def _get_uptime():$/;"	f
_get_user	zpwr/.tmux/powerline/segments/common/env.py	/^		def _get_user():$/;"	f	function:CwdSegment.__call__
_get_user	zpwr/.tmux/powerline/segments/common/env.py	/^		from getpass import getuser as _get_user$/;"	i
_get_user_tmux_conf	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_get_user_tmux_conf() {$/;"	f
_getbufvar	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^_getbufvar = vim_get_func('getbufvar')$/;"	v
_geteuid	zpwr/.tmux/powerline/segments/common/env.py	/^_geteuid = getattr(os, 'geteuid', lambda: 1)$/;"	v
_gitcmd	zpwr/.tmux/powerline/lib/vcs/git.py	/^		def _gitcmd(self, directory, *args):$/;"	m	class:GitRepository.Repository
_has_emacs_mode_keys	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^_has_emacs_mode_keys() {$/;"	f
_highlight_group_spec	zpwr/.tmux/powerline/lint/checks.py	/^_highlight_group_spec = highlight_group_spec().context_message($/;"	v
_id	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^_id = lambda value: value$/;"	v
_inotify	zpwr/.tmux/powerline/lib/inotify.py	/^_inotify = None$/;"	v
_interface_key	zpwr/.tmux/powerline/segments/common/net.py	/^	def _interface_key(interface):$/;"	f
_interface_start_re	zpwr/.tmux/powerline/segments/common/net.py	/^	_interface_start_re = re.compile(r'^([a-z]+?)(\\d|$)')$/;"	v
_interface_starts	zpwr/.tmux/powerline/segments/common/net.py	/^	_interface_starts = {$/;"	v
_just_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_just_command() {$/;"	f
_last_tab_nr	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def _last_tab_nr():$/;"	f
_load_hierarhical_config	zpwr/.tmux/powerline/__init__.py	/^	def _load_hierarhical_config(self, cfg_type, levels, ignore_levels):$/;"	m	class:Powerline
_log	zpwr/.tmux/powerline/__init__.py	/^	def _log(self, attr, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
_mach_timebase_info	zpwr/.tmux/powerline/lib/monotonic.py	/^			_mach_timebase_info = libc.mach_timebase_info$/;"	v
_make_style_from_name	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^		def _make_style_from_name(ip, name):$/;"	f	function:ConfigurableIPythonPowerline.do_setup
_manual_expansion	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_manual_expansion() {$/;"	f
_nefertiti_change_brightness	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_change_brightness(step, up) "{{{3$/;"	f
_nefertiti_reset_brightness	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_reset_brightness() "{{{3$/;"	f
_nefertiti_search_highlight_intensity	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_search_highlight_intensity(step, up) "{{{3$/;"	f
_nefertiti_set_colors	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_set_colors() "{{{3$/;"	f
_nefertiti_set_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_set_dynamic_colors() "{{{3$/;"	f
_nefertiti_set_search_highlight	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_set_search_highlight() "{{{3$/;"	f
_nefertiti_set_stable_colors	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_set_stable_colors() "{{{3$/;"	f
_nefertiti_validate_brightness_level	zpwr/.vim/colors/nefertiti.vim	/^    function! s:_nefertiti_validate_brightness_level() "{{{3$/;"	f
_old_name	zpwr/.tmux/powerline/segments/common/players.py	/^	_old_name = 'spotify_apple_script'$/;"	v
_old_name	zpwr/.tmux/powerline/segments/common/players.py	/^	_old_name = 'spotify_dbus'$/;"	v	class:SpotifyAppleScriptPlayerSegment
_omitted_args	zpwr/.tmux/powerline/lib/threaded.py	/^	_omitted_args = {$/;"	v	class:KwThreadedSegment
_omitted_args	zpwr/.tmux/powerline/lib/threaded.py	/^	_omitted_args = {$/;"	v	class:ThreadedSegment
_override_from	zpwr/.tmux/powerline/vim.py	/^def _override_from(config, override_varname, key=None):$/;"	f
_player	zpwr/.tmux/powerline/segments/common/players.py	/^_player = with_docstring(PlayerSegment(), _common_args.format('_player'))$/;"	v
_powerline_add_status_wrapped_command	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_add_status_wrapped_command() {$/;"	f
_powerline_add_widget	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_add_widget() {$/;"	f
_powerline_append_precmd_function	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_append_precmd_function() {$/;"	f
_powerline_append_trap	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_powerline_append_trap() {$/;"	f
_powerline_cols	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_powerline_cols="$(stty size 2>\/dev\/null)"$/;"	v
_powerline_columns_fallback	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_columns_fallback() {$/;"	f
_powerline_columns_fallback	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_columns_fallback() {$/;"	f
_powerline_columns_fallback	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_columns_fallback() {$/;"	f
_powerline_create_temp	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_create_temp() {$/;"	f
_powerline_do_set_jobs	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_powerline_do_set_jobs() {$/;"	f
_powerline_has_jobs_in_subshell	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_has_jobs_in_subshell() {$/;"	f
_powerline_has_pipestatus	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_has_pipestatus() {$/;"	f
_powerline_init_modes_support	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_init_modes_support() {$/;"	f
_powerline_init_tmux_support	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_init_tmux_support() {$/;"	f
_powerline_init_tmux_support	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_init_tmux_support() {$/;"	f
_powerline_init_tmux_support	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_init_tmux_support() {$/;"	f
_powerline_local_prompt	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_local_prompt() {$/;"	f
_powerline_local_prompt	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_local_prompt() {$/;"	f
_powerline_prompt	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_prompt() {$/;"	f
_powerline_prompt	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_prompt() {$/;"	f
_powerline_return	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_return() {$/;"	f
_powerline_set_append_trap	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	_powerline_set_append_trap() {$/;"	f
_powerline_set_append_trap	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_set_append_trap() {$/;"	f
_powerline_set_command	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_set_command() {$/;"	f
_powerline_set_jobnum	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_set_jobnum() {$/;"	f
_powerline_set_jobs	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^		_powerline_set_jobs() {$/;"	f
_powerline_set_jobs	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_set_jobs() {$/;"	f
_powerline_set_prompt	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_set_prompt() {$/;"	f
_powerline_set_psN	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_powerline_set_psN() {$/;"	f
_powerline_set_renderer_arg	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_set_renderer_arg() {$/;"	f
_powerline_set_set_jobs	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^	_powerline_set_set_jobs() {$/;"	f
_powerline_set_set_jobs	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_set_set_jobs() {$/;"	f
_powerline_setup_prompt	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_setup_prompt() {$/;"	f
_powerline_setup_prompt	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_setup_prompt() {$/;"	f
_powerline_setup_prompt	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_setup_prompt() {$/;"	f
_powerline_setup_psN	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_setup_psN() {$/;"	f
_powerline_status_wrapper	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_status_wrapper() {$/;"	f
_powerline_tmux_pane	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_tmux_pane() {$/;"	f
_powerline_tmux_pane	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_tmux_pane() {$/;"	f
_powerline_tmux_pane	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_tmux_pane() {$/;"	f
_powerline_tmux_set_columns	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_tmux_set_columns() {$/;"	f
_powerline_tmux_set_columns	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_tmux_set_columns() {$/;"	f
_powerline_tmux_set_pwd	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_tmux_set_pwd() {$/;"	f
_powerline_tmux_set_pwd	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_tmux_set_pwd() {$/;"	f
_powerline_tmux_setenv	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^_powerline_tmux_setenv() {$/;"	f
_powerline_tmux_setenv	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^_powerline_tmux_setenv() {$/;"	f
_powerline_traps	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^				_powerline_traps="$(echo "$_powerline_traps" | sed "s\/ $2\/'\\\\n$1' $2\/")"$/;"	v
_powerline_traps	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_powerline_traps="$(trap)"$/;"	v
_powerline_update_counter	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^_powerline_update_counter() {$/;"	f
_powerline_update_psN	zpwr/.tmux/powerline/bindings/shell/powerline.sh	/^			_powerline_update_psN() {$/;"	f
_prepare_segments	zpwr/.tmux/powerline/renderer.py	/^	def _prepare_segments(self, segments, calculate_contents_len):$/;"	m	class:Renderer
_proc_matches_full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_proc_matches_full_command() {$/;"	f
_proc_partition	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def _proc_partition(self, part_result):$/;"	m	class:MarkedUnicode
_proc_starts_with_tildae	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_proc_starts_with_tildae() {$/;"	f
_process_on_the_restore_list	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_process_on_the_restore_list() {$/;"	f
_process_should_be_restored	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_process_should_be_restored() {$/;"	f
_purge_configs	zpwr/.tmux/powerline/__init__.py	/^	def _purge_configs(self, cfg_type):$/;"	m	class:Powerline
_record_event	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _record_event(self, path, fsevent_handle, filename, events, error):$/;"	m	class:UvFileWatcher
_record_event	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _record_event(self, path, fsevent_handle, filename, events, error):$/;"	m	class:UvTreeWatcher
_ref_pat	zpwr/.tmux/powerline/lib/vcs/git.py	/^_ref_pat = re.compile(br'ref:\\s*refs\/heads\/(.+)')$/;"	v
_render_length	zpwr/.tmux/powerline/renderer.py	/^	def _render_length(self, theme, segments, divider_widths):$/;"	m	class:Renderer
_render_segments	zpwr/.tmux/powerline/renderer.py	/^	def _render_segments(self, theme, segments, render_highlighted=True):$/;"	m	class:Renderer
_repo	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	def _repo(self, directory):$/;"	m	class:Repository
_restore_all_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_restore_all_processes() {$/;"	f
_restore_list	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_restore_list() {$/;"	f
_run_tmux	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def _run_tmux(runner, args):$/;"	f
_save_command_strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^_save_command_strategy_file() {$/;"	f
_set_log_handlers	zpwr/.tmux/powerline/__init__.py	/^def _set_log_handlers(common_config, logger, get_module_attr, stream=None):$/;"	f
_setmerged	zpwr/.tmux/powerline/lib/dict.py	/^def _setmerged(d1, d2):$/;"	f
_sourced_files	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_sourced_files() {$/;"	f
_start_watch_0_x	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _start_watch_0_x(self, path):$/;"	m	class:UvWatcher
_start_watch_1_x	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _start_watch_1_x(self, path):$/;"	m	class:UvWatcher
_status	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def _status(self, directory, path):$/;"	m	class:Repository
_stopped_watching	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _stopped_watching(self, path, *args):$/;"	m	class:UvFileWatcher
_stopped_watching	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def _stopped_watching(self, path, *args):$/;"	m	class:UvTreeWatcher
_strategy_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_strategy_exists() {$/;"	f
_strwidth_documentation	zpwr/.tmux/powerline/lib/unicode.py	/^_strwidth_documentation = ($/;"	v
_tmux_conf_contents	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tmux_conf_contents() {$/;"	f
_tpm_path	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tpm_path() {$/;"	f
_tree_status_cache	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^_tree_status_cache = None$/;"	v
_unichr	zpwr/.tmux/powerline/lib/unicode.py	/^	_unichr = unichr$/;"	v
_update	zpwr/.tmux/powerline/lint/spec.py	/^	def _update(self, d, copied):$/;"	m	class:Spec
_uv_thread	zpwr/.tmux/powerline/lib/watcher/uv.py	/^_uv_thread = None$/;"	v
_vim_exists	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^_vim_exists = vim_get_func('exists', rettype='int')$/;"	v
_vim_mode	zpwr/.tmux/powerline/renderers/vim.py	/^	_vim_mode = vim_mode$/;"	v
_vim_to_python	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def _vim_to_python(value):$/;"	f
_vim_to_python_types	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	_vim_to_python_types = {$/;"	v
about	zpwr/.shell_aliases_functions.sh	/^about(){$/;"	f
absolute_import	zpwr/.tmux/powerline/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/pdb/__main__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/colorscheme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/commands/config.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/commands/daemon.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/commands/lemonbar.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/commands/lint.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/commands/main.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/debug.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/dict.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/encoding.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/memoize.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/monotonic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/overrides.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/path.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/threaded.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/unicode.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/url.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/vcs/git.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/checks.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/context.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/imp.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/inspect.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/error.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/events.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/selfcheck.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/lint/spec.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/listers/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/listers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/listers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/i3bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/bash.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/readline.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/renderers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segment.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/bat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/env.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/mail.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/net.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/players.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/sys.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/time.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/vcs.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/common/wthr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/selectors/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/theme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
absolute_import	zpwr/.tmux/powerline/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
accent00	zpwr/.vim/colors/rakr-light.vim	/^  let accent00 = sunFlower$/;"	v
accent11	zpwr/.vim/colors/rakr-light.vim	/^  let accent11 = peterRiver$/;"	v
accent12	zpwr/.vim/colors/rakr-light.vim	/^  let accent12 = belizeHole$/;"	v
accent20	zpwr/.vim/colors/rakr-light.vim	/^  let accent20 = pumpkin$/;"	v
accent21	zpwr/.vim/colors/rakr-light.vim	/^  let accent21 = alizarin$/;"	v
accent22	zpwr/.vim/colors/rakr-light.vim	/^  let accent22 = pomegranate$/;"	v
accent31	zpwr/.vim/colors/rakr-light.vim	/^  let accent31 = turquoise$/;"	v
accent32	zpwr/.vim/colors/rakr-light.vim	/^  let accent32 = greenSea$/;"	v
accent41	zpwr/.vim/colors/rakr-light.vim	/^  let accent41 = amethyst$/;"	v
accent42	zpwr/.vim/colors/rakr-light.vim	/^  let accent42 = wisteria$/;"	v
accept_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^					local accept_line="$(expr "$(zsh -i -c bindkey | grep -m1 '\\saccept-line$')" : '^"\\(.*\\)".*')"$/;"	v
accept_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local accept_line="$(expr "$(echo "$zsh_bindkey" | grep -m1 '\\saccept-line$')" : '^"\\(.*\\)".*')"$/;"	v
accept_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local accept_line='C-m'$/;"	v
acpi_battery_remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^acpi_battery_remaining_time() {$/;"	f
acquire_lock	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^acquire_lock() {$/;"	f
action	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local action="$1" ; shift$/;"	v
active	powerTo.sh	/^active=$(tmux list-panes | grep active | cut -c1)$/;"	v
active	zpwr/scripts/powerTo.sh	/^active=$(tmux list-panes | grep active | cut -c1)$/;"	v
active_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		active_window_index="$(remove_first_char "$active_window_index")"$/;"	v
active_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^				active_window_index="$(get_active_window_index "$session_name")"$/;"	v
add	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def add(encoding, *args):$/;"	m	class:PowerlineRenderBytesResult
add	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def add(encoding, *args):$/;"	m	class:PowerlineRenderResult
addContents	shebangChanger.sh	/^addContents() {$/;"	f
addContents	zpwr/scripts/shebangChanger.sh	/^addContents() {$/;"	f
addDependenciesArch	zpwr/install.sh	/^addDependenciesArch(){$/;"	f
addDependenciesDebian	zpwr/install.sh	/^addDependenciesDebian(){$/;"	f
addDependenciesFreeBSD	zpwr/install.sh	/^addDependenciesFreeBSD(){$/;"	f
addDependenciesLinux	zpwr/install.sh	/^addDependenciesLinux(){$/;"	f
addDependenciesMac	zpwr/install.sh	/^addDependenciesMac(){$/;"	f
addDependenciesRedHat	zpwr/install.sh	/^addDependenciesRedHat(){$/;"	f
addDependenciesSuse	zpwr/install.sh	/^addDependenciesSuse(){$/;"	f
addHeader	createTextFile.sh	/^addHeader() {$/;"	f
addHeader	templater.sh	/^addHeader() {$/;"	f
addHeader	zpwr/scripts/createTextFile.sh	/^addHeader() {$/;"	f
addHeader	zpwr/scripts/templater.sh	/^addHeader() {$/;"	f
addToAry	regexreplace.pl	/^sub addToAry {$/;"	s
addToAry	zpwr/scripts/regexreplace.pl	/^sub addToAry {$/;"	s
add_args	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local add_args='-r .zsh'$/;"	v
add_args_2	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local add_args_2=$add_args$new_args_2$/;"	v
add_args_3	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local add_args_3=$add_args' --renderer-arg="local_theme=select"'$/;"	v
add_args_r2	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local add_args_r2=$add_args$new_args_2$/;"	v
add_constructor	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def add_constructor(cls, tag, constructor):$/;"	m	class:BaseConstructor
add_diagnostic	mantozshcomp.py	/^def add_diagnostic(dgn, msg_verbosity=VERY_VERBOSE):$/;"	f
add_diagnostic	zpwr/scripts/mantozshcomp.py	/^def add_diagnostic(dgn, msg_verbosity=VERY_VERBOSE):$/;"	f
add_divider_highlight_group	zpwr/.tmux/powerline/lib/__init__.py	/^def add_divider_highlight_group(highlight_group):$/;"	f
add_divider_highlight_group	zpwr/.tmux/powerline/segments/common/sys.py	/^from powerline.lib import add_divider_highlight_group$/;"	i
add_divider_highlight_group	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib import add_divider_highlight_group$/;"	i
add_implicit_resolver	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def add_implicit_resolver(cls, tag, regexp, first):$/;"	m	class:BaseResolver
add_local_theme	zpwr/.tmux/powerline/renderers/vim.py	/^	def add_local_theme(self, matcher, theme):$/;"	m	class:VimRenderer
add_local_theme	zpwr/.tmux/powerline/vim.py	/^	def add_local_theme(self, key, config):$/;"	m	class:VimPowerline
add_multiplier	zpwr/.tmux/powerline/listers/vim.py	/^	def add_multiplier(buffer, dct):$/;"	f	function:bufferlister
add_multiplier	zpwr/.tmux/powerline/listers/vim.py	/^	def add_multiplier(tabpage, dct):$/;"	f	function:tablister
add_resurrect_save_interpolation	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^add_resurrect_save_interpolation() {$/;"	f
add_sleep_for_remote_shells	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^add_sleep_for_remote_shells() {$/;"	f
add_spaces_center	zpwr/.tmux/powerline/theme.py	/^def add_spaces_center(pl, amount, segment):$/;"	f
add_spaces_left	zpwr/.tmux/powerline/theme.py	/^def add_spaces_left(pl, amount, segment):$/;"	f
add_spaces_right	zpwr/.tmux/powerline/theme.py	/^def add_spaces_right(pl, amount, segment):$/;"	f
add_watch	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def add_watch(self, path):$/;"	m	class:INotifyTreeWatcher
add_watches	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def add_watches(self, base, top_level=True):$/;"	m	class:INotifyTreeWatcher
additional_args	zpwr/.tmux/powerline/lib/threaded.py	/^	def additional_args(self):$/;"	m	class:ThreadedSegment
additional_args	zpwr/.tmux/powerline/segments/__init__.py	/^	def additional_args():$/;"	m	class:Segment
address	uploadWebDS.sh	/^address="jacobmenke@$MY_IP:\/var\/services\/web"$/;"	v
address	uploadWebPi.sh	/^address="pi@$MY_IP:\/var\/www\/html"$/;"	v
address	zpwr/scripts/uploadWebDS.sh	/^address="jacobmenke@$MY_IP:\/var\/services\/web"$/;"	v
address	zpwr/scripts/uploadWebPi.sh	/^address="pi@$MY_IP:\/var\/www\/html"$/;"	v
advance_string	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def advance_string(self, diff):$/;"	m	class:Mark
after	zpwr/.tmux/powerline/lint/__init__.py	/^	after=Spec().printable().optional(),$/;"	v
alduin_Hour	zpwr/.vim/colors/alduin.vim	/^    let alduin_Hour = strftime("%H") $/;"	v
ale	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^def ale(segment_info, pl, err_format='ERR: ln {first_line} ({num}) ', warn_format='WARN: ln {first_line} ({num}) '):$/;"	f
align	zpwr/.tmux/powerline/lint/__init__.py	/^	align=Spec().oneof(set('lr')).optional(),$/;"	v
alizarin	zpwr/.vim/colors/rakr-light.vim	/^  let alizarin    = "e74c3c"$/;"	v
allRemotes	about.sh	/^allRemotes() {$/;"	f
allRemotes	zpwr/.shell_aliases_functions.sh	/^allRemotes(){$/;"	f
allRemotes	zpwr/scripts/about.sh	/^allRemotes() {$/;"	f
all_interpolated	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^		all_interpolated=${all_interpolated\/\/${battery_interpolation[$i]}\/${battery_commands[$i]}}$/;"	v
all_interpolated	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^	local all_interpolated="$1"$/;"	v
all_tmux_processes	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^all_tmux_processes() {$/;"	f
already_output_completions	mantozshcomp.py	/^already_output_completions = {}$/;"	v
already_output_completions	zpwr/scripts/mantozshcomp.py	/^already_output_completions = {}$/;"	v
alternate_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		alternate_window_index="$(remove_first_char "$alternate_window_index")"$/;"	v
alternate_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^				alternate_window_index="$(get_alternate_window_index "$session_name")"$/;"	v
alternatingPrettyPrint	CPU_Stresser.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	pipUpdater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	rpiSoftwareUpdater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	updater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	updaterNoPip.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	zpwr/.shell_aliases_functions.sh	/^alternatingPrettyPrint(){$/;"	f
alternatingPrettyPrint	zpwr/common.sh	/^alternatingPrettyPrint(){$/;"	f
alternatingPrettyPrint	zpwr/scripts/CPU_Stresser.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	zpwr/scripts/pipUpdater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	zpwr/scripts/rpiSoftwareUpdater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	zpwr/scripts/updater.sh	/^alternatingPrettyPrint() {$/;"	f
alternatingPrettyPrint	zpwr/scripts/updaterNoPip.sh	/^alternatingPrettyPrint() {$/;"	f
always_true	zpwr/.tmux/powerline/segment.py	/^always_true = lambda pl, segment_info, mode: True$/;"	v
amPm	timeConverter.sh	/^    amPm="PM"$/;"	v
amPm	timeConverter.sh	/^amPm="AM"$/;"	v
amPm	zpwr/scripts/timeConverter.sh	/^    amPm="PM"$/;"	v
amPm	zpwr/scripts/timeConverter.sh	/^amPm="AM"$/;"	v
amethyst	zpwr/.vim/colors/rakr-light.vim	/^  let amethyst    = "9b59b6"$/;"	v
amps	zpwr/.powerlevel9kconfig.sh	/^    amps="$(ioreg -rc AppleSmartBattery | grep CurrentCapacity | awk '{printf "%s mAh\\n", $3}')"$/;"	v
and	zpwr/.tmux/powerline/segments/common/bat.py	/^		from shutil import which  # Python-3.3 and later$/;"	i
animate	zpwr/.shell_aliases_functions.sh	/^animate(){$/;"	f
another_tmux_server_running	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^another_tmux_server_running() {$/;"	f
another_tmux_server_running_on_startup	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^another_tmux_server_running_on_startup() {$/;"	f
apm_battery_remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^apm_battery_remaining_time() {$/;"	f
apply_opts	zpwr/.vim/colors/marklar.vim	/^        function! s:apply_opts()$/;"	f
archive_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local archive_file="$(pane_contents_archive_file)"$/;"	v
arg	zpwr/.shell_aliases_functions.sh	/^            arg="$1"$/;"	v
arg	zpwr/.shell_aliases_functions.sh	/^            arg=${argdollar\/\/@\/\\\\@}$/;"	v
arg_to_unicode	zpwr/.tmux/powerline/commands/main.py	/^	def arg_to_unicode(s):$/;"	f
argdollar	zpwr/.shell_aliases_functions.sh	/^            argdollar=${arg\/\/$\/\\\\$}$/;"	v
argmethods	zpwr/.tmux/powerline/lib/threaded.py	/^	argmethods = ('render', 'set_state')$/;"	v	class:ThreadedSegment
argmethods	zpwr/.tmux/powerline/lib/threaded.py	/^	argmethods = ('render', 'set_state', 'key', 'render_one')$/;"	v	class:KwThreadedSegment
argparse	zpwr/.tmux/powerline/commands/config.py	/^import argparse$/;"	i
argparse	zpwr/.tmux/powerline/commands/daemon.py	/^import argparse$/;"	i
argparse	zpwr/.tmux/powerline/commands/lemonbar.py	/^import argparse$/;"	i
argparse	zpwr/.tmux/powerline/commands/lint.py	/^import argparse$/;"	i
argparse	zpwr/.tmux/powerline/commands/main.py	/^import argparse$/;"	i
args	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local args="" hook=""$/;"	v
args	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^	args="${args#*-#}"$/;"	v
args	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^	args="${args%|*}"$/;"	v
args	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^	local args="$ORIGINAL_COMMAND"$/;"	v
args	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	args = parser.parse_args()$/;"	v
args	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	args = parser.parse_args()$/;"	v
args	zpwr/.tmux/powerline/lint/__init__.py	/^	args=args_spec().func(lambda *args, **kwargs: check_args(get_all_possible_functions, *args, **kwargs)),$/;"	v
args	zpwr/.tmux/powerline/lint/__init__.py	/^	args=args_spec().func(lambda *args, **kwargs: check_args(get_one_segment_function, *args, **kwargs)),$/;"	v
args_spec	zpwr/.tmux/powerline/lint/__init__.py	/^args_spec = Spec($/;"	v
argspecobjs	zpwr/.tmux/powerline/lib/threaded.py	/^	def argspecobjs(self):$/;"	m	class:ThreadedSegment
argspecobjs	zpwr/.tmux/powerline/segments/__init__.py	/^		def argspecobjs(self):$/;"	m	class:Segment
argspecobjs	zpwr/.tmux/powerline/segments/common/env.py	/^	def argspecobjs(self):$/;"	m	class:CwdSegment
argspecobjs	zpwr/.tmux/powerline/segments/common/players.py	/^	def argspecobjs(self):$/;"	m	class:PlayerSegment
arr	listAllCommands.sh	/^arr=()$/;"	v
arr	picture_finder.sh	/^    local arr=('|' '\\' '-' '\/')$/;"	v
arr	secureDelete.sh	/^    local arr=('|' '\\' '-' '\/')$/;"	v
arr	sortedArrayCounter.sh	/^arr=()$/;"	v
arr	zpwr/scripts/listAllCommands.sh	/^arr=()$/;"	v
arr	zpwr/scripts/picture_finder.sh	/^    local arr=('|' '\\' '-' '\/')$/;"	v
arr	zpwr/scripts/secureDelete.sh	/^    local arr=('|' '\\' '-' '\/')$/;"	v
arr	zpwr/scripts/sortedArrayCounter.sh	/^arr=()$/;"	v
arrayToJson	zpwr/.shell_aliases_functions.sh	/^arrayToJson(){$/;"	f
ary	zpwr/.shell_aliases_functions.sh	/^        ary="$1"$/;"	v
asbestos	zpwr/.vim/colors/rakr-light.vim	/^  let asbestos    = "7f8c8d"$/;"	v
ascend_resolver	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def ascend_resolver(self):$/;"	m	class:BaseResolver
asrun	zpwr/.tmux/powerline/lib/shell.py	/^def asrun(pl, ascript):$/;"	f
asrun	zpwr/.tmux/powerline/segments/common/players.py	/^from powerline.lib.shell import asrun, run_cmd$/;"	i
atexit	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^import atexit$/;"	i
attached_clients	zpwr/.tmux/powerline/segments/tmux.py	/^def attached_clients(pl, minimum=1):$/;"	f
attr	zpwr/.tmux/powerline/__init__.py	/^			pl.exception('Failed to import attr {0} from module {1}: {2}', attr, module, str(e), prefix=prefix)$/;"	i
attrs	zpwr/.tmux/powerline/lint/__init__.py	/^	attrs=Spec().list(Spec().type(unicode).oneof(set(('bold', 'italic', 'underline')))),$/;"	v
attrs_to_tmux_attrs	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.renderers.tmux import attrs_to_tmux_attrs$/;"	i
attrs_to_tmux_attrs	zpwr/.tmux/powerline/renderers/tmux.py	/^def attrs_to_tmux_attrs(attrs):$/;"	f
auto_restore_default	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_restore_default="off"$/;"	v
auto_restore_enabled	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^auto_restore_enabled() {$/;"	f
auto_restore_halt_file	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_restore_halt_file="${HOME}\/tmux_no_auto_restore"$/;"	v
auto_restore_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_restore_option="@continuum-restore"$/;"	v
auto_restore_value	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^	local auto_restore_value="$(get_tmux_option "$auto_restore_option" "$auto_restore_default")"$/;"	v
auto_rewrite	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def auto_rewrite(self):$/;"	m	class:PowerlinePrompt1
auto_save_interval_default	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_save_interval_default="15"$/;"	v
auto_save_interval_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_save_interval_option="@continuum-save-interval"$/;"	v
auto_save_not_disabled	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^auto_save_not_disabled() {$/;"	f
auto_start_config_default	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_start_config_default=""$/;"	v
auto_start_config_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_start_config_option="@continuum-boot-options"$/;"	v
auto_start_default	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_start_default="off"$/;"	v
auto_start_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^auto_start_option="@continuum-boot"$/;"	v
auto_start_value	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^	local auto_start_value="$(get_tmux_option "$auto_start_option" "$auto_start_default")"$/;"	v
avg	zpwr/.shell_aliases_functions.sh	/^        avg=$((runtime\/(count *1.0)))$/;"	v
b	zpwr/.shell_aliases_functions.sh	/^b(){$/;"	f
b:current_syntax	zpwr/.vim/colors/ciscoacl.vim	/^let b:current_syntax = "cisco"$/;"	v
b:current_syntax	zpwr/.vim/colors/pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	zpwr/.vim/colors/psql.vim	/^let b:current_syntax = "psql"$/;"	v
b:current_syntax	zpwr/.vim/colors/rtl.vim	/^let b:current_syntax = "rtl"$/;"	v
b:current_syntax	zpwr/.vim/colors/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	zpwr/.vim/potion.vim	/^let b:current_syntax = "potion"$/;"	v
backup	zpwr/.shell_aliases_functions.sh	/^backup(){$/;"	f
backup	zpwr/install.sh	/^backup(){$/;"	f
backup_dir	duplicateLineDeleter.sh	/^backup_dir=$scripts_dir\/rcBackups$/;"	v
backup_dir	indenterAndDuplicateLineDeleter.sh	/^backup_dir=$scripts_dir\/rcBackups$/;"	v
backup_dir	zpwr/scripts/duplicateLineDeleter.sh	/^backup_dir=$scripts_dir\/rcBackups$/;"	v
backup_dir	zpwr/scripts/indenterAndDuplicateLineDeleter.sh	/^backup_dir=$scripts_dir\/rcBackups$/;"	v
backupdir	zpwr/install.sh	/^backupdir="$HOME\/.$USER.rc.bak.$(date +'%m.%d.%Y')"$/;"	v
backward_kill_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local backward_kill_line="$(expr "$(echo "$zsh_bindkey" | grep -m1 '\\sbackward-kill-line$')" : '^"\\(.*\\)".*')"$/;"	v
backward_kill_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local backward_kill_line='C-u'$/;"	v
badwolf_tex	zpwr/.vim/colors/badwolf.vim	/^augroup badwolf_tex$/;"	a
badwolf_tex	zpwr/.vim/colors/goodwolf.vim	/^augroup badwolf_tex$/;"	a
banner	about.sh	/^banner() {$/;"	f
banner	zpwr/scripts/about.sh	/^banner() {$/;"	f
bars	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	bars = []$/;"	v
base	fzfPreviewOptsCommon.sh	/^            base=\\$(basename \\$file)$/;"	v
base	fzfPreviewOptsCommon2Pos.sh	/^            base=\\$(basename \\$file)$/;"	v
base	zpwr/.shell_aliases_functions.sh	/^            base="$(dirname "$base")"$/;"	v
base	zpwr/.shell_aliases_functions.sh	/^        base="$(dirname "$1")"$/;"	v
base	zpwr/scripts/fzfPreviewOptsCommon.sh	/^            base=\\$(basename \\$file)$/;"	v
base	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^            base=\\$(basename \\$file)$/;"	v
bash_history_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^bash_history_option="@resurrect-save-bash-history" # deprecated$/;"	v
bash_scripts	zpwr/.tmux/plugins/tmux-yank/citest	/^bash_scripts=($/;"	v
battery	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^		local battery=$(upower -e | grep -E 'battery|DisplayDevice'| tail -n1)$/;"	v
battery	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^	battery=$(upower -e | grep -E 'battery|DisplayDevice'| tail -n1)$/;"	v
battery	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^		battery=$(apm -a)$/;"	v
battery	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^		battery=$(upower -e | grep -E 'battery|DisplayDevice'| tail -n1)$/;"	v
battery	zpwr/.tmux/powerline/segments/common/bat.py	/^def battery(pl, format='{ac_state} {capacity:3.0%}', steps=5, gamify=False, full_heart='O', empty_heart='O', online='C', offline=' '):$/;"	f
battery_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^battery_charged() {$/;"	f
battery_commands	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^battery_commands=($/;"	v
battery_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^battery_discharging() {$/;"	f
battery_interpolation	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^battery_interpolation=($/;"	v
battery_status	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^battery_status() {$/;"	f
before	zpwr/.tmux/powerline/lint/__init__.py	/^	before=Spec().printable().optional(),$/;"	v
belizeHole	zpwr/.vim/colors/rakr-light.vim	/^  let belizeHole  = "2980b9"$/;"	v
bg	zpwr/.tmux/powerline/lint/__init__.py	/^	bg=color_spec(),$/;"	v
bg	zpwr/.vim/colors/detailed.vim	/^fun! s:bg(group, bg)$/;"	f
bg	zpwr/.vim/colors/pink.vim	/^            let bg = s:checkargs(s:col[3])$/;"	v
bg	zpwr/.vim/colors/pink.vim	/^        let bg = s:checkargs(s:col[3])$/;"	v
bg1	zpwr/.vim/colors/rakr-light.vim	/^  let bg1 = darkClouds$/;"	v
bg2	zpwr/.vim/colors/rakr-light.vim	/^  let bg2 = clouds$/;"	v
bg3	zpwr/.vim/colors/rakr-light.vim	/^  let bg3 = lightclouds$/;"	v
bg_color	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        bg_color=$(tmux_option "$bg_color_config" "$default_bg") \\$/;"	v
bg_color_config	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^bg_color_config='@prefix_highlight_bg'$/;"	v
bgcolor	zpwr/.vim/colors/mango.vim	/^  let bgcolor = &background$/;"	v
bin_dir	zpwr/.shell_aliases_functions.sh	/^    local bin_dir="$GOPATH\/pkg\/$ost\/$pkg"$/;"	v
binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	local binding="$1"$/;"	v
bindings	zpwr/.tmux/powerline/commands/config.py	/^import powerline.bindings.config as config$/;"	i
black	zpwr/.vim/colors/spectro.vim	/^let black  = "#000000"$/;"	v
blocksToSize	zpwr/.shell_aliases_functions.sh	/^blocksToSize(){$/;"	f
blocksize	secureDelete.sh	/^blocksize=1  # I\/O with \/dev\/urandom requires unit block size,$/;"	v
blocksize	zpwr/scripts/secureDelete.sh	/^blocksize=1  # I\/O with \/dev\/urandom requires unit block size,$/;"	v
bluewolf_tex	zpwr/.vim/colors/bluewolf.vim	/^augroup bluewolf_tex$/;"	a
bold	zpwr/.shell_aliases_functions.sh	/^    bold=$(tput bold || tput md)$/;"	v
bold	zpwr/.vim/colors/detailed.vim	/^fun! s:bold(group)$/;"	f
bold_fg	zpwr/.vim/colors/detailed.vim	/^fun! s:bold_fg(group, fg)$/;"	f
bold_fgbg	zpwr/.vim/colors/detailed.vim	/^fun! s:bold_fgbg(group, fg, bg)$/;"	f
boldflag	myWatchNoBlink.sh	/^        boldflag=true$/;"	v
boldflag	myWatchNoBlinkColorized.sh	/^        boldflag=true$/;"	v
boldflag	zpwr/scripts/myWatchNoBlink.sh	/^        boldflag=true$/;"	v
boldflag	zpwr/scripts/myWatchNoBlinkColorized.sh	/^        boldflag=true$/;"	v
borderBar	zpwr/motd.sh	/^borderBar=$(color $borderColor "┃")$/;"	v
borderBottomLine	zpwr/motd.sh	/^borderBottomLine=$(color $borderColor "┗$borderLine┛")$/;"	v
borderColor	zpwr/motd.sh	/^borderColor=35$/;"	v
borderEmptyLine	zpwr/motd.sh	/^borderEmptyLine="$borderBar                                                                              $borderBar"$/;"	v
borderLine	zpwr/motd.sh	/^borderLine="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"$/;"	v
borderTopLine	zpwr/motd.sh	/^borderTopLine=$(color $borderColor "┏$borderLine┓")$/;"	v
boxesChar	manzshcompgen.zsh	/^    boxesChar='\/'$/;"	v
boxesChar	zpwr/scripts/manzshcompgen.zsh	/^    boxesChar='\/'$/;"	v
boxesChar	zpwr/scripts/zshcompgen.zsh	/^    boxesChar='\/'$/;"	v
boxesChar	zshcompgen.zsh	/^    boxesChar='\/'$/;"	v
boxesPrint	manzshcompgen.zsh	/^boxesPrint(){$/;"	f
boxesPrint	zpwr/scripts/manzshcompgen.zsh	/^boxesPrint(){$/;"	f
boxesPrint	zpwr/scripts/zshcompgen.zsh	/^boxesPrint(){$/;"	f
boxesPrint	zshcompgen.zsh	/^boxesPrint(){$/;"	f
br	bridgeDown.sh	/^br="br0"$/;"	v
br	bridgeUp.sh	/^br="br0"$/;"	v
br	zpwr/scripts/bridgeDown.sh	/^br="br0"$/;"	v
br	zpwr/scripts/bridgeUp.sh	/^br="br0"$/;"	v
branch	zpwr/.shell_aliases_functions.sh	/^        branch="$1"$/;"	v
branch	zpwr/.shell_aliases_functions.sh	/^        branch=master$/;"	v
branch	zpwr/.shell_aliases_functions.sh	/^    branch=master$/;"	v
branch	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def branch(self):$/;"	m	class:Repository
branch	zpwr/.tmux/powerline/lib/vcs/git.py	/^	def branch(self):$/;"	m	class:GitRepository
branch	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	def branch(self):$/;"	m	class:Repository
branch	zpwr/.tmux/powerline/segments/common/vcs.py	/^branch = with_docstring(BranchSegment(),$/;"	v
branch	zpwr/.tmux/powerline/segments/vim/__init__.py	/^branch = with_docstring(VimBranchSegment(),$/;"	v
branch_lock	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^branch_lock = Lock()$/;"	v
branch_name_cache	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^branch_name_cache = {}$/;"	v
branch_name_from_config_file	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^def branch_name_from_config_file(directory, config_file):$/;"	f
branch_name_from_config_file	zpwr/.tmux/powerline/lib/vcs/git.py	/^def branch_name_from_config_file(directory, config_file):$/;"	f
branch_name_from_config_file	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^def branch_name_from_config_file(directory, config_file):$/;"	f
branch_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def branch_watcher(create_watcher):$/;"	f
buffer	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def buffer(self):$/;"	m	class:.Window
buffer_caches	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^buffer_caches = []$/;"	v
buffer_name	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def buffer_name(segment_info):$/;"	f
buffer_name	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from powerline.bindings.vim import vim_getbufoption, buffer_name$/;"	i
buffer_name	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from powerline.bindings.vim import vim_getbufoption, buffer_name$/;"	i
buffer_name	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^from powerline.bindings.vim import buffer_name$/;"	i
buffer_name	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^from powerline.bindings.vim import buffer_name$/;"	i
buffer_updated_segment_info	zpwr/.tmux/powerline/listers/vim.py	/^def buffer_updated_segment_info(segment_info, buffer):$/;"	f
bufferlister	zpwr/.tmux/powerline/listers/vim.py	/^def bufferlister(pl, segment_info, show_unlisted=False, **kwargs):$/;"	f
bufnr	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def bufnr(pl, segment_info, show_current=True):$/;"	f
bufvar_exists	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def bufvar_exists(buffer, varname):$/;"	f
bufvar_exists	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from powerline.bindings.vim import bufvar_exists$/;"	i
build_prim	zpwr/.vim/colors/hybrid.vim	/^function! s:build_prim(hi_elem, field)$/;"	f
built_command	mantozshcomp.py	/^def built_command(options, description, arg):$/;"	f
built_command	zpwr/scripts/mantozshcomp.py	/^def built_command(options, description, arg):$/;"	f
built_command_output	mantozshcomp.py	/^built_command_output = []$/;"	v
built_command_output	zpwr/scripts/mantozshcomp.py	/^built_command_output = []$/;"	v
byref	zpwr/.tmux/powerline/segments/common/bat.py	/^		from ctypes import Structure, c_byte, c_ulong, byref$/;"	i
bytes	zpwr/.shell_aliases_functions.sh	/^    local bytes=$(( input * 512 ))$/;"	v
bz2	mantozshcomp.py	/^import bz2$/;"	i
bz2	zpwr/scripts/mantozshcomp.py	/^import bz2$/;"	i
c	zpwr/.shell_aliases_functions.sh	/^c(){$/;"	f
c_byte	zpwr/.tmux/powerline/segments/common/bat.py	/^		from ctypes import Structure, c_byte, c_ulong, byref$/;"	i
c_comm	zpwr/.vim/colors/spectro.vim	/^let c_comm = Hsl2rgb(71)$/;"	v
c_comment_strings	zpwr/.vim/colors/mopkai.vim	/^let c_comment_strings = 1$/;"	v
c_curs	zpwr/.vim/colors/spectro.vim	/^let c_curs = Hsl2rgb(58)$/;"	v
c_erro	zpwr/.vim/colors/spectro.vim	/^let c_erro = Hsl2rgb(0)$/;"	v
c_gnu	zpwr/.vim/colors/256-grayvim.vim	/^let c_gnu = 1$/;"	v
c_gnu	zpwr/.vim/colors/256-jungle.vim	/^let c_gnu = 1$/;"	v
c_gnu	zpwr/.vim/colors/devbox-dark-256.vim	/^let c_gnu = 1$/;"	v
c_gnu	zpwr/.vim/colors/mopkai.vim	/^let c_gnu = 1$/;"	v
c_iden	zpwr/.vim/colors/spectro.vim	/^let c_iden = Hsl2rgb(42)$/;"	v
c_numb	zpwr/.vim/colors/spectro.vim	/^let c_numb = Hsl2rgb(128)$/;"	v
c_prep	zpwr/.vim/colors/spectro.vim	/^let c_prep = Hsl2rgb(8)$/;"	v
c_spec	zpwr/.vim/colors/spectro.vim	/^let c_spec = Hsl2rgb(27)$/;"	v
c_stat	zpwr/.vim/colors/spectro.vim	/^let c_stat = Hsl2rgb(212)$/;"	v
c_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:c_syntax_and_highlights()$/;"	f
c_tabl	zpwr/.vim/colors/spectro.vim	/^let c_tabl = Hsl2rgb(140)$/;"	v
c_ulong	zpwr/.tmux/powerline/segments/common/bat.py	/^		from ctypes import Structure, c_byte, c_ulong, byref$/;"	i
c_visu	zpwr/.vim/colors/spectro.vim	/^let c_visu = Hsl2rgb(223)$/;"	v
cabin_colorscheme	zpwr/.vim/colors/cabin.vim	/^augroup cabin_colorscheme$/;"	a
cache_and_get	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def cache_and_get(self, key, status):$/;"	m	class:TreeStatusCache
cache_tmux_default_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^cache_tmux_default_command() {$/;"	f
capslock_indicator	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^def capslock_indicator(pl, segment_info, text='CAPS'):$/;"	f
capture_pane_contents	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^capture_pane_contents() {$/;"	f
capture_pane_contents_option_on	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^capture_pane_contents_option_on() {$/;"	f
cargo_bin	rpiSoftwareUpdater.sh	/^cargo_bin="$HOME\/.cargo\/bin\/cargo"$/;"	v
cargo_bin	zpwr/scripts/rpiSoftwareUpdater.sh	/^cargo_bin="$HOME\/.cargo\/bin\/cargo"$/;"	v
cargoinstall	zpwr/install.sh	/^cargoinstall(){$/;"	f
carrot	zpwr/.vim/colors/rakr-light.vim	/^  let carrot      = "e67e22"$/;"	v
casestr	fzfPreviewOptsCommon.sh	/^casestr=$(cat<<EOF$/;"	v
casestr	fzfPreviewOptsCommon2Pos.sh	/^casestr=$(cat<<EOF$/;"	v
casestr	zpwr/scripts/fzfPreviewOptsCommon.sh	/^casestr=$(cat<<EOF$/;"	v
casestr	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^casestr=$(cat<<EOF$/;"	v
category	zpwr/.shell_aliases_functions.sh	/^            category="$2"$/;"	v
category	zpwr/.shell_aliases_functions.sh	/^        category="programming"$/;"	v
cd	zpwr/.shell_aliases_functions.sh	/^cd(){$/;"	f
cdll	zpwr/.tmux/powerline/segments/common/bat.py	/^			from ctypes import cdll$/;"	i
center	zpwr/motd.sh	/^function center (){$/;"	f
cgh	zpwr/.shell_aliases_functions.sh	/^cgh(){$/;"	f
chain	zpwr/.tmux/powerline/commands/main.py	/^from itertools import chain$/;"	i
chain	zpwr/.tmux/powerline/lib/debug.py	/^from itertools import chain$/;"	i
chain	zpwr/.tmux/powerline/lint/__init__.py	/^from itertools import chain$/;"	i
chain	zpwr/.tmux/powerline/renderer.py	/^from itertools import chain$/;"	i
changeGitEmail	zpwr/.shell_aliases_functions.sh	/^changeGitEmail(){$/;"	f
character_translations	zpwr/.tmux/powerline/renderer.py	/^	character_translations = {}$/;"	v	class:Renderer
character_translations	zpwr/.tmux/powerline/renderers/lemonbar.py	/^	character_translations = Renderer.character_translations.copy()$/;"	v	class:LemonbarRenderer
character_translations	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	character_translations = Renderer.character_translations.copy()$/;"	v	class:ShellRenderer
character_translations	zpwr/.tmux/powerline/renderers/shell/bash.py	/^	character_translations = ShellRenderer.character_translations.copy()$/;"	v	class:BashPromptRenderer
character_translations	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^	character_translations = ZshPromptRenderer.character_translations.copy()$/;"	v	class:TcshPromptRenderer
character_translations	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^	character_translations = ShellRenderer.character_translations.copy()$/;"	v	class:ZshPromptRenderer
character_translations	zpwr/.tmux/powerline/renderers/tmux.py	/^	character_translations = Renderer.character_translations.copy()$/;"	v	class:TmuxRenderer
character_translations	zpwr/.tmux/powerline/renderers/vim.py	/^	character_translations = Renderer.character_translations.copy()$/;"	v	class:VimRenderer
chars	batchRename.sh	/^    local chars=1                   # number of characters to display$/;"	v
chars	openAll.sh	/^    local chars=1                   # number of characters to display$/;"	v
chars	zpwr/scripts/batchRename.sh	/^    local chars=1                   # number of characters to display$/;"	v
chars	zpwr/scripts/openAll.sh	/^    local chars=1                   # number of characters to display$/;"	v
check	zpwr/.tmux/powerline/lint/__init__.py	/^def check(paths=None, debug=False, echoerr=echoerr, require_ext=None):$/;"	f
checkForExistence	batchRename.sh	/^checkForExistence() {$/;"	f
checkForExistence	zpwr/scripts/batchRename.sh	/^checkForExistence() {$/;"	f
check_args	zpwr/.tmux/powerline/lint/checks.py	/^def check_args(get_functions, args, data, context, echoerr):$/;"	f
check_args_variant	zpwr/.tmux/powerline/lint/checks.py	/^def check_args_variant(func, args, data, context, echoerr):$/;"	f
check_binding_defined	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_binding_defined() {$/;"	f
check_color	zpwr/.tmux/powerline/lint/checks.py	/^def check_color(color, data, context, echoerr):$/;"	f
check_command	zpwr/.tmux/powerline/bindings/config.py	/^def check_command(cmd):$/;"	f
check_config	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.checks import (check_matcher_func, check_ext, check_config, check_top_theme,$/;"	i
check_config	zpwr/.tmux/powerline/lint/checks.py	/^def check_config(d, theme, data, context, echoerr):$/;"	f
check_data	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def check_data(self):$/;"	m	class:BaseConstructor
check_dir_exists	boiler_gen.py	/^def check_dir_exists(directory):$/;"	f
check_dir_exists	zpwr/scripts/boiler_gen.py	/^def check_dir_exists(directory):$/;"	f
check_dir_exists_helper	zpwr/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^check_dir_exists_helper() {$/;"	f
check_either	zpwr/.tmux/powerline/lint/spec.py	/^	def check_either(self, value, context_mark, data, context, echoerr, start, end):$/;"	m	class:Spec
check_event	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def check_event(self, *choices):$/;"	m	class:Parser
check_exinclude_function	zpwr/.tmux/powerline/lint/checks.py	/^def check_exinclude_function(name, data, context, echoerr):$/;"	f
check_ext	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.checks import (check_matcher_func, check_ext, check_config, check_top_theme,$/;"	i
check_ext	zpwr/.tmux/powerline/lint/checks.py	/^def check_ext(ext, data, context, echoerr):$/;"	f
check_full_segment_data	zpwr/.tmux/powerline/lint/checks.py	/^def check_full_segment_data(segment, data, context, echoerr):$/;"	f
check_func	zpwr/.tmux/powerline/lint/spec.py	/^	def check_func(self, value, context_mark, data, context, echoerr, func, msg_func):$/;"	m	class:Spec
check_group	zpwr/.tmux/powerline/lint/checks.py	/^def check_group(group, data, context, echoerr):$/;"	f
check_highlight_group	zpwr/.tmux/powerline/lint/checks.py	/^def check_highlight_group(hl_group, data, context, echoerr):$/;"	f
check_highlight_groups	zpwr/.tmux/powerline/lint/checks.py	/^def check_highlight_groups(hl_groups, data, context, echoerr):$/;"	f
check_hl_group_name	zpwr/.tmux/powerline/lint/checks.py	/^def check_hl_group_name(hl_group, context_mark, context, echoerr):$/;"	f
check_key_compatibility	zpwr/.tmux/powerline/lint/checks.py	/^def check_key_compatibility(segment, data, context, echoerr):$/;"	f
check_list	zpwr/.tmux/powerline/lint/spec.py	/^	def check_list(self, value, context_mark, data, context, echoerr, item_func, msg_func):$/;"	m	class:Spec
check_log_file_level	zpwr/.tmux/powerline/lint/checks.py	/^def check_log_file_level(this_level, data, context, echoerr):$/;"	f
check_logging_handler	zpwr/.tmux/powerline/lint/checks.py	/^def check_logging_handler(handler_name, data, context, echoerr):$/;"	f
check_matcher_func	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.checks import (check_matcher_func, check_ext, check_config, check_top_theme,$/;"	i
check_matcher_func	zpwr/.tmux/powerline/lint/checks.py	/^def check_matcher_func(ext, match_name, data, context, echoerr):$/;"	f
check_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def check_node(self):$/;"	m	class:Composer
check_plain	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def check_plain(self):$/;"	m	class:Scanner
check_printable	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def check_printable(self, data):$/;"	m	class:Reader
check_printable	zpwr/.tmux/powerline/lint/spec.py	/^	def check_printable(self, value, context_mark, data, context, echoerr, _):$/;"	m	class:Spec
check_resolver_prefix	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def check_resolver_prefix(self, depth, path, kind, current_node, current_index):$/;"	m	class:BaseResolver
check_saved_session_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^check_saved_session_exists() {$/;"	f
check_segment_data_key	zpwr/.tmux/powerline/lint/checks.py	/^def check_segment_data_key(key, data, context, echoerr):$/;"	f
check_segment_function	zpwr/.tmux/powerline/lint/checks.py	/^def check_segment_function(function_name, data, context, echoerr):$/;"	f
check_segment_module	zpwr/.tmux/powerline/lint/checks.py	/^def check_segment_module(module, data, context, echoerr):$/;"	f
check_token	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def check_token(self, *choices):$/;"	m	class:Scanner
check_top_theme	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.checks import (check_matcher_func, check_ext, check_config, check_top_theme,$/;"	i
check_top_theme	zpwr/.tmux/powerline/lint/checks.py	/^def check_top_theme(theme, data, context, echoerr):$/;"	f
check_tpm_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_tpm_path() {$/;"	f
check_translated_group_name	zpwr/.tmux/powerline/lint/checks.py	/^def check_translated_group_name(group, data, context, echoerr):$/;"	f
check_tuple	zpwr/.tmux/powerline/lint/spec.py	/^	def check_tuple(self, value, context_mark, data, context, echoerr, start, end):$/;"	m	class:Spec
check_type	zpwr/.tmux/powerline/lint/spec.py	/^	def check_type(self, value, context_mark, data, context, echoerr, types):$/;"	m	class:Spec
checkargs	zpwr/.vim/colors/calmar256-light.vim	/^function! s:checkargs(arg)$/;"	f
checkargs	zpwr/.vim/colors/pink.vim	/^function! s:checkargs(arg)$/;"	f
choose	zpwr/.vim/colors/bocau.vim	/^function! s:choose(mediocre,good)$/;"	f
choose	zpwr/.vim/colors/jiks.vim	/^function! s:choose(mediocre,good)$/;"	f
choose	zpwr/.vim/colors/vividchalk.vim	/^function! s:choose(mediocre,good)$/;"	f
chrome	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^	chrome="\/sys\/class\/chromeos\/cros_ec"$/;"	v
clamp	zpwr/.vim/colors/saturn.vim	/^fu! s:clamp(value, bottom, up)$/;"	f
classcache	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^classcache = {}$/;"	v
clean_key	zpwr/.tmux/plugins/tpm/tpm	/^	local clean_key="$(get_tmux_option "$clean_key_option" "$default_clean_key")"$/;"	v
clean_key_option	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^clean_key_option="@tpm-clean"$/;"	v
clean_plugins	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^clean_plugins() {$/;"	f
cleanup_autogenerated_completions_in_directory	mantozshcomp.py	/^def cleanup_autogenerated_completions_in_directory(dir):$/;"	f
cleanup_autogenerated_completions_in_directory	zpwr/scripts/mantozshcomp.py	/^def cleanup_autogenerated_completions_in_directory(dir):$/;"	f
cleanup_autogenerated_file	mantozshcomp.py	/^def cleanup_autogenerated_file(path):$/;"	f
cleanup_autogenerated_file	zpwr/scripts/mantozshcomp.py	/^def cleanup_autogenerated_file(path):$/;"	f
clearList	clearList.sh	/^clearList() {$/;"	f
clearList	zpwr/.shell_aliases_functions.sh	/^clearList() {$/;"	f
clearList	zpwr/scripts/clearList.sh	/^clearList() {$/;"	f
clearline	batchRename.sh	/^    local clearline="\\e[K"          # clear to end of line (ANSI terminal)$/;"	v
clearline	openAll.sh	/^    local clearline="\\e[K"          # clear to end of line (ANSI terminal)$/;"	v
clearline	zpwr/scripts/batchRename.sh	/^    local clearline="\\e[K"          # clear to end of line (ANSI terminal)$/;"	v
clearline	zpwr/scripts/openAll.sh	/^    local clearline="\\e[K"          # clear to end of line (ANSI terminal)$/;"	v
clementine	zpwr/.tmux/powerline/segments/common/players.py	/^clementine = with_docstring(ClementinePlayerSegment(),$/;"	v
clipboard_copy_command	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^clipboard_copy_command() {$/;"	f
clipboard_copy_without_newline_command	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^clipboard_copy_without_newline_command() {$/;"	f
clock_gettime	zpwr/.tmux/powerline/lib/monotonic.py	/^			clock_gettime = librt.clock_gettime$/;"	v
clock_gettime	zpwr/.tmux/powerline/lib/monotonic.py	/^		from time import clock_gettime$/;"	i
clock_id	zpwr/.tmux/powerline/lib/monotonic.py	/^				clock_id = CLOCK_MONOTONIC$/;"	v
clock_id	zpwr/.tmux/powerline/lib/monotonic.py	/^				clock_id = CLOCK_MONOTONIC_RAW$/;"	v
clone	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone() {$/;"	f
cloneToForked	zpwr/.shell_aliases_functions.sh	/^cloneToForked(){$/;"	f
clone_plugin	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone_plugin() {$/;"	f
close	zpwr/.tmux/powerline/lib/inotify.py	/^	def close(self):$/;"	m	class:INotify
close	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def close(self):$/;"	m	class:INotifyFileWatcher
close	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def close(self):$/;"	m	class:StatFileWatcher
clouds	zpwr/.vim/colors/rakr-light.vim	/^  let clouds      = "ecf0f1"$/;"	v
cls	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		class cls(cls, object):$/;"	c	function:use_powerline_prompt.prompt
cmd	delete_dups.zsh	/^    cmd="$(echo $f | cut -c2-)"$/;"	v
cmd	fzfMan.sh	/^cmd="$1"$/;"	v
cmd	keybindingsToFZFVim.zsh	/^    cmd=nvim$/;"	v
cmd	keybindingsToFZFVim.zsh	/^    cmd=vim$/;"	v
cmd	zpwr/.shell_aliases_functions.sh	/^        cmd="$ZPWR_OPEN_CMD"$/;"	v
cmd	zpwr/.shell_aliases_functions.sh	/^        cmd=date$/;"	v
cmd	zpwr/.shell_aliases_functions.sh	/^        cmd=gdate$/;"	v
cmd	zpwr/.shell_aliases_functions.sh	/^        cmd=subl$/;"	v
cmd	zpwr/.shell_aliases_functions.sh	/^    cmd="$1"$/;"	v
cmd	zpwr/.tmux/google.sh	/^cmd="$(getOpenCommand)"$/;"	v
cmd	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local cmd="$1" ; shift$/;"	v
cmd	zpwr/scripts/delete_dups.zsh	/^    cmd="$(echo $f | cut -c2-)"$/;"	v
cmd	zpwr/scripts/fzfMan.sh	/^cmd="$1"$/;"	v
cmd	zpwr/scripts/keybindingsToFZFVim.zsh	/^    cmd=nvim$/;"	v
cmd	zpwr/scripts/keybindingsToFZFVim.zsh	/^    cmd=vim$/;"	v
cmdType	fzfEnv.sh	/^cmdType=\\$(grep -m1 -a " \\$line\\$" ${ZPWR_ENV}Key.txt | awk "{print \\\\\\$1}")$/;"	v
cmdType	zpwr/scripts/fzfEnv.sh	/^cmdType=\\$(grep -m1 -a " \\$line\\$" ${ALL_ENV}Key.txt | awk "{print \\\\\\$1}")$/;"	v
cmd_get	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def cmd_get(self):$/;"	m	class:PowerlineTextBox
cmd_update	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def cmd_update(self, text):$/;"	m	class:PowerlineTextBox
cmds	grc.zsh	/^  cmds=($/;"	v
cmds	zpwr/grc.zsh	/^  cmds=($/;"	v
cmds	zpwr/scripts/grc.zsh	/^  cmds=($/;"	v
cmdwin	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^def cmdwin(matcher_info):$/;"	f
cmp	zpwr/.tmux/powerline/lint/spec.py	/^	def cmp(self, comparison, cint, msg_func=None):$/;"	m	class:Spec
cmp_funcs	zpwr/.tmux/powerline/lint/spec.py	/^	cmp_funcs = {$/;"	v	class:Spec
cmp_msgs	zpwr/.tmux/powerline/lint/spec.py	/^	cmp_msgs = {$/;"	v	class:Spec
cmus	zpwr/.tmux/powerline/segments/common/players.py	/^cmus = with_docstring(CmusPlayerSegment(),$/;"	v
codecs	mantozshcomp.py	/^import codecs$/;"	i
codecs	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^import codecs$/;"	i
codecs	zpwr/.tmux/powerline/lib/config.py	/^import codecs$/;"	i
codecs	zpwr/.tmux/powerline/lib/unicode.py	/^import codecs$/;"	i
codecs	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^import codecs$/;"	i
codecs	zpwr/scripts/mantozshcomp.py	/^import codecs$/;"	i
col_current	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def col_current(pl, segment_info):$/;"	f
collections	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^import collections$/;"	i
colo	zpwr/.shell_aliases_functions.sh	/^        colo=$/;"	v
color	tailZOU.sh	/^    color=$2$/;"	v
color	zpwr/.vim/colors/candyman.vim	/^fun! s:color(r, g, b)$/;"	f
color	zpwr/.vim/colors/cobalt2.vim	/^fun! s:color(r, g, b)$/;"	f
color	zpwr/.vim/colors/coda.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/desert256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:color(r, g, b)$/;"	f
color	zpwr/.vim/colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
color	zpwr/.vim/colors/lizard256.vim	/^fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/simple256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/triplejelly.vim	/^fun! s:color(r, g, b)$/;"	f
color	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>color(r, g, b)$/;"	f
color	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>color(r, g, b)$/;"	f
color	zpwr/motd.sh	/^function color (){$/;"	f
color	zpwr/scripts/tailZOU.sh	/^    color=$2$/;"	v
color2	zpwr/.shell_aliases_functions.sh	/^color2(){$/;"	f
color_charge_primary_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier1=$(get_tmux_option "@batt_color_charge_primary_tier1" "$color_charge_primary_tier1_default")$/;"	v
color_charge_primary_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier1=''$/;"	v
color_charge_primary_tier1_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier1_default='#ff0000'$/;"	v
color_charge_primary_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier2=$(get_tmux_option "@batt_color_charge_primary_tier2" "$color_charge_primary_tier2_default")$/;"	v
color_charge_primary_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier2=''$/;"	v
color_charge_primary_tier2_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier2_default='#ff4000'$/;"	v
color_charge_primary_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier3=$(get_tmux_option "@batt_color_charge_primary_tier3" "$color_charge_primary_tier3_default")$/;"	v
color_charge_primary_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier3=''$/;"	v
color_charge_primary_tier3_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier3_default='#ff8000'$/;"	v
color_charge_primary_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier4=$(get_tmux_option "@batt_color_charge_primary_tier4" "$color_charge_primary_tier4_default")$/;"	v
color_charge_primary_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier4=''$/;"	v
color_charge_primary_tier4_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier4_default='#ffc000'$/;"	v
color_charge_primary_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier5=$(get_tmux_option "@batt_color_charge_primary_tier5" "$color_charge_primary_tier5_default")$/;"	v
color_charge_primary_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier5=''$/;"	v
color_charge_primary_tier5_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier5_default='#ffff00'$/;"	v
color_charge_primary_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier6=$(get_tmux_option "@batt_color_charge_primary_tier6" "$color_charge_primary_tier6_default")$/;"	v
color_charge_primary_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier6=''$/;"	v
color_charge_primary_tier6_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier6_default='#aaff00'$/;"	v
color_charge_primary_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier7=$(get_tmux_option "@batt_color_charge_primary_tier7" "$color_charge_primary_tier7_default")$/;"	v
color_charge_primary_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier7=''$/;"	v
color_charge_primary_tier7_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier7_default='#55ff00'$/;"	v
color_charge_primary_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_primary_tier8=$(get_tmux_option "@batt_color_charge_primary_tier8" "$color_charge_primary_tier8_default")$/;"	v
color_charge_primary_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier8=''$/;"	v
color_charge_primary_tier8_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_primary_tier8_default='#00ff00'$/;"	v
color_charge_secondary_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier1=$(get_tmux_option "@batt_color_charge_secondary_tier1" "$color_charge_secondary_tier1_default")$/;"	v
color_charge_secondary_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier1=''$/;"	v
color_charge_secondary_tier1_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier1_default='colour0'$/;"	v
color_charge_secondary_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier2=$(get_tmux_option "@batt_color_charge_secondary_tier2" "$color_charge_secondary_tier2_default")$/;"	v
color_charge_secondary_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier2=''$/;"	v
color_charge_secondary_tier2_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier2_default='colour0'$/;"	v
color_charge_secondary_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier3=$(get_tmux_option "@batt_color_charge_secondary_tier3" "$color_charge_secondary_tier3_default")$/;"	v
color_charge_secondary_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier3=''$/;"	v
color_charge_secondary_tier3_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier3_default='colour0'$/;"	v
color_charge_secondary_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier4=$(get_tmux_option "@batt_color_charge_secondary_tier4" "$color_charge_secondary_tier4_default")$/;"	v
color_charge_secondary_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier4=''$/;"	v
color_charge_secondary_tier4_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier4_default='colour0'$/;"	v
color_charge_secondary_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier5=$(get_tmux_option "@batt_color_charge_secondary_tier5" "$color_charge_secondary_tier5_default")$/;"	v
color_charge_secondary_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier5=''$/;"	v
color_charge_secondary_tier5_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier5_default='colour0'$/;"	v
color_charge_secondary_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier6=$(get_tmux_option "@batt_color_charge_secondary_tier6" "$color_charge_secondary_tier6_default")$/;"	v
color_charge_secondary_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier6=''$/;"	v
color_charge_secondary_tier6_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier6_default='colour0'$/;"	v
color_charge_secondary_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier7=$(get_tmux_option "@batt_color_charge_secondary_tier7" "$color_charge_secondary_tier7_default")$/;"	v
color_charge_secondary_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier7=''$/;"	v
color_charge_secondary_tier7_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier7_default='colour0'$/;"	v
color_charge_secondary_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	color_charge_secondary_tier8=$(get_tmux_option "@batt_color_charge_secondary_tier8" "$color_charge_secondary_tier8_default")$/;"	v
color_charge_secondary_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier8=''$/;"	v
color_charge_secondary_tier8_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^color_charge_secondary_tier8_default='colour0'$/;"	v
color_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    color_charging=$(get_tmux_option "@batt_color_charging" "$color_charging_default")$/;"	v
color_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_charging=""$/;"	v
color_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    color_charging=$(get_tmux_option "@batt_color_charging" "$color_charging_default")$/;"	v
color_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_charging=""$/;"	v
color_charging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_charging_default="#[bg=green]"$/;"	v
color_charging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_charging_default="#[fg=green]"$/;"	v
color_for	zpwr/.vim/colors/detailed.vim	/^fun! s:color_for(id, fgbg)$/;"	f
color_full_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    color_full_charge=$(get_tmux_option "@batt_color_full_charge" "$color_full_charge_default")$/;"	v
color_full_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_full_charge=""$/;"	v
color_full_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    color_full_charge=$(get_tmux_option "@batt_color_full_charge" "$color_full_charge_default")$/;"	v
color_full_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_full_charge=""$/;"	v
color_full_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_full_charge_default="#[bg=green]"$/;"	v
color_full_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_full_charge_default="#[fg=green]"$/;"	v
color_high_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    color_high_charge=$(get_tmux_option "@batt_color_high_charge" "$color_high_charge_default")$/;"	v
color_high_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_high_charge=""$/;"	v
color_high_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    color_high_charge=$(get_tmux_option "@batt_color_high_charge" "$color_high_charge_default")$/;"	v
color_high_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_high_charge=""$/;"	v
color_high_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_high_charge_default="#[bg=yellow]"$/;"	v
color_high_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_high_charge_default="#[fg=yellow]"$/;"	v
color_low_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    color_low_charge=$(get_tmux_option "@batt_color_low_charge" "$color_low_charge_default")$/;"	v
color_low_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_low_charge=""$/;"	v
color_low_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    color_low_charge=$(get_tmux_option "@batt_color_low_charge" "$color_low_charge_default")$/;"	v
color_low_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_low_charge=""$/;"	v
color_low_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_low_charge_default="#[bg=red]"$/;"	v
color_low_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_low_charge_default="#[fg=red]"$/;"	v
color_medium_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    color_medium_charge=$(get_tmux_option "@batt_color_medium_charge" "$color_medium_charge_default")$/;"	v
color_medium_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_medium_charge=""$/;"	v
color_medium_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    color_medium_charge=$(get_tmux_option "@batt_color_medium_charge" "$color_medium_charge_default")$/;"	v
color_medium_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_medium_charge=""$/;"	v
color_medium_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^color_medium_charge_default="#[bg=colour208]" # orange$/;"	v
color_medium_charge_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^color_medium_charge_default="#[fg=colour208]" # orange$/;"	v
color_spec	zpwr/.tmux/powerline/lint/__init__.py	/^color_spec = Spec().type(unicode).func(check_color).copy$/;"	v
color_status_primary_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_primary_attached=$(get_tmux_option "@batt_color_status_primary_attached" "$color_status_primary_attached_default")$/;"	v
color_status_primary_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_attached=''$/;"	v
color_status_primary_attached_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_attached_default='colour201'$/;"	v
color_status_primary_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_primary_charged=$(get_tmux_option "@batt_color_status_primary_charged" "$color_status_primary_charged_default")$/;"	v
color_status_primary_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_charged=''$/;"	v
color_status_primary_charged_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_charged_default='colour33'$/;"	v
color_status_primary_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_primary_charging=$(get_tmux_option "@batt_color_status_primary_charging" "$color_status_primary_charging_default")$/;"	v
color_status_primary_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_charging=''$/;"	v
color_status_primary_charging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_charging_default='colour33'$/;"	v
color_status_primary_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_primary_discharging=$(get_tmux_option "@batt_color_status_primary_discharging" "$color_status_primary_discharging_default")$/;"	v
color_status_primary_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_discharging=''$/;"	v
color_status_primary_discharging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_discharging_default='colour14'$/;"	v
color_status_primary_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_primary_unknown=$(get_tmux_option "@batt_color_status_primary_unknown" "$color_status_primary_unknown_default")$/;"	v
color_status_primary_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_unknown=''$/;"	v
color_status_primary_unknown_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_primary_unknown_default='colour7'$/;"	v
color_status_secondary_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_secondary_attached=$(get_tmux_option "@batt_color_status_secondary_attached" "$color_status_secondary_attached_default")$/;"	v
color_status_secondary_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_attached=''$/;"	v
color_status_secondary_attached_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_attached_default='colour0'$/;"	v
color_status_secondary_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_secondary_charged=$(get_tmux_option "@batt_color_status_secondary_charged" "$color_status_secondary_charged_default")$/;"	v
color_status_secondary_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_charged=''$/;"	v
color_status_secondary_charged_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_charged_default='colour0'$/;"	v
color_status_secondary_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_secondary_charging=$(get_tmux_option "@batt_color_status_secondary_charging" "$color_status_secondary_charging_default")$/;"	v
color_status_secondary_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_charging=''$/;"	v
color_status_secondary_charging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_charging_default='colour0'$/;"	v
color_status_secondary_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_secondary_discharging=$(get_tmux_option "@batt_color_status_secondary_discharging" "$color_status_secondary_discharging_default")$/;"	v
color_status_secondary_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_discharging=''$/;"	v
color_status_secondary_discharging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_discharging_default='colour0'$/;"	v
color_status_secondary_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	color_status_secondary_unknown=$(get_tmux_option "@batt_color_status_secondary_unknown" "$color_status_secondary_unknown_default")$/;"	v
color_status_secondary_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_unknown=''$/;"	v
color_status_secondary_unknown_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^color_status_secondary_unknown_default='colour0'$/;"	v
colorizer	zpwr/.shell_aliases_functions.sh	/^    local colorizer=bat$/;"	v
colors	zpwr/.tmux/powerline/lint/__init__.py	/^	colors=Spec().unknown_spec($/;"	v
colors_name	zpwr/.vim/colors/Dev_Delight.vim	/^let colors_name = "Dev_Delight"$/;"	v
colors_name	zpwr/.vim/colors/SlateDark.vim	/^let colors_name = "SlateDark"$/;"	v
colors_name	zpwr/.vim/colors/adaryn.vim	/^let colors_name = "adaryn"$/;"	v
colors_name	zpwr/.vim/colors/anderson.vim	/^let colors_name = "anderson"$/;"	v
colors_name	zpwr/.vim/colors/ansi_blows.vim	/^let colors_name = "ansi_blows"$/;"	v
colors_name	zpwr/.vim/colors/apprentice.vim	/^let colors_name = "apprentice"$/;"	v
colors_name	zpwr/.vim/colors/automation.vim	/^let colors_name = "automation"$/;"	v
colors_name	zpwr/.vim/colors/autumn.vim	/^let colors_name = "autumn"$/;"	v
colors_name	zpwr/.vim/colors/autumnleaf.vim	/^let colors_name="AutumnLeaf"$/;"	v
colors_name	zpwr/.vim/colors/babymate256.vim	/^let colors_name = "babymate256"$/;"	v
colors_name	zpwr/.vim/colors/badwolf.vim	/^let colors_name = "badwolf"$/;"	v
colors_name	zpwr/.vim/colors/basic.vim	/^let colors_name = "basic"$/;"	v
colors_name	zpwr/.vim/colors/beekai.vim	/^let colors_name = "beekai"$/;"	v
colors_name	zpwr/.vim/colors/bensday.vim	/^let colors_name = "bensday"$/;"	v
colors_name	zpwr/.vim/colors/blacklight.vim	/^let colors_name="blacklight"$/;"	v
colors_name	zpwr/.vim/colors/blink.vim	/^let colors_name = "blink"$/;"	v
colors_name	zpwr/.vim/colors/blueprint.vim	/^let colors_name = "blueprint"$/;"	v
colors_name	zpwr/.vim/colors/blueshift.vim	/^let colors_name = "blueshift"$/;"	v
colors_name	zpwr/.vim/colors/bluewolf.vim	/^let colors_name = "bluewolf"$/;"	v
colors_name	zpwr/.vim/colors/bocau.vim	/^let colors_name = "bocau"$/;"	v
colors_name	zpwr/.vim/colors/breeze.vim	/^let colors_name = "breeze"$/;"	v
colors_name	zpwr/.vim/colors/burnttoast256.vim	/^let colors_name = "burnttoast256"$/;"	v
colors_name	zpwr/.vim/colors/busierbee.vim	/^let colors_name = "busierbee"$/;"	v
colors_name	zpwr/.vim/colors/busybee.vim	/^let colors_name = "busybee"$/;"	v
colors_name	zpwr/.vim/colors/buttercream.vim	/^let colors_name = "buttercream"$/;"	v
colors_name	zpwr/.vim/colors/bvemu.vim	/^let colors_name="bvemu"$/;"	v
colors_name	zpwr/.vim/colors/campfire.vim	/^let colors_name = "campfire"$/;"	v
colors_name	zpwr/.vim/colors/candy.vim	/^let colors_name = "candy"$/;"	v
colors_name	zpwr/.vim/colors/candyman.vim	/^let colors_name = "candyman"$/;"	v
colors_name	zpwr/.vim/colors/chance-of-storm.vim	/^let colors_name = "chance-of-storm"$/;"	v
colors_name	zpwr/.vim/colors/chrysoprase.vim	/^let colors_name = "chrysoprase"$/;"	v
colors_name	zpwr/.vim/colors/cleanphp.vim	/^let colors_name = "cleanphp"$/;"	v
colors_name	zpwr/.vim/colors/clearance.vim	/^let colors_name = "clearance"$/;"	v
colors_name	zpwr/.vim/colors/cobalt2.vim	/^let colors_name = "cobalt2"$/;"	v
colors_name	zpwr/.vim/colors/codeburn.vim	/^let colors_name = "codeburn-0.2"$/;"	v
colors_name	zpwr/.vim/colors/coffee.vim	/^let colors_name = "coffee"$/;"	v
colors_name	zpwr/.vim/colors/coldgreen.vim	/^let colors_name = "coldgreen"$/;"	v
colors_name	zpwr/.vim/colors/colorzone.vim	/^let colors_name = "colorzone"$/;"	v
colors_name	zpwr/.vim/colors/corn.vim	/^let colors_name = "Corn"$/;"	v
colors_name	zpwr/.vim/colors/crayon.vim	/^let colors_name = "crayon"$/;"	v
colors_name	zpwr/.vim/colors/darkblack.vim	/^let colors_name = "darkblack"$/;"	v
colors_name	zpwr/.vim/colors/darth.vim	/^let colors_name="darth"$/;"	v
colors_name	zpwr/.vim/colors/dawn.vim	/^let colors_name = "dawn"$/;"	v
colors_name	zpwr/.vim/colors/delek.vim	/^let colors_name = "delek"$/;"	v
colors_name	zpwr/.vim/colors/detailed.vim	/^let colors_name = 'detailed'$/;"	v
colors_name	zpwr/.vim/colors/developer.vim	/^let colors_name = "developer"$/;"	v
colors_name	zpwr/.vim/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
colors_name	zpwr/.vim/colors/django.vim	/^let colors_name = "django"$/;"	v
colors_name	zpwr/.vim/colors/dull.vim	/^let colors_name = "dull"$/;"	v
colors_name	zpwr/.vim/colors/dusk.vim	/^let colors_name = "dusk"$/;"	v
colors_name	zpwr/.vim/colors/earendel.vim	/^let colors_name = "earendel"$/;"	v
colors_name	zpwr/.vim/colors/earth.vim	/^let colors_name = "earth"$/;"	v
colors_name	zpwr/.vim/colors/earthburn.vim	/^let colors_name = "earthburn"$/;"	v
colors_name	zpwr/.vim/colors/eclm_wombat.vim	/^let colors_name = "eclm_wombat"$/;"	v
colors_name	zpwr/.vim/colors/ecostation.vim	/^let colors_name = "ecostation"$/;"	v
colors_name	zpwr/.vim/colors/editplus.vim	/^let colors_name = "EditPlus"$/;"	v
colors_name	zpwr/.vim/colors/edo_sea.vim	/^let colors_name = "Edo_sea"$/;"	v
colors_name	zpwr/.vim/colors/ekinivim.vim	/^let colors_name = "ekinivim"$/;"	v
colors_name	zpwr/.vim/colors/emacs.vim	/^let colors_name = "emacs"$/;"	v
colors_name	zpwr/.vim/colors/evening_2.vim	/^let colors_name = "evening_2"$/;"	v
colors_name	zpwr/.vim/colors/evolution.vim	/^let colors_name = "evolution"$/;"	v
colors_name	zpwr/.vim/colors/feral.vim	/^let colors_name = "feral"$/;"	v
colors_name	zpwr/.vim/colors/fine_blue.vim	/^let colors_name = "fine_blue"$/;"	v
colors_name	zpwr/.vim/colors/flattened_dark.vim	/^let colors_name = 'flattened_dark'$/;"	v
colors_name	zpwr/.vim/colors/flattened_light.vim	/^let colors_name = 'flattened_light'$/;"	v
colors_name	zpwr/.vim/colors/fnaqevan.vim	/^let colors_name = "fnaqevan"$/;"	v
colors_name	zpwr/.vim/colors/fog.vim	/^let colors_name = "fog"$/;"	v
colors_name	zpwr/.vim/colors/freya.vim	/^let colors_name = "freya"$/;"	v
colors_name	zpwr/.vim/colors/frozen.vim	/^let colors_name = "frozen"$/;"	v
colors_name	zpwr/.vim/colors/fruidle.vim	/^let colors_name = "fruidle"$/;"	v
colors_name	zpwr/.vim/colors/fruit.vim	/^let colors_name = "fruit"$/;"	v
colors_name	zpwr/.vim/colors/fruity.vim	/^let colors_name = "fruity"$/;"	v
colors_name	zpwr/.vim/colors/fu.vim	/^let colors_name = "fu"$/;"	v
colors_name	zpwr/.vim/colors/gardener.vim	/^let colors_name   = "gardener"$/;"	v
colors_name	zpwr/.vim/colors/gemcolors.vim	/^let colors_name = "gemcolors"$/;"	v
colors_name	zpwr/.vim/colors/getafe.vim	/^let colors_name = "getafe"$/;"	v
colors_name	zpwr/.vim/colors/github.vim	/^let colors_name = "github"$/;"	v
colors_name	zpwr/.vim/colors/google.vim	/^let colors_name = "google"$/;"	v
colors_name	zpwr/.vim/colors/grape.vim	/^let colors_name = "grape"$/;"	v
colors_name	zpwr/.vim/colors/gravity.vim	/^let colors_name = "gravity"$/;"	v
colors_name	zpwr/.vim/colors/graywh.vim	/^let colors_name = "graywh"$/;"	v
colors_name	zpwr/.vim/colors/greens.vim	/^let colors_name = "greens"$/;"	v
colors_name	zpwr/.vim/colors/grey2.vim	/^let colors_name = "grey2"$/;"	v
colors_name	zpwr/.vim/colors/greyblue.vim	/^let colors_name = "greyblue"$/;"	v
colors_name	zpwr/.vim/colors/guardian.vim	/^let colors_name   = "Guardian"$/;"	v
colors_name	zpwr/.vim/colors/harlequin.vim	/^let colors_name = "harlequin"$/;"	v
colors_name	zpwr/.vim/colors/heliotrope.vim	/^let colors_name = "heliotrope"$/;"	v
colors_name	zpwr/.vim/colors/herald.vim	/^let colors_name = "herald"$/;"	v
colors_name	zpwr/.vim/colors/hornet.vim	/^let colors_name = "hornet"$/;"	v
colors_name	zpwr/.vim/colors/hotpot.vim	/^let colors_name = "hotpot"$/;"	v
colors_name	zpwr/.vim/colors/hybrid-light.vim	/^let colors_name = "hybrid-light"$/;"	v
colors_name	zpwr/.vim/colors/hybrid_material.vim	/^let colors_name = "hybrid_material"$/;"	v
colors_name	zpwr/.vim/colors/hybrid_reverse.vim	/^let colors_name = "hybrid_reverse"$/;"	v
colors_name	zpwr/.vim/colors/industrial.vim	/^let colors_name = "industrial"$/;"	v
colors_name	zpwr/.vim/colors/industry.vim	/^let colors_name = "industry"$/;"	v
colors_name	zpwr/.vim/colors/inkpot.vim	/^let colors_name = "inkpot"$/;"	v
colors_name	zpwr/.vim/colors/inori.vim	/^let colors_name = "inori"$/;"	v
colors_name	zpwr/.vim/colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	zpwr/.vim/colors/ironman.vim	/^let colors_name = "ironman"$/;"	v
colors_name	zpwr/.vim/colors/itg_flat.vim	/^let colors_name = "itg_flat"$/;"	v
colors_name	zpwr/.vim/colors/jaime.vim	/^let colors_name = "jaime"$/;"	v
colors_name	zpwr/.vim/colors/jelleybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	zpwr/.vim/colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	zpwr/.vim/colors/jellyx.vim	/^let colors_name = 'jellyx'$/;"	v
colors_name	zpwr/.vim/colors/jhdark.vim	/^let colors_name = "jhdark"$/;"	v
colors_name	zpwr/.vim/colors/jhlight.vim	/^let colors_name = "jhlight"$/;"	v
colors_name	zpwr/.vim/colors/jiks.vim	/^let colors_name = "jiks"$/;"	v
colors_name	zpwr/.vim/colors/kellys.vim	/^let colors_name = "kellys"$/;"	v
colors_name	zpwr/.vim/colors/kiss.vim	/^let colors_name = "kiss"$/;"	v
colors_name	zpwr/.vim/colors/kyle.vim	/^let colors_name = "kyle"$/;"	v
colors_name	zpwr/.vim/colors/last256.vim	/^let colors_name = "last256"$/;"	v
colors_name	zpwr/.vim/colors/late_evening.vim	/^let colors_name = "late_evening"$/;"	v
colors_name	zpwr/.vim/colors/leglight2.vim	/^let colors_name = "leglight2"$/;"	v
colors_name	zpwr/.vim/colors/leya.vim	/^let colors_name="leya"$/;"	v
colors_name	zpwr/.vim/colors/lightcolors.vim	/^let colors_name = "lightcolors"$/;"	v
colors_name	zpwr/.vim/colors/lightning.vim	/^let colors_name = 'lightning'$/;"	v
colors_name	zpwr/.vim/colors/lilypink.vim	/^let colors_name = "lilypink"$/;"	v
colors_name	zpwr/.vim/colors/liquidcarbon.vim	/^let colors_name = "liquidcarbon"$/;"	v
colors_name	zpwr/.vim/colors/lizard.vim	/^let colors_name = "lizard"$/;"	v
colors_name	zpwr/.vim/colors/lodestone.vim	/^let colors_name="lodestone"$/;"	v
colors_name	zpwr/.vim/colors/loogica.vim	/^let colors_name = "loogica"$/;"	v
colors_name	zpwr/.vim/colors/lucid.vim	/^let colors_name="lucid"$/;"	v
colors_name	zpwr/.vim/colors/magicwb.vim	/^let colors_name = "magicwb"$/;"	v
colors_name	zpwr/.vim/colors/martin_krischik.vim	/^let colors_name = "martin_krischik"$/;"	v
colors_name	zpwr/.vim/colors/materialtheme.vim	/^let colors_name = "materialtheme"$/;"	v
colors_name	zpwr/.vim/colors/mayansmoke.vim	/^let colors_name = "mayansmoke"$/;"	v
colors_name	zpwr/.vim/colors/mdark.vim	/^let colors_name = "mdark"$/;"	v
colors_name	zpwr/.vim/colors/meta5.vim	/^let colors_name = "meta5"$/;"	v
colors_name	zpwr/.vim/colors/metacosm.vim	/^let colors_name = "metacosm"$/;"	v
colors_name	zpwr/.vim/colors/mint.vim	/^let colors_name = "mint"$/;"	v
colors_name	zpwr/.vim/colors/mod_tcsoft.vim	/^let colors_name = "mod_tcsoft"$/;"	v
colors_name	zpwr/.vim/colors/moria.vim	/^let colors_name = "moria"$/;"	v
colors_name	zpwr/.vim/colors/mrpink.vim	/^let colors_name = "mrpink"$/;"	v
colors_name	zpwr/.vim/colors/mustang.vim	/^let colors_name = "mustang"$/;"	v
colors_name	zpwr/.vim/colors/native.vim	/^let colors_name = "native"$/;"	v
colors_name	zpwr/.vim/colors/nazca.vim	/^let colors_name = "nazca"$/;"	v
colors_name	zpwr/.vim/colors/nefertiti.vim	/^let colors_name = "nefertiti"$/;"	v
colors_name	zpwr/.vim/colors/neon.vim	/^let colors_name = "neon"$/;"	v
colors_name	zpwr/.vim/colors/nerv-ous.vim	/^let colors_name = "nerv-ous"$/;"	v
colors_name	zpwr/.vim/colors/newspaper.vim	/^let colors_name = "newspaper"$/;"	v
colors_name	zpwr/.vim/colors/night.vim	/^let colors_name = "night"$/;"	v
colors_name	zpwr/.vim/colors/no_quarter.vim	/^let colors_name = "no_quarter"$/;"	v
colors_name	zpwr/.vim/colors/obsidian.vim	/^let colors_name="obsidian"$/;"	v
colors_name	zpwr/.vim/colors/paintbox.vim	/^let colors_name = "paintbox"$/;"	v
colors_name	zpwr/.vim/colors/parsec.vim	/^let colors_name = "parsec"$/;"	v
colors_name	zpwr/.vim/colors/perfect.vim	/^let colors_name = "perfect"$/;"	v
colors_name	zpwr/.vim/colors/pf_earth.vim	/^let colors_name = "pf_earth"$/;"	v
colors_name	zpwr/.vim/colors/phd.vim	/^let colors_name = "phd"$/;"	v
colors_name	zpwr/.vim/colors/playroom.vim	/^let colors_name = "playroom"$/;"	v
colors_name	zpwr/.vim/colors/pt_black.vim	/^let colors_name = "pt_black"$/;"	v
colors_name	zpwr/.vim/colors/putty.vim	/^let colors_name = "putty"$/;"	v
colors_name	zpwr/.vim/colors/pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	zpwr/.vim/colors/radicalgoodspeed.vim	/^let colors_name = "radicalgoodspeed"$/;"	v
colors_name	zpwr/.vim/colors/rainbow_fine_blue.vim	/^let colors_name = "fine_blue"$/;"	v
colors_name	zpwr/.vim/colors/rainbow_fruit.vim	/^let colors_name = "fruit"$/;"	v
colors_name	zpwr/.vim/colors/rainbow_neon.vim	/^let colors_name = "neon"$/;"	v
colors_name	zpwr/.vim/colors/rakr-light.vim	/^let colors_name = "rakr-light"$/;"	v
colors_name	zpwr/.vim/colors/rcg_gui.vim	/^let colors_name = "rcg_gui"$/;"	v
colors_name	zpwr/.vim/colors/rdark-terminal.vim	/^let colors_name="rdark-terminal"$/;"	v
colors_name	zpwr/.vim/colors/rdark.vim	/^let colors_name = "rdark"$/;"	v
colors_name	zpwr/.vim/colors/satori.vim	/^let colors_name = "satori"$/;"	v
colors_name	zpwr/.vim/colors/sea.vim	/^let colors_name = "sea"$/;"	v
colors_name	zpwr/.vim/colors/seoul.vim	/^let colors_name = "seoul"$/;"	v
colors_name	zpwr/.vim/colors/shobogenzo.vim	/^let colors_name = "shobogenzo"$/;"	v
colors_name	zpwr/.vim/colors/softlight.vim	/^let colors_name="softlight"$/;"	v
colors_name	zpwr/.vim/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	zpwr/.vim/colors/sorcerer.vim	/^let colors_name = "sorcerer"$/;"	v
colors_name	zpwr/.vim/colors/sourcerer.vim	/^let colors_name = "sourcerer"$/;"	v
colors_name	zpwr/.vim/colors/southernlights.vim	/^let colors_name = "southernlights"$/;"	v
colors_name	zpwr/.vim/colors/southwest-fog.vim	/^let colors_name = "southwest-fog"$/;"	v
colors_name	zpwr/.vim/colors/spacegray.vim	/^let colors_name = 'spacegray'$/;"	v
colors_name	zpwr/.vim/colors/spring.vim	/^let colors_name = "spring"$/;"	v
colors_name	zpwr/.vim/colors/stackoverflow.vim	/^let colors_name = "stackoverflow"$/;"	v
colors_name	zpwr/.vim/colors/strange.vim	/^let colors_name = "strange"$/;"	v
colors_name	zpwr/.vim/colors/summerfruit.vim	/^let colors_name = "summerfruit"$/;"	v
colors_name	zpwr/.vim/colors/swamplight.vim	/^let colors_name = "swamplight"$/;"	v
colors_name	zpwr/.vim/colors/sweater.vim	/^let colors_name = "sweater"$/;"	v
colors_name	zpwr/.vim/colors/tango-morning.vim	/^let colors_name = "tango-morning"$/;"	v
colors_name	zpwr/.vim/colors/tango.vim	/^let colors_name = "tango"$/;"	v
colors_name	zpwr/.vim/colors/tango2.vim	/^let colors_name = "tango2"$/;"	v
colors_name	zpwr/.vim/colors/tangoX.vim	/^let colors_name = "tangoX"$/;"	v
colors_name	zpwr/.vim/colors/tangoshady.vim	/^let colors_name = "tangoshady"$/;"	v
colors_name	zpwr/.vim/colors/taqua.vim	/^let colors_name="taqua"$/;"	v
colors_name	zpwr/.vim/colors/tayra.vim	/^let colors_name = "tayra"$/;"	v
colors_name	zpwr/.vim/colors/tchaba.vim	/^let colors_name = "tchaba"$/;"	v
colors_name	zpwr/.vim/colors/tchaba2.vim	/^let colors_name = "tchaba"$/;"	v
colors_name	zpwr/.vim/colors/tcsoft.vim	/^let colors_name = "TCSoft"$/;"	v
colors_name	zpwr/.vim/colors/tesla.vim	/^let colors_name = "tesla"$/;"	v
colors_name	zpwr/.vim/colors/tetragrammaton.vim	/^let colors_name = "tetragrammaton"$/;"	v
colors_name	zpwr/.vim/colors/textmate16.vim	/^let colors_name = "textmate16"$/;"	v
colors_name	zpwr/.vim/colors/thestars.vim	/^let colors_name = "thestars"$/;"	v
colors_name	zpwr/.vim/colors/tir_black.vim	/^let colors_name = "tir_black"$/;"	v
colors_name	zpwr/.vim/colors/triplejelly.vim	/^let colors_name = "triplejelly"$/;"	v
colors_name	zpwr/.vim/colors/turbo.vim	/^let colors_name = "turbo"$/;"	v
colors_name	zpwr/.vim/colors/twilight.vim	/^let colors_name = "twilight"$/;"	v
colors_name	zpwr/.vim/colors/underwater-mod.vim	/^let colors_name = "underwater-mod"$/;"	v
colors_name	zpwr/.vim/colors/underwater.vim	/^let colors_name = "underwater"$/;"	v
colors_name	zpwr/.vim/colors/up.vim	/^let colors_name = "up"$/;"	v
colors_name	zpwr/.vim/colors/vanzan_color.vim	/^let colors_name = "vanzan_color"$/;"	v
colors_name	zpwr/.vim/colors/visualstudio.vim	/^let colors_name = "visualstudio"$/;"	v
colors_name	zpwr/.vim/colors/vividchalk.vim	/^let colors_name = "vividchalk"$/;"	v
colors_name	zpwr/.vim/colors/warm_grey.vim	/^let colors_name = "black_on_white"$/;"	v
colors_name	zpwr/.vim/colors/winter.vim	/^let colors_name = "winter"$/;"	v
colors_name	zpwr/.vim/colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
colors_name	zpwr/.vim/colors/wombat256.vim	/^let colors_name = "wombat256mod"$/;"	v
colors_name	zpwr/.vim/colors/wombat256mod.vim	/^let colors_name = "wombat256mod"$/;"	v
colors_name	zpwr/.vim/colors/xoria256.vim	/^let colors_name = "xoria256"$/;"	v
colors_name	zpwr/.vim/colors/xterm16.vim	/^let colors_name = 'xterm16'$/;"	v
colors_name	zpwr/.vim/colors/zazen.vim	/^let colors_name = "zazen"$/;"	v
colors_name	zpwr/.vim/colors/zenesque.vim	/^let colors_name = "zenesque"$/;"	v
colors_name	zpwr/.vim/colors/zephyr.vim	/^let colors_name   = "zephyr"$/;"	v
colors_spec	zpwr/.tmux/powerline/lint/__init__.py	/^colors_spec = (Spec($/;"	v
colorscheme	zpwr/.tmux/powerline/lint/__init__.py	/^	colorscheme=Spec().type(unicode).func($/;"	v
colorscheme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^colorscheme_spec = (Spec($/;"	v
colour	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/PaperColor.vim	/^fun s:colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/antares.vim	/^  fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/evening.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/heroku.vim	/^  fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>colour(r, g, b)$/;"	f
colour	zpwr/.vim/colors/znake.vim	/^	fun <SID>colour(r, g, b)$/;"	f
cols	picture_finder.sh	/^cols=$(tput cols)$/;"	v
cols	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		local cols="$(stty size 2>\/dev\/null)"$/;"	v
cols	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local cols="$(stty size 2>\/dev\/null)"$/;"	v
cols	zpwr/scripts/picture_finder.sh	/^cols=$(tput cols)$/;"	v
combining	zpwr/.tmux/powerline/lib/unicode.py	/^from unicodedata import east_asian_width, combining$/;"	i
command	macOnly/commandToColors.sh	/^command="$@"$/;"	v
command	runner.sh	/^    command="vim -i NONE -V1 -Nes -c 'so""$fileToBeExecuted""' -c'echo""|q!' 2>&1 | sed -n '4,$p'"$/;"	v
command	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^	local command="$1"$/;"	v
command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			command="$inline_strategy"$/;"	v
command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			command="$pane_full_command"$/;"	v
command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			command="$strategy_command"$/;"	v
command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local command="$(_just_command "$pane_full_command")"$/;"	v
command	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local command="$1"$/;"	v
command	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    local command="$1"$/;"	v
command	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^		command = [args.bar_command, '-g', '{0}x{1}+{2}'.format(screen['width'], args.height, screen['x'])] + args.args[1:]$/;"	v
command	zpwr/scripts/macOnly/commandToColors.sh	/^command="$@"$/;"	v
command	zpwr/scripts/runner.sh	/^    command="vim -i NONE -V1 -Nes -c 'so""$fileToBeExecuted""' -c'echo""|q!' 2>&1 | sed -n '4,$p'"$/;"	v
commandList	oldCounter.sh	/^        commandList="$i\\n$commandList"$/;"	v
commandList	oldCounter.sh	/^commandList=""$/;"	v
commandList	zpwr/scripts/oldCounter.sh	/^        commandList="$i\\n$commandList"$/;"	v
commandList	zpwr/scripts/oldCounter.sh	/^commandList=""$/;"	v
command_exists	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^command_exists() {$/;"	f
command_exists	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^command_exists() {$/;"	f
command_exists	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^command_exists() {$/;"	f
commands	oldCounter.sh	/^            commands="$f $commands"$/;"	v
commands	oldCounter.sh	/^commands=""$/;"	v
commands	zpwr/scripts/oldCounter.sh	/^            commands="$f $commands"$/;"	v
commands	zpwr/scripts/oldCounter.sh	/^commands=""$/;"	v
commandt	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^def commandt(matcher_info):$/;"	f
comment	mantozshcomp.py	/^    def comment(self):$/;"	m	class:Deroffer
comment	zpwr/scripts/mantozshcomp.py	/^    def comment(self):$/;"	m	class:Deroffer
commitMessage	gitgo.sh	/^    local commitMessage="$1"$/;"	v
commitMessage	zpwr/scripts/gitgo.sh	/^    local commitMessage="$1"$/;"	v
commitTheDirectory	gitgo.sh	/^commitTheDirectory() {$/;"	f
commitTheDirectory	zpwr/scripts/gitgo.sh	/^commitTheDirectory() {$/;"	f
common	zpwr/.tmux/powerline/lint/__init__.py	/^	common=Spec($/;"	v
common_names	zpwr/.tmux/powerline/lint/checks.py	/^common_names = defaultdict(set)$/;"	v
common_theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^common_theme_spec = Spec($/;"	v
comp_dir	manzshcompgen.zsh	/^comp_dir="comp_dir"$/;"	v
comp_dir	zpwr/scripts/manzshcompgen.zsh	/^comp_dir="comp_dir"$/;"	v
comp_dir	zpwr/scripts/zshcompgen.zsh	/^comp_dir="comp_dir"$/;"	v
comp_dir	zshcompgen.zsh	/^comp_dir="comp_dir"$/;"	v
compileExecuteTheFile	runner.sh	/^compileExecuteTheFile() {$/;"	f
compileExecuteTheFile	zpwr/scripts/runner.sh	/^compileExecuteTheFile() {$/;"	f
compile_and_search	mantozshcomp.py	/^def compile_and_search(regex, input):$/;"	f
compile_and_search	zpwr/scripts/mantozshcomp.py	/^def compile_and_search(regex, input):$/;"	f
compiled	watchServiceFSWatchRustCompile.sh	/^            compiled=${fileName%*.rs}$/;"	v
compiled	zpwr/scripts/watchServiceFSWatchRustCompile.sh	/^            compiled=${fileName%*.rs}$/;"	v
compose_document	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def compose_document(self):$/;"	m	class:Composer
compose_mapping_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def compose_mapping_node(self):$/;"	m	class:Composer
compose_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def compose_node(self, parent, index):$/;"	m	class:Composer
compose_scalar_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def compose_scalar_node(self):$/;"	m	class:Composer
compose_sequence_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def compose_sequence_node(self):$/;"	m	class:Composer
compute_divider_widths	zpwr/.tmux/powerline/renderer.py	/^	def compute_divider_widths(self, theme):$/;"	m	class:Renderer
compute_state	zpwr/.tmux/powerline/segments/common/mail.py	/^	def compute_state(self, key):$/;"	m	class:EmailIMAPSegment
compute_state	zpwr/.tmux/powerline/segments/common/net.py	/^	def compute_state(self, interface):$/;"	m	class:NetworkLoadSegment
compute_state	zpwr/.tmux/powerline/segments/common/wthr.py	/^	def compute_state(self, location_query):$/;"	m	class:WeatherSegment
concat	myWatchNoBlinkColorized.sh	/^            concat="$(java parser $LINE)"$/;"	v
concat	zpwr/scripts/myWatchNoBlinkColorized.sh	/^            concat="$(java parser $LINE)"$/;"	v
concrete	zpwr/.vim/colors/rakr-light.vim	/^  let concrete    = "95a5a6"$/;"	v
condputs	mantozshcomp.py	/^    def condputs(self, str):$/;"	m	class:Deroffer
condputs	zpwr/scripts/mantozshcomp.py	/^    def condputs(self, str):$/;"	m	class:Deroffer
condputs_tr	mantozshcomp.py	/^    def condputs_tr(self, str):$/;"	m	class:Deroffer
condputs_tr	zpwr/scripts/mantozshcomp.py	/^    def condputs_tr(self, str):$/;"	m	class:Deroffer
config	zpwr/.tmux/powerline/commands/config.py	/^import powerline.bindings.config as config$/;"	i
config_override	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def config_override(self):$/;"	m	class:Args
config_path	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def config_path(self):$/;"	m	class:Args
conn	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^			import i3 as conn$/;"	i
conn	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^conn = None$/;"	v
construct_document	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_document(self, node):$/;"	m	class:BaseConstructor
construct_mapping	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_mapping(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_mapping	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_mapping(self, node, deep=False):$/;"	m	class:Constructor
construct_object	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_object(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_returned_value	zpwr/.tmux/powerline/renderer.py	/^def construct_returned_value(rendered_highlighted, segments, width, output_raw, output_width):$/;"	f
construct_scalar	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_scalar(self, node):$/;"	m	class:BaseConstructor
construct_scalar	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_scalar(self, node):$/;"	m	class:Constructor
construct_sequence	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_sequence(self, node, deep=False):$/;"	m	class:BaseConstructor
construct_undefined	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_undefined(self, node):$/;"	m	class:Constructor
construct_yaml_bool	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_bool(self, node):$/;"	m	class:Constructor
construct_yaml_float	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_float(self, node):$/;"	m	class:Constructor
construct_yaml_int	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_int(self, node):$/;"	m	class:Constructor
construct_yaml_map	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_map(self, node):$/;"	m	class:Constructor
construct_yaml_null	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_null(self, node):$/;"	m	class:Constructor
construct_yaml_seq	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_seq(self, node):$/;"	m	class:Constructor
construct_yaml_str	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def construct_yaml_str(self, node):$/;"	m	class:Constructor
content	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local content=""$/;"	v
contents	duplicateLineDeleter.sh	/^    contents=$(cat -s "$file")$/;"	v
contents	indenterAndDuplicateLineDeleter.sh	/^    contents=$(cat -s "$file")$/;"	v
contents	zpwr/.tmux/powerline/lint/__init__.py	/^	contents=Spec().printable().optional(),$/;"	v
contents	zpwr/scripts/duplicateLineDeleter.sh	/^    contents=$(cat -s "$file")$/;"	v
contents	zpwr/scripts/indenterAndDuplicateLineDeleter.sh	/^    contents=$(cat -s "$file")$/;"	v
context_message	zpwr/.tmux/powerline/lint/spec.py	/^	def context_message(self, msg):$/;"	m	class:Spec
continuation	zpwr/.tmux/powerline/segments/shell.py	/^def continuation(pl, segment_info, omit_cmdsubst=True, right_align=False, renames={}):$/;"	f
continue_key	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^		local continue_key="ENTER"$/;"	v
continue_key	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^		local continue_key="ESCAPE"$/;"	v
contribCount	zpwr/.shell_aliases_functions.sh	/^contribCount(){$/;"	f
convertFiles	batchRename.sh	/^convertFiles() {$/;"	f
convertFiles	zpwr/scripts/batchRename.sh	/^convertFiles() {$/;"	f
convertmins	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^convertmins() {$/;"	f
copy	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        copy="$8" \\$/;"	v
copy	zpwr/.tmux/powerline/colorscheme.py	/^from copy import copy$/;"	i
copy	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def copy(self):$/;"	m	class:Mark
copy	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^					def copy(self):$/;"	m	class:gen_marked_value.Marked
copy	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def copy(self):$/;"	m	class:MarkedDict
copy	zpwr/.tmux/powerline/lint/spec.py	/^	def copy(self, copied=None):$/;"	m	class:Spec
copy	zpwr/.tmux/powerline/lint/spec.py	/^from copy import copy$/;"	i
copyConf	zpwr/.shell_aliases_functions.sh	/^copyConf(){$/;"	f
copy_attr	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        copy_attr=$(tmux_option "$copy_attr_config" "$default_copy_attr") \\$/;"	v
copy_attr_config	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^copy_attr_config='@prefix_highlight_copy_mode_attr'$/;"	v
copy_cmd	crossOSCommands.sh	/^                copy_cmd='clip.exe'$/;"	v
copy_cmd	crossOSCommands.sh	/^                copy_cmd='xclip -i -sel clip'$/;"	v
copy_cmd	crossOSCommands.sh	/^            copy_cmd='clip.exe'$/;"	v
copy_cmd	crossOSCommands.sh	/^            copy_cmd='pbcopy'$/;"	v
copy_cmd	zpwr/scripts/crossOSCommands.sh	/^                copy_cmd='clip.exe'$/;"	v
copy_cmd	zpwr/scripts/crossOSCommands.sh	/^                copy_cmd='xclip -i -sel clip'$/;"	v
copy_cmd	zpwr/scripts/crossOSCommands.sh	/^            copy_cmd='clip.exe'$/;"	v
copy_cmd	zpwr/scripts/crossOSCommands.sh	/^            copy_cmd='pbcopy'$/;"	v
copy_command	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^    copy_command="$(clipboard_copy_command)"$/;"	v
copy_command	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^    copy_command="$(clipboard_copy_command)"$/;"	v
copy_command	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^    local copy_command="$1"$/;"	v
copy_command_mouse	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^    copy_command_mouse="$(clipboard_copy_command "true")"$/;"	v
copy_highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        copy_highlight="$5" \\$/;"	v
copy_highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        copy_highlight="${copy_attr:+#[default,$copy_attr]}" \\$/;"	v
copy_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        copy_prompt=$(tmux_option "$copy_prompt" "$default_copy_prompt") \\$/;"	v
copy_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^copy_prompt='@prefix_highlight_copy_prompt'$/;"	v
copy_wo_newline_command	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^    copy_wo_newline_command="$(clipboard_copy_without_newline_command "$copy_command")"$/;"	v
correct_tpm_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	local correct_tpm_path="$1"$/;"	v
could_be_description	mantozshcomp.py	/^    def could_be_description(self, line):$/;"	m	class:TypeDeroffManParser
could_be_description	zpwr/scripts/mantozshcomp.py	/^    def could_be_description(self, line):$/;"	m	class:TypeDeroffManParser
count	uploadWebPi.sh	/^count=0$/;"	v
count	zpwr/.shell_aliases_functions.sh	/^    local count=100$/;"	v
count	zpwr/.tmux/powerline/vim.py	/^from itertools import count$/;"	i
count	zpwr/scripts/uploadWebPi.sh	/^count=0$/;"	v
count_argument_dashes	mantozshcomp.py	/^    def count_argument_dashes(self, line):$/;"	m	class:TypeDarwinManParser
count_argument_dashes	zpwr/scripts/mantozshcomp.py	/^    def count_argument_dashes(self, line):$/;"	m	class:TypeDarwinManParser
counter	CPU_Stresser.sh	/^    counter=0$/;"	v
counter	pipUpdater.sh	/^    counter=0$/;"	v
counter	rpiSoftwareUpdater.sh	/^    counter=0$/;"	v
counter	zpwr/.shell_aliases_functions.sh	/^    counter=0$/;"	v
counter	zpwr/common.sh	/^    counter=0$/;"	v
counter	zpwr/scripts/CPU_Stresser.sh	/^    counter=0$/;"	v
counter	zpwr/scripts/pipUpdater.sh	/^    counter=0$/;"	v
counter	zpwr/scripts/rpiSoftwareUpdater.sh	/^    counter=0$/;"	v
cpu_count	zpwr/.tmux/powerline/segments/common/sys.py	/^cpu_count = None$/;"	v
cpu_load_percent	zpwr/.tmux/powerline/segments/common/sys.py	/^cpu_load_percent = with_docstring(CPULoadPercentSegment(),$/;"	v
createLearningCollection	zpwr/.shell_aliases_functions.sh	/^    createLearningCollection(){$/;"	f
createTemplate	templater.sh	/^createTemplate() {$/;"	f
createTemplate	zpwr/scripts/templater.sh	/^createTemplate() {$/;"	f
createTheFile	createScriptButDontOpenSublime.sh	/^createTheFile() {$/;"	f
createTheFile	createTextFile.sh	/^createTheFile() {$/;"	f
createTheFile	zpwr/scripts/createScriptButDontOpenSublime.sh	/^createTheFile() {$/;"	f
createTheFile	zpwr/scripts/createTextFile.sh	/^createTheFile() {$/;"	f
create_file_watcher	zpwr/.tmux/powerline/lib/config.py	/^from powerline.lib.watcher import create_file_watcher$/;"	i
create_file_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	from powerline.lib.watcher import create_file_watcher$/;"	i
create_file_watcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^def create_file_watcher(pl, watcher_type='auto', expire_time=10):$/;"	f
create_file_watcher	zpwr/.tmux/powerline/segment.py	/^from powerline.lib.watcher import create_file_watcher$/;"	i
create_logger	zpwr/.tmux/powerline/__init__.py	/^	def create_logger(self):$/;"	m	class:Powerline
create_logger	zpwr/.tmux/powerline/__init__.py	/^def create_logger(common_config, use_daemon_threads=True, ext='__unknown__',$/;"	f
create_logger	zpwr/.tmux/powerline/bindings/config.py	/^from powerline import generate_config_finder, load_config, create_logger, finish_common_config$/;"	i
create_powerline_logger	zpwr/.tmux/powerline/bindings/config.py	/^def create_powerline_logger(args):$/;"	f
create_renderer	zpwr/.tmux/powerline/__init__.py	/^	def create_renderer(self, load_main=False, load_colors=False, load_colorscheme=False, load_theme=False):$/;"	m	class:Powerline
create_ruby_dpowerline	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def create_ruby_dpowerline():$/;"	f
create_ruby_dpowerline	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^from powerline.bindings.vim import create_ruby_dpowerline$/;"	i
create_test_plugin_helper	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^create_test_plugin_helper() {$/;"	f
create_tmux_test_environment_and_save	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_save.sh	/^create_tmux_test_environment_and_save() {$/;"	f
create_tree_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from powerline.lib.watcher import create_tree_watcher$/;"	i
create_tree_watcher	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^def create_tree_watcher(pl, watcher_type='auto', expire_time=10):$/;"	f
create_window_statusline_constructor	zpwr/.tmux/powerline/vim.py	/^		def create_window_statusline_constructor(self):$/;"	f	function:VimPowerline.init
created_window_num	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local created_window_num="$(first_window_num)"$/;"	v
creategif	zpwr/.shell_aliases_functions.sh	/^creategif(){$/;"	f
critical	zpwr/.tmux/powerline/__init__.py	/^	def critical(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
critical	zpwr/.tmux/powerline/lib/threaded.py	/^	def critical(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
csv	zpwr/.tmux/powerline/segments/vim/__init__.py	/^import csv$/;"	i
csv_cache	zpwr/.tmux/powerline/segments/vim/__init__.py	/^csv_cache = None$/;"	v
csv_col_current	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def csv_col_current(pl, segment_info, display_name='auto', name_format=' ({column_name:.15})'):$/;"	f
cterm	zpwr/.vim/colors/OceanicNext.vim	/^fun s:cterm(color)" {{{$/;"	f
cterm	zpwr/.vim/colors/base16-ateliercave.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierdune.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierestuary.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierforest.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierheath.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierlakeside.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierplateau.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-ateliersavanna.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-atelierseaside.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/base16-railscasts.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-dark.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkcave.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkdesert.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkearth.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkforest.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkheath.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darklake.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkmeadow.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkpark.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkpool.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darksea.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/duotone-darkspace.vim	/^fun s:cterm(color)$/;"	f
cterm	zpwr/.vim/colors/material-theme.vim	/^fun s:cterm(color)$/;"	f
cterm_to_hex	zpwr/.tmux/powerline/colorscheme.py	/^cterm_to_hex = ($/;"	v
ctermcolor	zpwr/.vim/colors/xterm16.vim	/^function s:ctermcolor( r, g, b)$/;"	f
ctermlevel	zpwr/.vim/colors/xterm16.vim	/^function s:ctermlevel( n)$/;"	f
ctypes	zpwr/.tmux/powerline/lib/inotify.py	/^import ctypes$/;"	i
ctypes	zpwr/.tmux/powerline/lib/monotonic.py	/^	import ctypes$/;"	i
ctypes	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^import ctypes$/;"	i
currentDir	zpwr/.shell_aliases_functions.sh	/^    currentDir="$(pwd -P)"$/;"	v
current_code_name	zpwr/.tmux/powerline/segments/pdb.py	/^def current_code_name(pl, segment_info):$/;"	f
current_context	zpwr/.tmux/powerline/segments/pdb.py	/^def current_context(pl, segment_info):$/;"	f
current_file	zpwr/.tmux/powerline/segments/pdb.py	/^def current_file(pl, segment_info, basename=True):$/;"	f
current_line	zpwr/.tmux/powerline/segments/pdb.py	/^def current_line(pl, segment_info):$/;"	f
current_session_group	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^				current_session_group="$session_group"$/;"	v
current_session_group	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local current_session_group=""$/;"	v
current_tabpage	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	current_tabpage = lambda: vim.current.tabpage$/;"	v
current_tabpage	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def current_tabpage():$/;"	f
current_tabpage	zpwr/.tmux/powerline/listers/vim.py	/^from powerline.bindings.vim import (current_tabpage, list_tabpages)$/;"	i
current_tabpage	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getoption, environ, current_tabpage, get_vim_encoding$/;"	i
current_tag	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^def current_tag(segment_info, pl, flags='s'):$/;"	f
current_timestamp	zpwr/.tmux/plugins/tmux-continuum/scripts/shared.sh	/^current_timestamp() {$/;"	f
current_tmux_server_pid	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^current_tmux_server_pid() {$/;"	f
current_version	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local current_version="$1"$/;"	v
current_version	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local current_version="$1"$/;"	v
current_version	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local current_version="$1"$/;"	v
current_version_int	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local current_version_int="$(tmux_version_int)"$/;"	v
current_version_int	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local current_version_int="$(tmux_version_int)"$/;"	v
current_version_int	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local current_version_int="$(tmux_version_int)"$/;"	v
currenttag	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^currenttag = None$/;"	v
cursor_columns	zpwr/.tmux/powerline/lint/__init__.py	/^	cursor_columns=Spec().type(int).cmp('gt', 0).optional(),$/;"	v
cursor_space	zpwr/.tmux/powerline/lint/__init__.py	/^	cursor_space=Spec().type(int, float).cmp('le', 100).cmp('gt', 0).optional(),$/;"	v
cursor_y	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local cursor_y="$(tmux display -p -t "$pane_id" -F "#{cursor_y}")"$/;"	v
custom_copy_command	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^custom_copy_command() {$/;"	f
custom_copy_command_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^custom_copy_command_default=""$/;"	v
custom_copy_command_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^custom_copy_command_option="@custom_copy_command"$/;"	v
cut_option	help2comp.py	/^def cut_option(line):$/;"	f
cut_option	zpwr/scripts/help2comp.py	/^def cut_option(line):$/;"	f
cwd	zpwr/.tmux/powerline/segments/common/env.py	/^cwd = with_docstring(CwdSegment(),$/;"	v
cwd	zpwr/.tmux/powerline/segments/shell.py	/^cwd = with_docstring(ShellCwdSegment(),$/;"	v
d	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^d=$'\\t'$/;"	v
d	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^d=$'\\t'$/;"	v
d	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^d=$'\\t'$/;"	v
daemon	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^		daemon = True$/;"	v	class:i3_subscribe.I3Thread
daemon	zpwr/.tmux/powerline/lib/threaded.py	/^	daemon = False$/;"	v	class:ThreadedSegment
daemon	zpwr/.tmux/powerline/lib/threaded.py	/^	daemon = True$/;"	v	class:MultiRunnedThread
daemon	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	daemon = True$/;"	v	class:UvThread
darkClouds	zpwr/.vim/colors/rakr-light.vim	/^  let darkClouds  = "E8ECED"$/;"	v
date	zpwr/.shell_aliases_functions.sh	/^    date='\\x1b[0;37;42m'$/;"	v
date	zpwr/.tmux/powerline/segments/common/time.py	/^def date(pl, format='%Y-%m-%d', istime=False):$/;"	f
dateflag	myWatchMaintainEscapes.sh	/^        dateflag=true$/;"	v
dateflag	mywatch.sh	/^        dateflag=true$/;"	v
dateflag	zpwr/scripts/myWatchMaintainEscapes.sh	/^        dateflag=true$/;"	v
dateflag	zpwr/scripts/mywatch.sh	/^        dateflag=true$/;"	v
datetime	zpwr/.tmux/powerline/segments/common/time.py	/^from datetime import datetime$/;"	i
daysPlural	zpwr/motd.sh	/^      daysPlural=""$/;"	v
daysPlural	zpwr/motd.sh	/^    local daysPlural="s"$/;"	v
db	zpwr/.shell_aliases_functions.sh	/^    db(){$/;"	f
db2	zpwr/.shell_aliases_functions.sh	/^    db2(){$/;"	f
dblue	zpwr/.vim/colors/spectro.vim	/^let dblue  = "#006060"$/;"	v
dbus	zpwr/.tmux/powerline/segments/common/bat.py	/^		import dbus$/;"	i
dbus	zpwr/.tmux/powerline/segments/common/players.py	/^	import dbus$/;"	i
dbus_player	zpwr/.tmux/powerline/segments/common/players.py	/^dbus_player = with_docstring(DbusPlayerSegment(),$/;"	v
debug	zpwr/.tmux/powerline/__init__.py	/^	def debug(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
debug	zpwr/.tmux/powerline/lib/threaded.py	/^	def debug(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
debug	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def debug():$/;"	f
dec	zpwr/.tmux/powerline/lib/__init__.py	/^	def dec(func):$/;"	f	function:add_divider_highlight_group
dec	zpwr/.tmux/powerline/lib/__init__.py	/^	def dec(wrapper):$/;"	f	function:wraps_saveargs
decorated_function	zpwr/.tmux/powerline/lib/memoize.py	/^		def decorated_function(**kwargs):$/;"	f	function:memoize.__call__
deduce_command	zpwr/.tmux/powerline/bindings/config.py	/^def deduce_command():$/;"	f
deepcopy	zpwr/.tmux/powerline/lib/config.py	/^from copy import deepcopy$/;"	i
default_bg	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_bg='colour04'$/;"	v
default_cache_key	zpwr/.tmux/powerline/lib/memoize.py	/^def default_cache_key(**kwargs):$/;"	f
default_clean_key	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^default_clean_key="M-u"$/;"	v
default_copy_attr	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_copy_attr='fg=default,bg=yellow'$/;"	v
default_copy_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_copy_prompt='Copy'$/;"	v
default_empty_attr	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_empty_attr='fg=default,bg=default'$/;"	v
default_empty_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_empty_prompt=''$/;"	v
default_fg	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_fg='colour231'$/;"	v
default_install_key	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^default_install_key="I"$/;"	v
default_location	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	default_location="$HOME\/.tmux.conf"$/;"	v
default_location	zpwr/.tmux/powerline/segments/common/wthr.py	/^	default_location = None$/;"	v	class:WeatherSegment
default_log_stream	zpwr/.tmux/powerline/__init__.py	/^	default_log_stream = sys.stdout$/;"	v	class:Powerline
default_log_stream	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	default_log_stream = sys.stderr$/;"	v	class:I3Powerline
default_log_stream	zpwr/.tmux/powerline/vim.py	/^	default_log_stream = sys.stdout$/;"	v	class:VimPowerline
default_module	zpwr/.tmux/powerline/lint/__init__.py	/^	default_module=segment_module_spec().optional(),$/;"	v
default_pane_contents_area	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_pane_contents_area="full"$/;"	v
default_prefix_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^default_prefix_prompt=$(tmux_option prefix | tr "[:lower:]" "[:upper:]" | sed 's\/C-\/\\^\/')$/;"	v
default_proc_list	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_proc_list='vi vim nvim emacs man less more tail top htop irssi weechat mutt'$/;"	v
default_proc_list_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_proc_list_option="@resurrect-default-processes"$/;"	v
default_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local default_processes="$(get_tmux_option "$default_proc_list_option" "$default_proc_list")"$/;"	v
default_recipent	textmessage.sh	/^    default_recipent="555111333"$/;"	v
default_recipent	zpwr/scripts/textmessage.sh	/^    default_recipent="555111333"$/;"	v
default_restore_key	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_restore_key="C-r"$/;"	v
default_resurrect_dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^default_resurrect_dir="$HOME\/.tmux\/resurrect"$/;"	v
default_save_command_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_save_command_strategy="ps"$/;"	v
default_save_key	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^default_save_key="C-s"$/;"	v
default_shell	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local default_shell="$(get_tmux_option "default-shell" "")"$/;"	v
default_strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local default_strategy_file="$CURRENT_DIR\/..\/save_command_strategies\/${default_save_command_strategy}.sh"$/;"	v
default_update_key	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^default_update_key="U"$/;"	v
default_value	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^	local default_value="$2"$/;"	v
default_value	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^	local default_value="$2"$/;"	v
default_value	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local default_value=$2$/;"	v
default_value	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local default_value="$2"$/;"	v
default_value	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local default_value="$2"$/;"	v
default_value	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    local default_value="$2"$/;"	v
default_value	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local default_value=$2$/;"	v
default_value	zpwr/.tmux/plugins/tpm/tpm	/^	local default_value="$2"$/;"	v
defaultdict	zpwr/.tmux/powerline/lib/config.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/lint/__init__.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/lint/checks.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from collections import defaultdict$/;"	i
defaultdict	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from collections import defaultdict$/;"	i
del	zpwr/.shell_aliases_functions.sh	/^    del(){$/;"	f
delay	batchRename.sh	/^    local delay=.1                  # time in seconds between characters$/;"	v
delay	openAll.sh	/^    local delay=.1                  # time in seconds between characters$/;"	v
delay	zpwr/scripts/batchRename.sh	/^    local delay=.1                  # time in seconds between characters$/;"	v
delay	zpwr/scripts/openAll.sh	/^    local delay=.1                  # time in seconds between characters$/;"	v
delay_saving_environment_on_first_plugin_load	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^delay_saving_environment_on_first_plugin_load() {$/;"	f
delim	batchRename.sh	/^delim=_$/;"	v
delim	macOnly/splitReg.sh	/^delim=$(echo "$output" | grep -n -- "$regex" | tail -$level | head -1 | cut -d: -f1)$/;"	v
delim	splitReg.sh	/^delim=$(echo "$output" | grep -n -- "$regex" | tail -$level | head -1 | cut -d: -f1)$/;"	v
delim	zpwr/scripts/batchRename.sh	/^delim=_$/;"	v
delim	zpwr/scripts/macOnly/splitReg.sh	/^delim=$(echo "$output" | grep -n -- "$regex" | tail -$level | head -1 | cut -d: -f1)$/;"	v
delim	zpwr/scripts/splitReg.sh	/^delim=$(echo "$output" | grep -n -- "$regex" | tail -$level | head -1 | cut -d: -f1)$/;"	v
delimiter	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local delimiter=$'\\t'$/;"	v
delimiter	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^delimiter=$'\\t'$/;"	v
dependencies_ary	zpwr/install.sh	/^    dependencies_ary=(neovim macvim ${dependencies_ary[@]})$/;"	v
dependencies_ary	zpwr/install.sh	/^    dependencies_ary=(neovim pkg-config libclang1 llvm ${dependencies_ary[@]})$/;"	v
dependencies_ary	zpwr/install.sh	/^    dependencies_ary=(python3-dev ${dependencies_ary[@]})$/;"	v
dependencies_ary	zpwr/install.sh	/^    dependencies_ary=(python3-devel clang llvm llvm-devel ${dependencies_ary[@]})$/;"	v
dependencies_ary	zpwr/install.sh	/^    dependencies_ary=(python3-devel llvm llvm-devel ${dependencies_ary[@]})$/;"	v
dependencies_ary	zpwr/install.sh	/^dependencies_ary=(moreutils cmake tig hexedit boxes tal iperf vim tmux chkrootkit wget cowsay cmatrix htop bpython sl mutt \\$/;"	v
deroff	mantozshcomp.py	/^    def deroff(self, str):$/;"	m	class:Deroffer
deroff	zpwr/scripts/mantozshcomp.py	/^    def deroff(self, str):$/;"	m	class:Deroffer
deroff_files	mantozshcomp.py	/^def deroff_files(files):$/;"	f
deroff_files	zpwr/scripts/mantozshcomp.py	/^def deroff_files(files):$/;"	f
descend_resolver	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def descend_resolver(self, current_node, current_index):$/;"	m	class:BaseResolver
destinationFile	picture_finder.sh	/^    destinationFile=$destinationDirectory\/${picture##*\/}$/;"	v
destinationFile	zpwr/scripts/picture_finder.sh	/^    destinationFile=$destinationDirectory\/${picture##*\/}$/;"	v
detachall	zpwr/.shell_aliases_functions.sh	/^detachall(){$/;"	f
detailed_colors	zpwr/.vim/colors/detailed.vim	/^fun! s:detailed_colors()$/;"	f
detailed_syntax_addtions	zpwr/.vim/colors/detailed.vim	/^fun! s:detailed_syntax_addtions()$/;"	f
detect_if_restoring_from_scratch	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^detect_if_restoring_from_scratch() {$/;"	f
detect_if_restoring_pane_contents	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^detect_if_restoring_pane_contents() {$/;"	f
detect_text_csv_dialect	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def detect_text_csv_dialect(text, display_name, header_text=None):$/;"	f
diagnostic_indent	mantozshcomp.py	/^diagnostic_indent = 0$/;"	v
diagnostic_indent	zpwr/scripts/mantozshcomp.py	/^diagnostic_indent = 0$/;"	v
diagnostic_output	mantozshcomp.py	/^diagnostic_output = []$/;"	v
diagnostic_output	zpwr/scripts/mantozshcomp.py	/^diagnostic_output = []$/;"	v
dict2	zpwr/.tmux/powerline/lint/__init__.py	/^def dict2(d):$/;"	f
did_autocmd	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^did_autocmd = False$/;"	v
did_cisco_syn_inits	zpwr/.vim/colors/ciscoacl.vim	/^	   let did_cisco_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	zpwr/.vim/colors/pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_psql_syn_inits	zpwr/.vim/colors/psql.vim	/^    let did_psql_syn_inits = 1$/;"	v
did_rtl_syntax_inits	zpwr/.vim/colors/rtl.vim	/^    let did_rtl_syntax_inits = 1$/;"	v
did_scala_syntax_inits	zpwr/.vim/colors/scala.vim	/^    let did_scala_syntax_inits = 1$/;"	v
diff_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:diff_syntax_and_highlights()$/;"	f
digit	mantozshcomp.py	/^    def digit(self, idx):$/;"	m	class:Deroffer
digit	zpwr/scripts/mantozshcomp.py	/^    def digit(self, idx):$/;"	m	class:Deroffer
digs	zpwr/.shell_aliases_functions.sh	/^digs(){$/;"	f
dir	oldCounter.sh	/^    dir=$(echo $PATH | cut -d: -f$i)$/;"	v
dir	runner.sh	/^        dir="$(dirname "$2")"$/;"	v
dir	runner.sh	/^    dir="$(dirname "$2")"$/;"	v
dir	zpwr/.shell_aliases_functions.sh	/^    dir="$(command python3 -m pip show pygments | command grep Location | awk '{print $2}')"$/;"	v
dir	zpwr/.shell_aliases_functions.sh	/^    dir="$(sudo python3 -m pip show powerline-status | \\grep --color=always '^Location' | awk '{print $2}')\/powerline"$/;"	v
dir	zpwr/.shell_aliases_functions.sh	/^    dir="$1"$/;"	v
dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local dir="$5"$/;"	v
dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^				dir="$(remove_first_char "$dir")"$/;"	v
dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		dir="$(remove_first_char "$dir")"$/;"	v
dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local dir="$4"$/;"	v
dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^			dir=$(echo $dir | sed 's\/ \/\\\\ \/') # escape all spaces in directory path$/;"	v
dir	zpwr/install.sh	/^dir="$(sudo python3 -m pip show powerline-status | \\grep --color=always '^Location' | awk '{print $2}')\/powerline"$/;"	v
dir	zpwr/scripts/oldCounter.sh	/^    dir=$(echo $PATH | cut -d: -f$i)$/;"	v
dir	zpwr/scripts/runner.sh	/^        dir="$(dirname "$2")"$/;"	v
dir	zpwr/scripts/runner.sh	/^    dir="$(dirname "$2")"$/;"	v
dirNum	oldCounter.sh	/^dirNum=$(expr $(echo $PATH | tr -cd : | wc -c) + 1)$/;"	v
dirNum	zpwr/scripts/oldCounter.sh	/^dirNum=$(expr $(echo $PATH | tr -cd : | wc -c) + 1)$/;"	v
dir_name	zpwr/.shell_aliases_functions.sh	/^    dir_name=${git_name%.*}$/;"	v
dir_to_search	openAll.sh	/^    dir_to_search="$2"$/;"	v
dir_to_search	openAll.sh	/^dir_to_search="$(pwd)"$/;"	v
dir_to_search	zpwr/scripts/openAll.sh	/^    dir_to_search="$2"$/;"	v
dir_to_search	zpwr/scripts/openAll.sh	/^dir_to_search="$(pwd)"$/;"	v
dir_watched	fsWatchLongRunning.sh	/^dir_watched="$1"$/;"	v
dir_watched	zpwr/scripts/fsWatchLongRunning.sh	/^dir_watched="$1"$/;"	v
dir_watching	watchServiceFSWatchGit.sh	/^dir_watching="$1"$/;"	v
dir_watching	watchServiceFSWatchLS-ALH.sh	/^dir_watching="$1"$/;"	v
dir_watching	watchServiceFSWatchPiDesktop.sh	/^dir_watching="$1"$/;"	v
dir_watching	watchServiceFSWatchPiWeb.sh	/^dir_watching="$1"$/;"	v
dir_watching	watchServiceFSWatchRustCompile.sh	/^dir_watching="$1"$/;"	v
dir_watching	zpwr/scripts/watchServiceFSWatchGit.sh	/^dir_watching="$1"$/;"	v
dir_watching	zpwr/scripts/watchServiceFSWatchLS-ALH.sh	/^dir_watching="$1"$/;"	v
dir_watching	zpwr/scripts/watchServiceFSWatchPiDesktop.sh	/^dir_watching="$1"$/;"	v
dir_watching	zpwr/scripts/watchServiceFSWatchPiWeb.sh	/^dir_watching="$1"$/;"	v
dir_watching	zpwr/scripts/watchServiceFSWatchRustCompile.sh	/^dir_watching="$1"$/;"	v
directory_name	tgzLocalInstaller.sh	/^        directory_name="${1%.tar.gz}"$/;"	v
directory_name	tgzLocalInstaller.sh	/^        directory_name="${1%.tgz}"$/;"	v
directory_name	zpwr/scripts/tgzLocalInstaller.sh	/^        directory_name="${1%.tar.gz}"$/;"	v
directory_name	zpwr/scripts/tgzLocalInstaller.sh	/^        directory_name="${1%.tgz}"$/;"	v
dirname	zpwr/.shell_aliases_functions.sh	/^        dirname="$(dirname $file)"$/;"	v
dirs	zpwr/install.sh	/^dirs=(Documents\/shellScripts .config\/htop .config\/powerline\/themes\/tmux)$/;"	v
dirsc	zpwr/.shell_aliases_functions.sh	/^    dirsc="$ZPWR_SCRIPTS\/$ZPWR_REPO_NAME"$/;"	v
disable_proxy	macOnly/tor.sh	/^function disable_proxy() {$/;"	f
disable_proxy	zpwr/scripts/macOnly/tor.sh	/^function disable_proxy() {$/;"	f
display	zpwr/.tmux/powerline/lint/__init__.py	/^	display=Spec().type(bool).optional(),$/;"	v
displayProgress	batchRename.sh	/^displayProgress() {$/;"	f
displayProgress	picture_finder.sh	/^displayProgress() {$/;"	f
displayProgress	secureDelete.sh	/^displayProgress() {$/;"	f
displayProgress	zpwr/scripts/batchRename.sh	/^displayProgress() {$/;"	f
displayProgress	zpwr/scripts/picture_finder.sh	/^displayProgress() {$/;"	f
displayProgress	zpwr/scripts/secureDelete.sh	/^displayProgress() {$/;"	f
displayProgressIndicator	openAll.sh	/^displayProgressIndicator() {$/;"	f
displayProgressIndicator	zpwr/scripts/openAll.sh	/^displayProgressIndicator() {$/;"	f
display_duration	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^		local display_duration="$2"$/;"	v
display_duration	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^		local display_duration="5000"$/;"	v
display_duration	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^		local display_duration="$2"$/;"	v
display_duration	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^		local display_duration="5000"$/;"	v
display_duration	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^        local display_duration="$2"$/;"	v
display_duration	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^        local display_duration="5000"$/;"	v
display_duration	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^		local display_duration="$2"$/;"	v
display_duration	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^		local display_duration="5000"$/;"	v
display_message	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_message	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^display_message() {$/;"	f
display_message	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^display_message() {$/;"	f
display_message	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_notice	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^display_notice() {$/;"	f
display_plugin_update_list	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^display_plugin_update_list() {$/;"	f
dispose	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def dispose(self):$/;"	m	class:Parser
distro	colorLogger.sh	/^        distro=debian$/;"	v
distro	colorLogger.sh	/^        distro=redhat$/;"	v
distro	colorLogger.sh	/^        distro=suse$/;"	v
distro	zpwr/scripts/colorLogger.sh	/^        distro=debian$/;"	v
distro	zpwr/scripts/colorLogger.sh	/^        distro=redhat$/;"	v
distro	zpwr/scripts/colorLogger.sh	/^        distro=suse$/;"	v
distroFamily	zpwr/install.sh	/^            distroFamily=arch$/;"	v
distroFamily	zpwr/install.sh	/^            distroFamily=debian$/;"	v
distroFamily	zpwr/install.sh	/^            distroFamily=redhat$/;"	v
distroFamily	zpwr/install.sh	/^            distroFamily=suse$/;"	v
distroFamily	zpwr/install.sh	/^        distroFamily=freebsd$/;"	v
distroFamily	zpwr/install.sh	/^    distroFamily=mac$/;"	v
distroName	clearTrash.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	colorLogger.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	logs.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/.shell_aliases_functions.sh	/^            distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/install.sh	/^        distroName=FreeBSD$/;"	v
distroName	zpwr/install.sh	/^    distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/install.sh	/^    distroName=Mac$/;"	v
distroName	zpwr/plugins_install.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/plugins_install.sh	/^        distroName=FreeBSD$/;"	v
distroName	zpwr/plugins_install.sh	/^    distroName=Mac$/;"	v
distroName	zpwr/scripts/clearTrash.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/scripts/colorLogger.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
distroName	zpwr/scripts/logs.sh	/^        distroName=$(perl -lne 'do{($_=$1)=~s\/"\/\/g;print;exit0}if\/^ID=(.*)\/' \/etc\/os-release)$/;"	v
divider_highlight_group	zpwr/.tmux/powerline/lint/__init__.py	/^	divider_highlight_group=highlight_group_spec().func(check_highlight_group).re($/;"	v
divider_highlight_group	zpwr/.tmux/powerline/segments/common/vcs.py	/^	divider_highlight_group = None$/;"	v	class:BranchSegment
divider_highlight_group	zpwr/.tmux/powerline/segments/common/vcs.py	/^	divider_highlight_group = None$/;"	v	class:StashSegment
divider_highlight_group	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	divider_highlight_group = 'branch:divider'$/;"	v	class:VimBranchSegment
divider_highlight_group	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	divider_highlight_group = 'stash:divider'$/;"	v	class:VimStashSegment
divider_spec	zpwr/.tmux/powerline/lint/__init__.py	/^divider_spec = Spec().printable().len($/;"	v
dividers	zpwr/.tmux/powerline/lint/__init__.py	/^	dividers=dividers_spec(),$/;"	v
dividers	zpwr/.tmux/powerline/lint/__init__.py	/^	dividers=dividers_spec().optional(),$/;"	v
dividers_spec	zpwr/.tmux/powerline/lint/__init__.py	/^dividers_spec = Spec($/;"	v
division	zpwr/.tmux/powerline/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/pdb/__main__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/colorscheme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/commands/config.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/commands/daemon.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/commands/lemonbar.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/commands/lint.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/commands/main.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/debug.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/dict.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/encoding.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/memoize.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/monotonic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/overrides.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/path.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/threaded.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/unicode.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/url.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/vcs/git.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/checks.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/context.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/imp.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/inspect.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/error.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/events.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/selfcheck.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/lint/spec.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/listers/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/listers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/listers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/i3bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/bash.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/readline.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/renderers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segment.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/bat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/env.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/mail.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/net.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/players.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/sys.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/time.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/vcs.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/common/wthr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/selectors/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/theme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
division	zpwr/.tmux/powerline/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
divside_spec	zpwr/.tmux/powerline/lint/__init__.py	/^divside_spec = Spec($/;"	v
do_interpolation	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^do_interpolation() {$/;"	f
do_line	mantozshcomp.py	/^    def do_line(self):$/;"	m	class:Deroffer
do_line	zpwr/scripts/mantozshcomp.py	/^    def do_line(self):$/;"	m	class:Deroffer
do_pyeval	zpwr/.tmux/powerline/vim.py	/^	def do_pyeval():$/;"	m	class:VimPowerline
do_render	zpwr/.tmux/powerline/renderer.py	/^	def do_render(self, mode, width, side, line, output_raw, output_width, segment_info, theme):$/;"	m	class:Renderer
do_render	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def do_render(self, segment_info, **kwargs):$/;"	m	class:IPythonPre50Renderer
do_render	zpwr/.tmux/powerline/renderers/pdb.py	/^		def do_render(self, **kwargs):$/;"	f	function:PDBRenderer.render
do_render	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def do_render(self, output_width, segment_info, side, theme, width=None, **kwargs):$/;"	m	class:PromptRenderer
do_render	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def do_render(self, segment_info, **kwargs):$/;"	m	class:ShellRenderer
do_render	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^	def do_render(self, **kwargs):$/;"	m	class:TcshPromptRenderer
do_setup	zpwr/.tmux/powerline/__init__.py	/^	def do_setup():$/;"	m	class:Powerline
do_setup	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		def do_setup(self, ip, shutdown_hook):$/;"	m	class:ShutdownHook.ConfigurableIPythonPowerline
do_setup	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def do_setup(self, ip, shutdown_hook):$/;"	m	class:ConfigurableIPythonPowerline
do_setup	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^	def do_setup(self, ip, prompts, shutdown_hook):$/;"	m	class:ConfigurableIPythonPowerline
do_setup	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def do_setup(self, obj):$/;"	m	class:QTilePowerline
do_setup	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def do_setup(self, zsh_globals):$/;"	m	class:ZshPowerline
do_setup	zpwr/.tmux/powerline/ipython.py	/^	def do_setup(self, wrefs):$/;"	m	class:IPythonPowerline
do_setup	zpwr/.tmux/powerline/pdb.py	/^	def do_setup(self, pdb):$/;"	m	class:PDBPowerline
do_setup	zpwr/.tmux/powerline/shell.py	/^	def do_setup(self, obj):$/;"	m	class:ShellPowerline
do_setup	zpwr/.tmux/powerline/vim.py	/^	def do_setup(self, pyeval=None, pycmd=None, can_replace_pyeval=True, _local_themes=()):$/;"	m	class:VimPowerline
do_status	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def do_status(self, directory, path):$/;"	m	class:Repository
do_status	zpwr/.tmux/powerline/lib/vcs/git.py	/^		def do_status(self, directory, path):$/;"	m	class:GitRepository.Repository
do_status	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	def do_status(self, directory, path):$/;"	m	class:Repository
do_tbl	mantozshcomp.py	/^    def do_tbl(self):$/;"	m	class:Deroffer
do_tbl	zpwr/scripts/mantozshcomp.py	/^    def do_tbl(self):$/;"	m	class:Deroffer
dontSummarizeSizes	directoryContentsSize.sh	/^dontSummarizeSizes() {$/;"	f
dontSummarizeSizes	zpwr/scripts/directoryContentsSize.sh	/^dontSummarizeSizes() {$/;"	f
dotdir	macOnly/tutorialConfigUpdater.sh	/^dotdir="$websiteDir\/downloads\/dotfiles"$/;"	v
dotdir	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^dotdir="$websiteDir\/downloads\/dotfiles"$/;"	v
draw_hard_divider	zpwr/.tmux/powerline/lint/__init__.py	/^	draw_hard_divider=Spec().type(bool).optional(),$/;"	v
draw_inner_divider	zpwr/.tmux/powerline/lint/__init__.py	/^	draw_inner_divider=Spec().type(bool).optional(),$/;"	v
draw_soft_divider	zpwr/.tmux/powerline/lint/__init__.py	/^	draw_soft_divider=Spec().type(bool).optional(),$/;"	v
dst	fdswap.sh	/^dst="$2"$/;"	v
dst	zpwr/scripts/fdswap.sh	/^dst="$2"$/;"	v
dump_grouped_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_grouped_sessions() {$/;"	f
dump_pane_contents	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_pane_contents() {$/;"	f
dump_panes	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_panes() {$/;"	f
dump_panes_raw	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_panes_raw() {$/;"	f
dump_shell_history	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_shell_history() {$/;"	f
dump_state	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_state() {$/;"	f
dump_windows	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_windows() {$/;"	f
dump_windows_raw	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_windows_raw(){$/;"	f
e_badargs	secureDelete.sh	/^e_badargs=70 # Various error exit codes.$/;"	v
e_badargs	zpwr/scripts/secureDelete.sh	/^e_badargs=70 # Various error exit codes.$/;"	v
e_changed_mind	secureDelete.sh	/^e_changed_mind=72$/;"	v
e_changed_mind	zpwr/scripts/secureDelete.sh	/^e_changed_mind=72$/;"	v
e_not_found	secureDelete.sh	/^e_not_found=71$/;"	v
e_not_found	zpwr/scripts/secureDelete.sh	/^e_not_found=71$/;"	v
east_asian_width	zpwr/.tmux/powerline/lib/unicode.py	/^from unicodedata import east_asian_width, combining$/;"	i
echo_all	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def echo_all(self):$/;"	m	class:DelayedEchoErr
echo_err	zpwr/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_err() {$/;"	f
echo_err	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_err() {$/;"	f
echo_ok	zpwr/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_ok() {$/;"	f
echo_ok	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_ok() {$/;"	f
echoerr	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.markedjson.error import echoerr, EchoErr, MarkedError$/;"	i
echoerr	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def echoerr(**kwargs):$/;"	f
echoerr	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^	def echoerr(self, *args, **kwargs):$/;"	m	class:Loader
echoerr	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from powerline.lint.markedjson.error import echoerr$/;"	i
echoerr	zpwr/.tmux/powerline/lint/spec.py	/^from powerline.lint.markedjson.error import echoerr, DelayedEchoErr, NON_PRINTABLE_STR$/;"	i
ed	myWatchNoBlink.sh	/^    ed=$(tput ed)$/;"	v
ed	myWatchNoBlinkColorized.sh	/^    ed=$(tput ed)$/;"	v
ed	zpwr/scripts/myWatchNoBlink.sh	/^    ed=$(tput ed)$/;"	v
ed	zpwr/scripts/myWatchNoBlinkColorized.sh	/^    ed=$(tput ed)$/;"	v
either	zpwr/.tmux/powerline/lint/spec.py	/^	def either(self, *specs):$/;"	m	class:Spec
el	myWatchNoBlink.sh	/^    el=$(tput el)$/;"	v
el	myWatchNoBlinkColorized.sh	/^    el=$(tput el)$/;"	v
el	zpwr/scripts/myWatchNoBlink.sh	/^    el=$(tput el)$/;"	v
el	zpwr/scripts/myWatchNoBlinkColorized.sh	/^    el=$(tput el)$/;"	v
email_imap_alert	zpwr/.tmux/powerline/segments/common/mail.py	/^email_imap_alert = with_docstring(EmailIMAPSegment(),$/;"	v
emerald	zpwr/.vim/colors/rakr-light.vim	/^  let emerald     = "2ecc71"$/;"	v
emit	zpwr/.tmux/powerline/vim.py	/^	def emit(self, record):$/;"	m	class:VimVarHandler
empty	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        empty="$9"$/;"	v
empty_attr	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        empty_attr=$(tmux_option "$empty_attr_config" "$default_empty_attr") \\$/;"	v
empty_attr_config	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^empty_attr_config='@prefix_highlight_empty_attr'$/;"	v
empty_has_affixes	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        empty_has_affixes=$(tmux_option "$empty_has_affixes" "off")$/;"	v
empty_has_affixes	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^empty_has_affixes='@prefix_highlight_empty_has_affixes'$/;"	v
empty_highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        empty_highlight="${empty_attr:+#[default,$empty_attr]}"$/;"	v
empty_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        empty_prompt=$(tmux_option "$empty_prompt" "$default_empty_prompt") \\$/;"	v
empty_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^empty_prompt='@prefix_highlight_empty_prompt'$/;"	v
enable_tmux_unit_on_boot	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^enable_tmux_unit_on_boot() {$/;"	f
enclosing_dir	rpiSoftwareUpdater.sh	/^    enclosing_dir="$1"$/;"	v
enclosing_dir	updater.sh	/^    enclosing_dir="$1"$/;"	v
enclosing_dir	updaterNoPip.sh	/^    enclosing_dir="$1"$/;"	v
enclosing_dir	zpwr/scripts/rpiSoftwareUpdater.sh	/^    enclosing_dir="$1"$/;"	v
enclosing_dir	zpwr/scripts/updater.sh	/^    enclosing_dir="$1"$/;"	v
enclosing_dir	zpwr/scripts/updaterNoPip.sh	/^    enclosing_dir="$1"$/;"	v
encode	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^		def encode(self, *args, **kwargs):$/;"	m	class:PowerlineRenderResult
encoding	zpwr/.tmux/powerline/commands/main.py	/^	encoding = get_preferred_arguments_encoding()$/;"	v
encrypt_program	encrypt.sh	/^    encrypt_program=zip$/;"	v
encrypt_program	encrypt.sh	/^encrypt_program=ccrypt$/;"	v
encrypt_program	zpwr/scripts/encrypt.sh	/^    encrypt_program=zip$/;"	v
encrypt_program	zpwr/scripts/encrypt.sh	/^encrypt_program=ccrypt$/;"	v
end	zpwr/.shell_aliases_functions.sh	/^            end=$($cmd +%s%N)$/;"	v
end_message	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^end_message() {$/;"	f
end_of_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local end_of_line="$(expr "$(echo "$zsh_bindkey" | grep -m1 '\\send-of-line$')" : '^"\\(.*\\)".*')"$/;"	v
end_of_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local end_of_line='C-e'$/;"	v
end_of_line_in_copy_mode	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^end_of_line_in_copy_mode() {$/;"	f
ending	picture_finder.sh	/^    ending=${destinationFile##*.}$/;"	v
ending	zpwr/scripts/picture_finder.sh	/^    ending=${destinationFile##*.}$/;"	v
energy	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^		energy=$(upower -i $battery | awk -v nrg="$energy" '\/energy:\/ {print nrg+$2}')$/;"	v
energy_full	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^		energy_full=$(upower -i $battery | awk -v nrgfull="$energy_full" '\/energy-full:\/ {print nrgfull+$2}')$/;"	v
enough_time_since_last_run_passed	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^enough_time_since_last_run_passed() {$/;"	f
ensure_tpm_path_exists	zpwr/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^ensure_tpm_path_exists() {$/;"	f
enter	zpwr/.tmux/powerline/lint/context.py	/^	def enter(self, context_key, context_value):$/;"	m	class:Context
enter_item	zpwr/.tmux/powerline/lint/context.py	/^	def enter_item(self, name, item):$/;"	m	class:Context
enter_key	zpwr/.tmux/powerline/lint/context.py	/^	def enter_key(self, value, key):$/;"	m	class:Context
enter_tmux_copy_mode	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^enter_tmux_copy_mode() {$/;"	f
environ	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^environ = VimEnviron()$/;"	v
environ	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	environ = Environment()$/;"	v
environ	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	environ = zsh.environ$/;"	v
environ	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getoption, environ, current_tabpage, get_vim_encoding$/;"	i
environment	zpwr/.tmux/powerline/segments/common/env.py	/^def environment(pl, segment_info, variable=None):$/;"	f
errno	mantozshcomp.py	/^import errno$/;"	i
errno	zpwr/.tmux/powerline/lib/inotify.py	/^import errno$/;"	i
errno	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^import errno$/;"	i
errno	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^import errno$/;"	i
errno	zpwr/scripts/mantozshcomp.py	/^import errno$/;"	i
error	zpwr/.tmux/powerline/__init__.py	/^	def error(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
error	zpwr/.tmux/powerline/lib/threaded.py	/^	def error(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
error	zpwr/.tmux/powerline/lint/spec.py	/^	def error(self, msg):$/;"	m	class:Spec
error_handling_if_command_not_present	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^error_handling_if_command_not_present() {$/;"	f
esc	mantozshcomp.py	/^    def esc(self):$/;"	m	class:Deroffer
esc	zpwr/scripts/mantozshcomp.py	/^    def esc(self):$/;"	m	class:Deroffer
esc_char	mantozshcomp.py	/^    def esc_char(self):$/;"	m	class:Deroffer
esc_char	zpwr/scripts/mantozshcomp.py	/^    def esc_char(self):$/;"	m	class:Deroffer
esc_char_backslash	mantozshcomp.py	/^    def esc_char_backslash(self):$/;"	m	class:Deroffer
esc_char_backslash	zpwr/scripts/mantozshcomp.py	/^    def esc_char_backslash(self):$/;"	m	class:Deroffer
escape	zpwr/.tmux/powerline/renderer.py	/^	def escape(self, string):$/;"	m	class:Renderer
escape	zpwr/.tmux/powerline/renderers/pango_markup.py	/^	escape = staticmethod(_escape)$/;"	v	class:PangoMarkupRenderer
escapeRemove	zpwr/.shell_aliases_functions.sh	/^escapeRemove(){$/;"	f
escapeRemover	zpwr/install.sh	/^escapeRemover="$INSTALLER_DIR\/scripts\/escapeRemover.pl"$/;"	v
escape_hl_end	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	escape_hl_end = ''$/;"	v	class:ShellRenderer
escape_hl_end	zpwr/.tmux/powerline/renderers/shell/bash.py	/^	escape_hl_end = '\\]'$/;"	v	class:BashPromptRenderer
escape_hl_end	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^	escape_hl_end = '\\001'$/;"	v	class:KshPromptRenderer
escape_hl_end	zpwr/.tmux/powerline/renderers/shell/readline.py	/^	escape_hl_end = '\\x02'$/;"	v	class:ReadlineRenderer
escape_hl_end	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^	escape_hl_end = '%}'$/;"	v	class:ZshPromptRenderer
escape_hl_start	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	escape_hl_start = ''$/;"	v	class:ShellRenderer
escape_hl_start	zpwr/.tmux/powerline/renderers/shell/bash.py	/^	escape_hl_start = '\\['$/;"	v	class:BashPromptRenderer
escape_hl_start	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^	escape_hl_start = '\\001'$/;"	v	class:KshPromptRenderer
escape_hl_start	zpwr/.tmux/powerline/renderers/shell/readline.py	/^	escape_hl_start = '\\x01'$/;"	v	class:ReadlineRenderer
escape_hl_start	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^	escape_hl_start = '%{'$/;"	v	class:ZshPromptRenderer
eth	bridgeDown.sh	/^eth="eth0"$/;"	v
eth	bridgeUp.sh	/^eth="eth0"$/;"	v
eth	zpwr/scripts/bridgeDown.sh	/^eth="eth0"$/;"	v
eth	zpwr/scripts/bridgeUp.sh	/^eth="eth0"$/;"	v
eth_broadcast	bridgeDown.sh	/^eth_broadcast="192.168.0.255"$/;"	v
eth_broadcast	bridgeUp.sh	/^eth_broadcast="192.168.0.255"$/;"	v
eth_broadcast	zpwr/scripts/bridgeDown.sh	/^eth_broadcast="192.168.0.255"$/;"	v
eth_broadcast	zpwr/scripts/bridgeUp.sh	/^eth_broadcast="192.168.0.255"$/;"	v
eth_gateway	bridgeDown.sh	/^eth_gateway="192.168.0.1"$/;"	v
eth_gateway	bridgeUp.sh	/^eth_gateway="192.168.0.1"$/;"	v
eth_gateway	zpwr/scripts/bridgeDown.sh	/^eth_gateway="192.168.0.1"$/;"	v
eth_gateway	zpwr/scripts/bridgeUp.sh	/^eth_gateway="192.168.0.1"$/;"	v
eth_ip	bridgeDown.sh	/^eth_ip="192.168.0.149"$/;"	v
eth_ip	bridgeUp.sh	/^eth_ip="192.168.0.149"$/;"	v
eth_ip	zpwr/scripts/bridgeDown.sh	/^eth_ip="192.168.0.149"$/;"	v
eth_ip	zpwr/scripts/bridgeUp.sh	/^eth_ip="192.168.0.149"$/;"	v
eth_mac	bridgeDown.sh	/^eth_mac="REPLACE"$/;"	v
eth_mac	bridgeUp.sh	/^eth_mac="REPLACE"$/;"	v
eth_mac	zpwr/scripts/bridgeDown.sh	/^eth_mac="REPLACE"$/;"	v
eth_mac	zpwr/scripts/bridgeUp.sh	/^eth_mac="REPLACE"$/;"	v
eth_netmask	bridgeDown.sh	/^eth_netmask="255.255.255.0"$/;"	v
eth_netmask	bridgeUp.sh	/^eth_netmask="255.255.255.0"$/;"	v
eth_netmask	zpwr/scripts/bridgeDown.sh	/^eth_netmask="255.255.255.0"$/;"	v
eth_netmask	zpwr/scripts/bridgeUp.sh	/^eth_netmask="255.255.255.0"$/;"	v
eval_bytes	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def eval_bytes(expr):$/;"	f
eval_unicode	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def eval_unicode(expr):$/;"	f
events	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from powerline.lint.markedjson import events$/;"	i
events	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from powerline.lint.markedjson import events$/;"	i
example#Hello2	zpwr/.vim/autoload/example.vim	/^fun example#Hello2()$/;"	f
exception	zpwr/.tmux/powerline/__init__.py	/^	def exception(self, msg, *args, **kwargs):$/;"	m	class:Powerline
exception	zpwr/.tmux/powerline/__init__.py	/^	def exception(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
exception	zpwr/.tmux/powerline/lib/config.py	/^	def exception(self, msg, *args, **kwargs):$/;"	m	class:ConfigLoader
exception	zpwr/.tmux/powerline/lib/threaded.py	/^	def exception(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
exclude_function	zpwr/.tmux/powerline/lint/__init__.py	/^	exclude_function=exinclude_spec().optional(),$/;"	v
exclude_modes	zpwr/.tmux/powerline/lint/__init__.py	/^	exclude_modes=Spec().list(vim_mode_spec()).optional(),$/;"	v
exe	zpwr/.shell_aliases_functions.sh	/^                exe="proxychains4 -q"$/;"	v
exe	zpwr/.shell_aliases_functions.sh	/^                exe=(proxychains4 -q) ||$/;"	v
exe	zpwr/.shell_aliases_functions.sh	/^    exe(){$/;"	f
execpy	zpwr/.shell_aliases_functions.sh	/^execpy(){$/;"	f
executableProgram	shebangChanger.sh	/^executableProgram=$1$/;"	v
executableProgram	zpwr/scripts/shebangChanger.sh	/^executableProgram=$1$/;"	v
executableScriptsProcessing	createScriptButDontOpenSublime.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	createTextFile.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	runner.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	templater.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	zpwr/scripts/createScriptButDontOpenSublime.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	zpwr/scripts/createTextFile.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	zpwr/scripts/runner.sh	/^executableScriptsProcessing() {$/;"	f
executableScriptsProcessing	zpwr/scripts/templater.sh	/^executableScriptsProcessing() {$/;"	f
executeFileFirstArgIsCommand	runner.sh	/^executeFileFirstArgIsCommand() {$/;"	f
executeFileFirstArgIsCommand	zpwr/scripts/runner.sh	/^executeFileFirstArgIsCommand() {$/;"	f
executeTheFile	runner.sh	/^executeTheFile() {$/;"	f
executeTheFile	zpwr/scripts/runner.sh	/^executeTheFile() {$/;"	f
execute_hook	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^execute_hook() {$/;"	f
exinclude_spec	zpwr/.tmux/powerline/lint/__init__.py	/^exinclude_spec = Spec().re(function_name_re).func(check_exinclude_function).copy$/;"	v
exists	CPU_Stresser.sh	/^exists() {$/;"	f
exists	clearList.sh	/^exists(){$/;"	f
exists	fzfEnv.sh	/^    exists(){$/;"	f
exists	fzfPreviewOptsCommon.sh	/^    exists(){$/;"	f
exists	fzfPreviewOptsCommon2Pos.sh	/^    exists(){$/;"	f
exists	manzshcompgen.zsh	/^exists(){$/;"	f
exists	rpiSoftwareUpdater.sh	/^exists() {$/;"	f
exists	tailZOU.sh	/^    exists(){$/;"	f
exists	updater.sh	/^exists() {$/;"	f
exists	updaterNoPip.sh	/^exists() {$/;"	f
exists	zpwr/.shell_aliases_functions.sh	/^    exists(){$/;"	f
exists	zpwr/common.sh	/^exists(){$/;"	f
exists	zpwr/scripts/CPU_Stresser.sh	/^exists() {$/;"	f
exists	zpwr/scripts/clearList.sh	/^exists(){$/;"	f
exists	zpwr/scripts/fzfEnv.sh	/^    exists(){$/;"	f
exists	zpwr/scripts/fzfPreviewOptsCommon.sh	/^    exists(){$/;"	f
exists	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^    exists(){$/;"	f
exists	zpwr/scripts/manzshcompgen.zsh	/^exists(){$/;"	f
exists	zpwr/scripts/rpiSoftwareUpdater.sh	/^exists() {$/;"	f
exists	zpwr/scripts/tailZOU.sh	/^    exists(){$/;"	f
exists	zpwr/scripts/updater.sh	/^exists() {$/;"	f
exists	zpwr/scripts/updaterNoPip.sh	/^exists() {$/;"	f
exists	zpwr/scripts/zshcompgen.zsh	/^exists(){$/;"	f
exists	zshcompgen.zsh	/^exists(){$/;"	f
exit_if_unsupported_version	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_if_unsupported_version	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_if_unsupported_version	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_safely_if_empty_ppid	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_safely_if_empty_ppid	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_safely_if_empty_ppid	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_value_helper	zpwr/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^exit_value_helper() {$/;"	f
expand_func	zpwr/.tmux/powerline/segment.py	/^			def expand_func(pl, amount, segment):$/;"	f	function:get_attr_func
expand_functions	zpwr/.tmux/powerline/theme.py	/^expand_functions = {$/;"	v
expanded_tilde	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local expanded_tilde="${path\/#\\~\/$HOME}"$/;"	v
expected_exit_code	zpwr/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^	local expected_exit_code="${3:-0}"$/;"	v
expected_exit_code	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^	local expected_exit_code=1$/;"	v
expected_exit_code	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^	local expected_exit_code=1$/;"	v
expected_exit_code	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^	local expected_exit_code=1$/;"	v
expected_output	zpwr/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^	local expected_output="$2"$/;"	v
expire_old_queries	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def expire_old_queries(self):$/;"	m	class:TreeWatcher
expire_watches	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def expire_watches(self):$/;"	m	class:INotifyFileWatcher
ext	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	ext = ['shell']$/;"	v	class:Args
ext	zpwr/.tmux/powerline/lint/__init__.py	/^	ext=Spec($/;"	v
ext_spec	zpwr/.tmux/powerline/lint/__init__.py	/^ext_spec = Spec($/;"	v
ext_theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^ext_theme_spec = Spec().type(unicode).func(lambda *args: check_config('themes', *args)).copy$/;"	v
extend	zpwr/motd.sh	/^function extend (){$/;"	f
extend_path	zpwr/.tmux/powerline/matchers/__init__.py	/^from pkgutil import extend_path$/;"	i
extend_path	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^from pkgutil import extend_path$/;"	i
extend_path	zpwr/.tmux/powerline/segments/__init__.py	/^from pkgutil import extend_path$/;"	i
extend_path	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^from pkgutil import extend_path$/;"	i
external_ip	zpwr/.tmux/powerline/segments/common/net.py	/^external_ip = with_docstring(ExternalIpSegment(),$/;"	v
extractRGB	zpwr/.vim/colors/xterm16.vim	/^function s:extractRGB( string)$/;"	f
f	zpwr/.shell_aliases_functions.sh	/^f(){$/;"	f
f	zpwr/.tmux/powerline/lib/__init__.py	/^		def f(**kwargs):$/;"	f	function:add_divider_highlight_group.dec
f	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def f(self, node, *args, **kwargs):$/;"	f	function:marked
factor	zpwr/.tmux/powerline/lib/monotonic.py	/^			factor = timebase[0] \/ timebase[1] * 1e-9$/;"	v
fail_helper	zpwr/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^fail_helper() {$/;"	f
fallback	mantozshcomp.py	/^    def fallback(self, options_section):$/;"	m	class:Type1ManParser
fallback	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^		def fallback(key):$/;"	f	function:PowerlinePromptStyle.get_token_to_attributes_dict
fallback	zpwr/scripts/mantozshcomp.py	/^    def fallback(self, options_section):$/;"	m	class:Type1ManParser
fallback2	mantozshcomp.py	/^    def fallback2(self, options_section):$/;"	m	class:Type1ManParser
fallback2	zpwr/scripts/mantozshcomp.py	/^    def fallback2(self, options_section):$/;"	m	class:Type1ManParser
family_phone_numbers	textmessage.sh	/^    family_phone_numbers=("$member_1")$/;"	v
family_phone_numbers	zpwr/scripts/textmessage.sh	/^    family_phone_numbers=("$member_1")$/;"	v
fatpacked_rainbow_parens	zpwr/.vim/colors/detailed.vim	/^fun! s:fatpacked_rainbow_parens()$/;"	f
fetch	about.sh	/^            fetch="$(git remote -v | grep zpwr | grep fetch | head -n 1 | perl -pe 's@[\\t ]+@    @')"$/;"	v
fetch	zpwr/scripts/about.sh	/^            fetch="$(git remote -v | grep zpwr | grep fetch | head -n 1 | perl -pe 's@[\\t ]+@    @')"$/;"	v
fetch_and_dump_grouped_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^fetch_and_dump_grouped_sessions(){$/;"	f
fetch_and_run_tmux_resurrect_restore_script	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^fetch_and_run_tmux_resurrect_restore_script() {$/;"	f
fetch_and_run_tmux_resurrect_save_script	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^fetch_and_run_tmux_resurrect_save_script() {$/;"	f
fetch_double	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_double(self):$/;"	m	class:Scanner
fetch_flow_collection_end	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_collection_end(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_collection_start	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_collection_start(self, TokenClass):$/;"	m	class:Scanner
fetch_flow_entry	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_entry(self):$/;"	m	class:Scanner
fetch_flow_mapping_end	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_mapping_end(self):$/;"	m	class:Scanner
fetch_flow_mapping_start	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_mapping_start(self):$/;"	m	class:Scanner
fetch_flow_sequence_end	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_sequence_end(self):$/;"	m	class:Scanner
fetch_flow_sequence_start	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_flow_sequence_start(self):$/;"	m	class:Scanner
fetch_more_tokens	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_more_tokens(self):$/;"	m	class:Scanner
fetch_plain	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_plain(self):$/;"	m	class:Scanner
fetch_stream_end	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_stream_end(self):$/;"	m	class:Scanner
fetch_stream_start	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_stream_start(self):$/;"	m	class:Scanner
fetch_value	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def fetch_value(self):$/;"	m	class:Scanner
ff	zpwr/.shell_aliases_functions.sh	/^ff(){$/;"	f
fff	zpwr/.shell_aliases_functions.sh	/^fff(){$/;"	f
fg	zpwr/.tmux/powerline/lint/__init__.py	/^	fg=color_spec(),$/;"	v
fg	zpwr/.vim/colors/detailed.vim	/^fun! s:fg(group, fg)$/;"	f
fg	zpwr/.vim/colors/pink.vim	/^            let fg = s:checkargs(s:col[2])$/;"	v
fg	zpwr/.vim/colors/pink.vim	/^        let fg = s:checkargs(s:col[2])$/;"	v
fg0	zpwr/.vim/colors/rakr-light.vim	/^  let fg0 = silver$/;"	v
fg1	zpwr/.vim/colors/rakr-light.vim	/^  let fg1 = concrete$/;"	v
fg2	zpwr/.vim/colors/rakr-light.vim	/^  let fg2 = wetAsphalt$/;"	v
fg3	zpwr/.vim/colors/rakr-light.vim	/^  let fg3 = midnightBlue$/;"	v
fg_color	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        fg_color=$(tmux_option "$fg_color_config" "$default_fg") \\$/;"	v
fg_color_config	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^fg_color_config='@prefix_highlight_fg'$/;"	v
fgbg	zpwr/.vim/colors/detailed.vim	/^fun! s:fgbg(group, fg, bg)$/;"	f
figletfonts	zpwr/.shell_aliases_functions.sh	/^figletfonts(){$/;"	f
file	boiler_gen.py	/^    file = CodeFile(model_file, directory, model)$/;"	v
file	fzfEnv.sh	/^        file=\\$(echo \\$file | sed "s@[]\\\\\\[^\\$.*\/]@\\\\\\\\\\\\&@g")$/;"	v
file	fzfEnv.sh	/^file=\\$(grep -m1 -a " \\$line\\$" ${ZPWR_ENV}Key.txt | awk "{print \\\\\\$2}")$/;"	v
file	inotifyWatchLogAndEmailIfNAS.sh	/^file="$1"$/;"	v
file	macOnly/splitReg.sh	/^file="$ZPWR_TEMPFILE"$/;"	v
file	openAll.sh	/^    file="$(echo $file | tr '[:upper:]' '[:lower:]')"$/;"	v
file	runner.sh	/^        file="$(basename "$2")"$/;"	v
file	runner.sh	/^    file="$(basename "$2")"$/;"	v
file	secureDelete.sh	/^    file="$i"$/;"	v
file	splitReg.sh	/^file="$ZPWR_TEMPFILE"$/;"	v
file	zpwr/.shell_aliases_functions.sh	/^            file=${file##*\/}$/;"	v
file	zpwr/.shell_aliases_functions.sh	/^    file="$HOME\/.config\/powerline\/themes\/tmux\/default.json"$/;"	v
file	zpwr/scripts/boiler_gen.py	/^    file = CodeFile(model_file, directory, model)$/;"	v
file	zpwr/scripts/fzfEnv.sh	/^        file=\\$(echo \\$file | sed "s@[]\\\\\\[^\\$.*\/]@\\\\\\\\\\\\&@g")$/;"	v
file	zpwr/scripts/fzfEnv.sh	/^file=\\$(grep -m1 -a " \\$line\\$" ${ALL_ENV}Key.txt | awk "{print \\\\\\$2}")$/;"	v
file	zpwr/scripts/inotifyWatchLogAndEmailIfNAS.sh	/^file="$1"$/;"	v
file	zpwr/scripts/macOnly/splitReg.sh	/^file="$ZPWR_TEMPFILE"$/;"	v
file	zpwr/scripts/openAll.sh	/^    file="$(echo $file | tr '[:upper:]' '[:lower:]')"$/;"	v
file	zpwr/scripts/runner.sh	/^        file="$(basename "$2")"$/;"	v
file	zpwr/scripts/runner.sh	/^    file="$(basename "$2")"$/;"	v
file	zpwr/scripts/secureDelete.sh	/^    file="$i"$/;"	v
file	zpwr/scripts/splitReg.sh	/^file="$ZPWR_TEMPFILE"$/;"	v
fileName	watchServiceFSWatchRustCompile.sh	/^    fileName=$(basename $event)$/;"	v
fileName	zpwr/scripts/watchServiceFSWatchRustCompile.sh	/^    fileName=$(basename $event)$/;"	v
fileString	openAll.sh	/^fileString=""$/;"	v
fileString	zpwr/scripts/openAll.sh	/^fileString=""$/;"	v
fileToBeExecuted	runner.sh	/^fileToBeExecuted="$1"$/;"	v
fileToBeExecuted	templater.sh	/^fileToBeExecuted="$1"$/;"	v
fileToBeExecuted	zpwr/scripts/runner.sh	/^fileToBeExecuted="$1"$/;"	v
fileToBeExecuted	zpwr/scripts/templater.sh	/^fileToBeExecuted="$1"$/;"	v
file_directory	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_directory(pl, segment_info, remove_scheme=True, shorten_user=True, shorten_cwd=True, shorten_home=False):$/;"	f
file_encoding	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_encoding(pl, segment_info):$/;"	f
file_format	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_format(pl, segment_info):$/;"	f
file_is_overwritable	mantozshcomp.py	/^def file_is_overwritable(path):$/;"	f
file_is_overwritable	zpwr/scripts/mantozshcomp.py	/^def file_is_overwritable(path):$/;"	f
file_name	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_name(pl, segment_info, display_no_file=False, no_file_text='[No file]'):$/;"	f
file_scheme	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_scheme(pl, segment_info):$/;"	f
file_size	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_size(pl, suffix='B', si_prefix=False):$/;"	f
file_status_cache	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^file_status_cache = FileStatusCache()$/;"	v
file_status_lock	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^file_status_lock = Lock()$/;"	v
file_type	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_type(pl, segment_info):$/;"	f
file_vcs_status	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def file_vcs_status(pl, segment_info, create_watcher):$/;"	f
file_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def file_watcher(create_watcher):$/;"	f
files	backupBashConfig.sh	/^files=("$my_home_dir\/.bashrc" "$my_home_dir\/.bash_profile" "$my_home_dir\/.profile" '\/etc\/bashrc' '\/etc\/profile')$/;"	v
files	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	files=($(ls -t $(resurrect_dir)\/${RESURRECT_FILE_PREFIX}_*.${RESURRECT_FILE_EXTENSION} | tail -n +6))$/;"	v
files	zpwr/install.sh	/^files=(.zshrc .tmux.conf .vimrc .ideavimrc .iftopcolors .iftop.conf .shell_aliases_functions.sh \\$/;"	v
files	zpwr/scripts/backupBashConfig.sh	/^files=("$my_home_dir\/.bashrc" "$my_home_dir\/.bash_profile" "$my_home_dir\/.profile" '\/etc\/bashrc' '\/etc\/profile')$/;"	v
filesArray	openAll.sh	/^filesArray=()$/;"	v
filesArray	zpwr/scripts/openAll.sh	/^filesArray=()$/;"	v
files_differ	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^files_differ() {$/;"	f
filter	macOnly/splitReg.sh	/^filter="$2"$/;"	v
filter	splitReg.sh	/^filter="$2"$/;"	v
filter	zpwr/.shell_aliases_functions.sh	/^               filter=true$/;"	v
filter	zpwr/.shell_aliases_functions.sh	/^        filter=false$/;"	v
filter	zpwr/scripts/macOnly/splitReg.sh	/^filter="$2"$/;"	v
filter	zpwr/scripts/splitReg.sh	/^filter="$2"$/;"	v
findTotal	oldCounter.sh	/^findTotal() {$/;"	f
findTotal	zpwr/scripts/oldCounter.sh	/^findTotal() {$/;"	f
find_all_ext_config_files	zpwr/.tmux/powerline/lint/__init__.py	/^def find_all_ext_config_files(search_paths, subdir):$/;"	f
find_library	zpwr/.tmux/powerline/lib/inotify.py	/^from ctypes.util import find_library$/;"	i
find_library	zpwr/.tmux/powerline/lib/monotonic.py	/^			from ctypes.util import find_library$/;"	i
finder	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^def finder(pl):$/;"	f
finish_args	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.commands.main import finish_args$/;"	i
finish_args	zpwr/.tmux/powerline/commands/main.py	/^def finish_args(parser, environ, args, is_daemon=False):$/;"	f
finish_common_config	zpwr/.tmux/powerline/__init__.py	/^def finish_common_config(encoding, common_config):$/;"	f
finish_common_config	zpwr/.tmux/powerline/bindings/config.py	/^from powerline import generate_config_finder, load_config, create_logger, finish_common_config$/;"	i
finish_common_config	zpwr/.tmux/powerline/vim.py	/^from powerline import Powerline, FailedUnicode, finish_common_config$/;"	i
first	batchRename.sh	/^        local first=$(echo ${file%%$delim*})$/;"	v
first	zpwr/scripts/batchRename.sh	/^        local first=$(echo ${file%%$delim*})$/;"	v
firstFile	sync.sh	/^    firstFile="${firstFile}\/"$/;"	v
firstFile	sync.sh	/^firstFile="$1"$/;"	v
firstFile	zpwr/scripts/sync.sh	/^    firstFile="${firstFile}\/"$/;"	v
firstFile	zpwr/scripts/sync.sh	/^firstFile="$1"$/;"	v
firstString	createTextFile.sh	/^    firstString="$($/;"	v
firstString	zpwr/scripts/createTextFile.sh	/^    firstString="$($/;"	v
first_iteration	fsWatchLongRunning.sh	/^        first_iteration=false$/;"	v
first_iteration	fsWatchLongRunning.sh	/^first_iteration=true$/;"	v
first_iteration	zpwr/scripts/fsWatchLongRunning.sh	/^        first_iteration=false$/;"	v
first_iteration	zpwr/scripts/fsWatchLongRunning.sh	/^first_iteration=true$/;"	v
first_window_num	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^first_window_num() {$/;"	f
fish_escape_single_quote	mantozshcomp.py	/^def fish_escape_single_quote(str):$/;"	f
fish_escape_single_quote	zpwr/scripts/mantozshcomp.py	/^def fish_escape_single_quote(str):$/;"	f
flatten_mapping	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def flatten_mapping(self, node):$/;"	m	class:Constructor
flength	secureDelete.sh	/^    flength=$(ls -l "$file" | awk '{print $5}') # Field 5 is file length.$/;"	v
flength	zpwr/scripts/secureDelete.sh	/^    flength=$(ls -l "$file" | awk '{print $5}') # Field 5 is file length.$/;"	v
flush_diagnostics	mantozshcomp.py	/^def flush_diagnostics(where):$/;"	f
flush_diagnostics	zpwr/scripts/mantozshcomp.py	/^def flush_diagnostics(where):$/;"	f
flush_output	mantozshcomp.py	/^    def flush_output(self, where):$/;"	m	class:Deroffer
flush_output	zpwr/scripts/mantozshcomp.py	/^    def flush_output(self, where):$/;"	m	class:Deroffer
font	macOnly/figletRandomFont.sh	/^    font=${ary[$randIndex]}$/;"	v
font	macOnly/figletRandomFontOnce.sh	/^font=${ary[$randIndex]}$/;"	v
font	macOnly/menkeTechRandomFont.sh	/^    font=${ary[$randIndex]}$/;"	v
font	macOnly/randomCow.sh	/^    font=${COW_FILES[$randIndex]}$/;"	v
font	mantozshcomp.py	/^    def font(self):$/;"	m	class:Deroffer
font	zpwr/scripts/macOnly/figletRandomFont.sh	/^    font=${ary[$randIndex]}$/;"	v
font	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^font=${ary[$randIndex]}$/;"	v
font	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^    font=${ary[$randIndex]}$/;"	v
font	zpwr/scripts/macOnly/randomCow.sh	/^    font=${COW_FILES[$randIndex]}$/;"	v
font	zpwr/scripts/mantozshcomp.py	/^    def font(self):$/;"	m	class:Deroffer
font2	mantozshcomp.py	/^    def font2(self):$/;"	m	class:Deroffer
font2	zpwr/scripts/mantozshcomp.py	/^    def font2(self):$/;"	m	class:Deroffer
forked	zpwr/.shell_aliases_functions.sh	/^    forked="$FORKED_DIR\/$ZPWR_REPO_NAME"$/;"	v
format_error	zpwr/.tmux/powerline/lint/markedjson/error.py	/^def format_error(context=None, context_mark=None, problem=None, problem_mark=None, note=None, indent=0):$/;"	f
format_name	zpwr/.tmux/powerline/segments/i3wm.py	/^def format_name(name, strip=False):$/;"	f
fortuneQuote	eyes.sh	/^        fortuneQuote="$(figlet -f "$1" \\"$fortuneQuote\\")"$/;"	v
fortuneQuote	eyes.sh	/^    fortuneQuote="$(fortune)"$/;"	v
fortuneQuote	zpwr/scripts/eyes.sh	/^        fortuneQuote="$(figlet -f "$1" \\"$fortuneQuote\\")"$/;"	v
fortuneQuote	zpwr/scripts/eyes.sh	/^    fortuneQuote="$(fortune)"$/;"	v
forward	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def forward(self, length=1):$/;"	m	class:Reader
found	shebangChanger.sh	/^            found=false$/;"	v
found	shebangChanger.sh	/^            found=true$/;"	v
found	shebangChanger.sh	/^    found=false$/;"	v
found	zpwr/scripts/shebangChanger.sh	/^            found=false$/;"	v
found	zpwr/scripts/shebangChanger.sh	/^            found=true$/;"	v
found	zpwr/scripts/shebangChanger.sh	/^    found=false$/;"	v
frame_lister	zpwr/.tmux/powerline/listers/pdb.py	/^def frame_lister(pl, segment_info, full_stack=False, maxframes=3):$/;"	f
frameworks	boiler_gen.py	/^frameworks = [{$/;"	v
frameworks	zpwr/scripts/boiler_gen.py	/^frameworks = [{$/;"	v
from	zpwr/.tmux/powerline/__init__.py	/^			pl.exception('Failed to import attr {0} from module {1}: {2}', attr, module, str(e), prefix=prefix)$/;"	i
full_cmd	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	full_cmd="_powerline_status_wrapper $cmd"$/;"	v
full_command	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^full_command() {$/;"	f
full_command	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^full_command() {$/;"	f
full_command	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^full_command() {$/;"	f
full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^			full_command="$(pane_full_command $pane_pid)"$/;"	v
full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local full_command="$3"$/;"	v
fullscreen_option_value	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local fullscreen_option_value="$(get_fullscreen_option_value "$options")"$/;"	v
fullscreen_tag	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^		fullscreen_tag=$'\\n        <string>fullscreen<\/string>'$/;"	v
fullscreen_tag	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local fullscreen_tag=""$/;"	v
func	zpwr/.tmux/powerline/lint/spec.py	/^	def func(self, func, msg_func=None):$/;"	m	class:Spec
function	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^	local function="$2"$/;"	v
function	zpwr/.tmux/powerline/lint/__init__.py	/^	function=Spec().re(function_name_re).func(check_segment_function).optional(),$/;"	v
function_name_re	zpwr/.tmux/powerline/lint/__init__.py	/^function_name_re = '^(\\w+\\.)*[a-zA-Z_]\\w*$'$/;"	v
fuzzy_time	zpwr/.tmux/powerline/segments/common/time.py	/^def fuzzy_time(pl, unicode_text=False):$/;"	f
fz	zpwr/.shell_aliases_functions.sh	/^fz(){$/;"	f
g:CSApprox_hook_abbott_post	zpwr/.vim/colors/abbott.vim	/^let g:CSApprox_hook_abbott_post="hi Normal ctermbg=NONE"$/;"	v
g:CSApprox_hook_graywh_post	zpwr/.vim/colors/graywh.vim	/^let g:CSApprox_hook_graywh_post = ['hi Visual          ctermbg=NONE ctermfg=NONE cterm=reverse',$/;"	v
g:MountainDew_Metadata	zpwr/.vim/colors/MountainDew.vim	/^	let g:MountainDew_Metadata = {$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-material.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkTextHL	zpwr/.vim/colors/materialbox.vim	/^let g:SignatureMarkTextHL='"SignatureMarkText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-material.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:SignatureMarkerTextHL	zpwr/.vim/colors/materialbox.vim	/^let g:SignatureMarkerTextHL='"SignatureMarkerText"'$/;"	v
g:airline_theme	zpwr/.vim/colors/flatlandia.vim	/^let g:airline_theme='flatlandia'$/;"	v
g:alduin_Contract_Vampirism	zpwr/.vim/colors/alduin.vim	/^    let g:alduin_Contract_Vampirism = 0$/;"	v
g:alduin_Shout_Aura_Whisper	zpwr/.vim/colors/alduin.vim	/^    let g:alduin_Shout_Aura_Whisper = 0$/;"	v
g:alduin_Shout_Become_Ethereal	zpwr/.vim/colors/alduin.vim	/^        let g:alduin_Shout_Become_Ethereal = 0$/;"	v
g:alduin_Shout_Become_Ethereal	zpwr/.vim/colors/alduin.vim	/^        let g:alduin_Shout_Become_Ethereal = 1$/;"	v
g:alduin_Shout_Become_Ethereal	zpwr/.vim/colors/alduin.vim	/^    let g:alduin_Shout_Become_Ethereal = 0$/;"	v
g:alduin_Shout_Fire_Breath	zpwr/.vim/colors/alduin.vim	/^    let g:alduin_Shout_Fire_Breath = 0$/;"	v
g:astronaut_bold	zpwr/.vim/colors/astronaut.vim	/^ let g:astronaut_bold= 0$/;"	v
g:astronaut_dark	zpwr/.vim/colors/astronaut.vim	/^ let g:astronaut_dark= 0$/;"	v
g:astronaut_italic	zpwr/.vim/colors/astronaut.vim	/^ let g:astronaut_italic= 0$/;"	v
g:astronaut_underline	zpwr/.vim/colors/astronaut.vim	/^ let g:astronaut_underline= 1$/;"	v
g:aubergine	zpwr/.vim/colors/cobalt2.vim	/^let g:aubergine =  "4F0037"                                            " #4F0037$/;"	v
g:badwolf_css_props_highlight	zpwr/.vim/colors/badwolf.vim	/^    let g:badwolf_css_props_highlight = 0$/;"	v
g:badwolf_html_link_underline	zpwr/.vim/colors/badwolf.vim	/^    let g:badwolf_html_link_underline = 1$/;"	v
g:badwolf_html_link_underline	zpwr/.vim/colors/goodwolf.vim	/^    let g:badwolf_html_link_underline = 1$/;"	v
g:black	zpwr/.vim/colors/cobalt2.vim	/^let g:black = "1C1C1C"                                                 " #1C1C1C$/;"	v
g:blue	zpwr/.vim/colors/cobalt2.vim	/^let g:blue = "00AAFF"                                                  " #00AAFF$/;"	v
g:bluewolf_css_props_highlight	zpwr/.vim/colors/bluewolf.vim	/^    let g:bluewolf_css_props_highlight = 0$/;"	v
g:bluewolf_html_link_underline	zpwr/.vim/colors/bluewolf.vim	/^    let g:bluewolf_html_link_underline = 1$/;"	v
g:cobalt_bg	zpwr/.vim/colors/cobalt2.vim	/^  let g:cobalt_bg = "193549"                                            "#193549$/;"	v
g:cobalt_bg_256	zpwr/.vim/colors/cobalt2.vim	/^  let g:cobalt_bg_256="NONE"$/;"	v
g:colors_name	zpwr/.vim/colors/0x7A69_dark.vim	/^let g:colors_name="0x7A69_dark"$/;"	v
g:colors_name	zpwr/.vim/colors/1989.vim	/^let g:colors_name = "1989"$/;"	v
g:colors_name	zpwr/.vim/colors/256-grayvim.vim	/^let g:colors_name="256-grayvim"$/;"	v
g:colors_name	zpwr/.vim/colors/256-jungle.vim	/^let g:colors_name="256-jungle"$/;"	v
g:colors_name	zpwr/.vim/colors/256_noir.vim	/^let g:colors_name = "256_noir"$/;"	v
g:colors_name	zpwr/.vim/colors/3dglasses.vim	/^let g:colors_name="3dglasses"$/;"	v
g:colors_name	zpwr/.vim/colors/Benokai.vim	/^let g:colors_name = "Benokai"$/;"	v
g:colors_name	zpwr/.vim/colors/BlackSea.vim	/^let g:colors_name = "BlackSea"$/;"	v
g:colors_name	zpwr/.vim/colors/C64.vim	/^let g:colors_name="C64"$/;"	v
g:colors_name	zpwr/.vim/colors/CandyPaper.vim	/^let g:colors_name = "CandyPaper"$/;"	v
g:colors_name	zpwr/.vim/colors/Chasing_Logic.vim	/^let g:colors_name = "Chasing_Logic"$/;"	v
g:colors_name	zpwr/.vim/colors/ChocolateLiquor.vim	/^let g:colors_name = "ChocolateLiquor"$/;"	v
g:colors_name	zpwr/.vim/colors/ChocolatePapaya.vim	/^let g:colors_name = "ChocolatePapaya"$/;"	v
g:colors_name	zpwr/.vim/colors/CodeFactoryv3.vim	/^let g:colors_name = "openbsd"$/;"	v
g:colors_name	zpwr/.vim/colors/DevC++.vim	/^let g:colors_name="DevC++"$/;"	v
g:colors_name	zpwr/.vim/colors/Monokai.vim	/^let g:colors_name = "Monokai"$/;"	v
g:colors_name	zpwr/.vim/colors/MountainDew.vim	/^let g:colors_name = "MountainDew"$/;"	v
g:colors_name	zpwr/.vim/colors/OceanicNext.vim	/^let g:colors_name = "OceanicNext"$/;"	v
g:colors_name	zpwr/.vim/colors/PapayaWhip.vim	/^let g:colors_name = "PapayaWhip"$/;"	v
g:colors_name	zpwr/.vim/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	zpwr/.vim/colors/Revolution.vim	/^let g:colors_name = "Revolution"$/;"	v
g:colors_name	zpwr/.vim/colors/Spink.vim	/^let g:colors_name = "Spink"$/;"	v
g:colors_name	zpwr/.vim/colors/SweetCandy.vim	/^let g:colors_name = "SweetCandy"$/;"	v
g:colors_name	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let g:colors_name = "Tomorrow-Night-Blue"$/;"	v
g:colors_name	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let g:colors_name = "Tomorrow-Night-Bright"$/;"	v
g:colors_name	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let g:colors_name = "Tomorrow-Night-Eighties"$/;"	v
g:colors_name	zpwr/.vim/colors/Tomorrow-Night.vim	/^let g:colors_name = "Tomorrow-Night"$/;"	v
g:colors_name	zpwr/.vim/colors/Tomorrow.vim	/^let g:colors_name = "Tomorrow"$/;"	v
g:colors_name	zpwr/.vim/colors/VIvid.vim	/^let g:colors_name = "VIvid"$/;"	v
g:colors_name	zpwr/.vim/colors/abbott.vim	/^let g:colors_name="abbott"$/;"	v
g:colors_name	zpwr/.vim/colors/abra.vim	/^let g:colors_name="abra"$/;"	v
g:colors_name	zpwr/.vim/colors/adam.vim	/^let g:colors_name = "adam"$/;"	v
g:colors_name	zpwr/.vim/colors/adobe.vim	/^let g:colors_name = "adobe"$/;"	v
g:colors_name	zpwr/.vim/colors/adrian.vim	/^let g:colors_name = "adrian"$/;"	v
g:colors_name	zpwr/.vim/colors/advantage.vim	/^let g:colors_name="advantage"$/;"	v
g:colors_name	zpwr/.vim/colors/af.vim	/^let g:colors_name="af"$/;"	v
g:colors_name	zpwr/.vim/colors/aiseered.vim	/^let g:colors_name="aiseered"$/;"	v
g:colors_name	zpwr/.vim/colors/alduin.vim	/^let g:colors_name="alduin"$/;"	v
g:colors_name	zpwr/.vim/colors/anotherdark.vim	/^let g:colors_name="anotherdark"$/;"	v
g:colors_name	zpwr/.vim/colors/antares.vim	/^let g:colors_name = "antares"$/;"	v
g:colors_name	zpwr/.vim/colors/aqua.vim	/^let g:colors_name="aqua"$/;"	v
g:colors_name	zpwr/.vim/colors/argonaut.vim	/^let g:colors_name = "argonaut"$/;"	v
g:colors_name	zpwr/.vim/colors/ashen.vim	/^let g:colors_name="ashen"$/;"	v
g:colors_name	zpwr/.vim/colors/astronaut.vim	/^let g:colors_name      = "astronaut"$/;"	v
g:colors_name	zpwr/.vim/colors/asu1dark.vim	/^let g:colors_name="asu1dark"$/;"	v
g:colors_name	zpwr/.vim/colors/atom.vim	/^let g:colors_name="atom"$/;"	v
g:colors_name	zpwr/.vim/colors/base.vim	/^let g:colors_name = "base"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-ateliercave.vim	/^let g:colors_name = "base16-ateliercave"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierdune.vim	/^let g:colors_name = "base16-atelierdune"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierestuary.vim	/^let g:colors_name = "base16-atelierestuary"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierforest.vim	/^let g:colors_name = "base16-atelierforest"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierheath.vim	/^let g:colors_name = "base16-atelierheath"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let g:colors_name = "base16-atelierlakeside"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierplateau.vim	/^let g:colors_name = "base16-atelierplateau"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let g:colors_name = "base16-ateliersavanna"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-atelierseaside.vim	/^let g:colors_name = "base16-atelierseaside"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let g:colors_name = "base16-ateliersulphurpool"$/;"	v
g:colors_name	zpwr/.vim/colors/base16-railscasts.vim	/^let g:colors_name = "base16-railscasts"$/;"	v
g:colors_name	zpwr/.vim/colors/bayQua.vim	/^let g:colors_name="bayQua"$/;"	v
g:colors_name	zpwr/.vim/colors/baycomb.vim	/^let g:colors_name="baycomb"$/;"	v
g:colors_name	zpwr/.vim/colors/bclear.vim	/^let g:colors_name = "bclear"$/;"	v
g:colors_name	zpwr/.vim/colors/beachcomber.vim	/^let g:colors_name="beachcomber"$/;"	v
g:colors_name	zpwr/.vim/colors/beauty256.vim	/^let g:colors_name = 'beauty256'$/;"	v
g:colors_name	zpwr/.vim/colors/behelit.vim	/^let g:colors_name="behelit"$/;"	v
g:colors_name	zpwr/.vim/colors/benlight.vim	/^let g:colors_name = "benlight"$/;"	v
g:colors_name	zpwr/.vim/colors/billw.vim	/^let g:colors_name = "billw"$/;"	v
g:colors_name	zpwr/.vim/colors/biogoo.vim	/^let g:colors_name = "biogoo"$/;"	v
g:colors_name	zpwr/.vim/colors/birds-of-paradise.vim	/^let g:colors_name = "birds-of-paradise"$/;"	v
g:colors_name	zpwr/.vim/colors/black_angus.vim	/^let g:colors_name = "black_angus"$/;"	v
g:colors_name	zpwr/.vim/colors/blackbeauty.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	zpwr/.vim/colors/blackboard.vim	/^let g:colors_name = 'blackboard'$/;"	v
g:colors_name	zpwr/.vim/colors/blazer.vim	/^let g:colors_name = "blazer"$/;"	v
g:colors_name	zpwr/.vim/colors/blue.vim	/^let g:colors_name="blue"$/;"	v
g:colors_name	zpwr/.vim/colors/bluechia.vim	/^let g:colors_name = 'bluechia'$/;"	v
g:colors_name	zpwr/.vim/colors/bluedrake.vim	/^let g:colors_name = "bluedrake"$/;"	v
g:colors_name	zpwr/.vim/colors/bluegreen.vim	/^let g:colors_name="mine"$/;"	v
g:colors_name	zpwr/.vim/colors/bluez.vim	/^let g:colors_name="bluez"$/;"	v
g:colors_name	zpwr/.vim/colors/blugrine.vim	/^let g:colors_name="blugrine"$/;"	v
g:colors_name	zpwr/.vim/colors/bmichaelsen.vim	/^let g:colors_name = "bmichaelsen"$/;"	v
g:colors_name	zpwr/.vim/colors/bog.vim	/^let g:colors_name="bog"$/;"	v
g:colors_name	zpwr/.vim/colors/borland.vim	/^let g:colors_name="borland"$/;"	v
g:colors_name	zpwr/.vim/colors/brogrammer.vim	/^let g:colors_name = "Brogrammer"$/;"	v
g:colors_name	zpwr/.vim/colors/brookstream.vim	/^let g:colors_name="brookstream"$/;"	v
g:colors_name	zpwr/.vim/colors/bubblegum-256-dark.vim	/^let g:colors_name="bubblegum-256-dark"$/;"	v
g:colors_name	zpwr/.vim/colors/bubblegum-256-light.vim	/^let g:colors_name="bubblegum-256-light"$/;"	v
g:colors_name	zpwr/.vim/colors/bubblegum.vim	/^let g:colors_name="bubblegum"$/;"	v
g:colors_name	zpwr/.vim/colors/buddy.vim	/^let g:colors_name = "buddy_modified"$/;"	v
g:colors_name	zpwr/.vim/colors/bw.vim	/^let g:colors_name="bw"$/;"	v
g:colors_name	zpwr/.vim/colors/cabin.vim	/^let g:colors_name = "cabin"$/;"	v
g:colors_name	zpwr/.vim/colors/cake.vim	/^let g:colors_name = "cake"$/;"	v
g:colors_name	zpwr/.vim/colors/cake16.vim	/^let g:colors_name="cake16"$/;"	v
g:colors_name	zpwr/.vim/colors/calmar256-light.vim	/^let g:colors_name = "calmar256-light"$/;"	v
g:colors_name	zpwr/.vim/colors/camo.vim	/^let g:colors_name="camo"$/;"	v
g:colors_name	zpwr/.vim/colors/candycode.vim	/^let g:colors_name="candycode"$/;"	v
g:colors_name	zpwr/.vim/colors/caramel.vim	/^let g:colors_name="caramel"$/;"	v
g:colors_name	zpwr/.vim/colors/carrot.vim	/^let g:colors_name = "carrot"$/;"	v
g:colors_name	zpwr/.vim/colors/carvedwood.vim	/^let g:colors_name="carvedwood"$/;"	v
g:colors_name	zpwr/.vim/colors/carvedwoodcool.vim	/^let g:colors_name="carvedwoodcool"$/;"	v
g:colors_name	zpwr/.vim/colors/cascadia.vim	/^let g:colors_name = "cascadia"$/;"	v
g:colors_name	zpwr/.vim/colors/cgpro.vim	/^let g:colors_name = "cgpro"$/;"	v
g:colors_name	zpwr/.vim/colors/charon.vim	/^let g:colors_name="charon"$/;"	v
g:colors_name	zpwr/.vim/colors/chela_light.vim	/^let g:colors_name="chela_light"$/;"	v
g:colors_name	zpwr/.vim/colors/chlordane.vim	/^let g:colors_name = 'chlordane'$/;"	v
g:colors_name	zpwr/.vim/colors/chocolate.vim	/^let g:colors_name = "chocolate"$/;"	v
g:colors_name	zpwr/.vim/colors/clarity.vim	/^let g:colors_name="clarity"$/;"	v
g:colors_name	zpwr/.vim/colors/cleanroom.vim	/^let g:colors_name="Cleanroom"$/;"	v
g:colors_name	zpwr/.vim/colors/cloudy.vim	/^let g:colors_name="peppers"$/;"	v
g:colors_name	zpwr/.vim/colors/clue.vim	/^let g:colors_name = "clue"$/;"	v
g:colors_name	zpwr/.vim/colors/cobalt.vim	/^let g:colors_name="cobalt"$/;"	v
g:colors_name	zpwr/.vim/colors/cobaltish.vim	/^let g:colors_name="cobalt"$/;"	v
g:colors_name	zpwr/.vim/colors/coda.vim	/^let g:colors_name="summerfruit256"$/;"	v
g:colors_name	zpwr/.vim/colors/codeblocks_dark.vim	/^let g:colors_name="codeblocks_dark"$/;"	v
g:colors_name	zpwr/.vim/colors/codeschool.vim	/^let g:colors_name = "codeschool"$/;"	v
g:colors_name	zpwr/.vim/colors/colorer.vim	/^let g:colors_name = "colorer"$/;"	v
g:colors_name	zpwr/.vim/colors/colorful.vim	/^let g:colors_name = "colorful"$/;"	v
g:colors_name	zpwr/.vim/colors/colorful256.vim	/^let g:colors_name = "colorful256"$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:colors_name='colorsbox-faff'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:colors_name='colorsbox-greenish'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-material.vim	/^let g:colors_name='colorsbox-material'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:colors_name='colorsbox-stblue'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:colors_name='colorsbox-stbright'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:colors_name='colorsbox-steighties'$/;"	v
g:colors_name	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:colors_name='colorsbox-stnight'$/;"	v
g:colors_name	zpwr/.vim/colors/colorscheme_template.vim	/^let g:colors_name="mycolorscheme"$/;"	v
g:colors_name	zpwr/.vim/colors/contrasty.vim	/^let g:colors_name = expand('<sfile>:t:r')$/;"	v
g:colors_name	zpwr/.vim/colors/cool.vim	/^let g:colors_name = "cool"$/;"	v
g:colors_name	zpwr/.vim/colors/corporation.vim	/^let g:colors_name = "corporation"$/;"	v
g:colors_name	zpwr/.vim/colors/cthulhian.vim	/^let g:colors_name = "cthulhian"$/;"	v
g:colors_name	zpwr/.vim/colors/d8g_01.vim	/^let g:colors_name = "d8g_01"$/;"	v
g:colors_name	zpwr/.vim/colors/d8g_02.vim	/^let g:colors_name = "d8g_02"$/;"	v
g:colors_name	zpwr/.vim/colors/d8g_03.vim	/^let g:colors_name = "d8g_03"$/;"	v
g:colors_name	zpwr/.vim/colors/d8g_04.vim	/^let g:colors_name = "d8g_04"$/;"	v
g:colors_name	zpwr/.vim/colors/dante.vim	/^let g:colors_name = "dante"$/;"	v
g:colors_name	zpwr/.vim/colors/dark-ruby.vim	/^let g:colors_name="dark-ruby"$/;"	v
g:colors_name	zpwr/.vim/colors/darkBlue.vim	/^let g:colors_name = "darkBlue"$/;"	v
g:colors_name	zpwr/.vim/colors/darkZ.vim	/^let g:colors_name="darkZ"$/;"	v
g:colors_name	zpwr/.vim/colors/darkblue2.vim	/^let g:colors_name = "darkblue2"$/;"	v
g:colors_name	zpwr/.vim/colors/darkbone.vim	/^let g:colors_name = 'darkbone'$/;"	v
g:colors_name	zpwr/.vim/colors/darkburn.vim	/^let g:colors_name="darkburn"$/;"	v
g:colors_name	zpwr/.vim/colors/darkdot.vim	/^let g:colors_name="darkdot"$/;"	v
g:colors_name	zpwr/.vim/colors/darkeclipse.vim	/^let g:colors_name = 'darkeclipse'$/;"	v
g:colors_name	zpwr/.vim/colors/darkerdesert.vim	/^let g:colors_name="softblack"$/;"	v
g:colors_name	zpwr/.vim/colors/darkocean.vim	/^let g:colors_name="darkocean"$/;"	v
g:colors_name	zpwr/.vim/colors/darkrobot.vim	/^let g:colors_name="darkrobot"$/;"	v
g:colors_name	zpwr/.vim/colors/darkslategray.vim	/^let g:colors_name = "darkslategray"$/;"	v
g:colors_name	zpwr/.vim/colors/darkspectrum.vim	/^let g:colors_name="darkspectrum"$/;"	v
g:colors_name	zpwr/.vim/colors/darktango.vim	/^let g:colors_name="darktango"$/;"	v
g:colors_name	zpwr/.vim/colors/darkzen.vim	/^let g:colors_name = "darkzen"$/;"	v
g:colors_name	zpwr/.vim/colors/deepsea.vim	/^let g:colors_name = "deepsea"$/;"	v
g:colors_name	zpwr/.vim/colors/delphi.vim	/^let g:colors_name="delphi"$/;"	v
g:colors_name	zpwr/.vim/colors/denim.vim	/^let g:colors_name="denim"$/;"	v
g:colors_name	zpwr/.vim/colors/derefined.vim	/^let g:colors_name="derefined"$/;"	v
g:colors_name	zpwr/.vim/colors/desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	zpwr/.vim/colors/desert256.vim	/^let g:colors_name="desert256"$/;"	v
g:colors_name	zpwr/.vim/colors/desert256v2.vim	/^let g:colors_name="desert256v2"$/;"	v
g:colors_name	zpwr/.vim/colors/desertEx.vim	/^let g:colors_name="desertEx"$/;"	v
g:colors_name	zpwr/.vim/colors/desertedocean.vim	/^let g:colors_name="desertedocean"$/;"	v
g:colors_name	zpwr/.vim/colors/desertedoceanburnt.vim	/^let g:colors_name="desertedoceanburnt"$/;"	v
g:colors_name	zpwr/.vim/colors/desertink.vim	/^let g:colors_name="desertink"$/;"	v
g:colors_name	zpwr/.vim/colors/devbox-dark-256.vim	/^let g:colors_name="devbox-dark-256"$/;"	v
g:colors_name	zpwr/.vim/colors/deveiate.vim	/^let g:colors_name="deveiate"$/;"	v
g:colors_name	zpwr/.vim/colors/distinguished.vim	/^	let g:colors_name = 'distinguished'$/;"	v
g:colors_name	zpwr/.vim/colors/donbass.vim	/^let g:colors_name = "donbass"$/;"	v
g:colors_name	zpwr/.vim/colors/doorhinge.vim	/^let g:colors_name = "doorhinge"$/;"	v
g:colors_name	zpwr/.vim/colors/doriath.vim	/^let g:colors_name="doriath"$/;"	v
g:colors_name	zpwr/.vim/colors/dual.vim	/^let g:colors_name = "dual"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-dark.vim	/^let g:colors_name = "duotone-dark"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkcave.vim	/^let g:colors_name = "duotone-darkcave"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkdesert.vim	/^let g:colors_name = "duotone-darkdesert"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkearth.vim	/^let g:colors_name = "duotone-darkearth"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkforest.vim	/^let g:colors_name = "duotone-darkforest"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkheath.vim	/^let g:colors_name = "duotone-darkheath"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darklake.vim	/^let g:colors_name = "duotone-darklake"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let g:colors_name = "duotone-darkmeadow"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkpark.vim	/^let g:colors_name = "duotone-darkpark"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkpool.vim	/^let g:colors_name = "duotone-darkpool"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darksea.vim	/^let g:colors_name = "duotone-darksea"$/;"	v
g:colors_name	zpwr/.vim/colors/duotone-darkspace.vim	/^let g:colors_name = "duotone-darkspace"$/;"	v
g:colors_name	zpwr/.vim/colors/eclipse.vim	/^let g:colors_name = "eclipse"$/;"	v
g:colors_name	zpwr/.vim/colors/ego.vim	/^let g:colors_name = "ego"$/;"	v
g:colors_name	zpwr/.vim/colors/ekvoli.vim	/^let g:colors_name = "ekvoli"$/;"	v
g:colors_name	zpwr/.vim/colors/elda.vim	/^let g:colors_name="elda"$/;"	v
g:colors_name	zpwr/.vim/colors/elise.vim	/^let g:colors_name = "elise"$/;"	v
g:colors_name	zpwr/.vim/colors/elisex.vim	/^let g:colors_name = "elisex"$/;"	v
g:colors_name	zpwr/.vim/colors/elrodeo.vim	/^let g:colors_name="elrodeo"$/;"	v
g:colors_name	zpwr/.vim/colors/elrond.vim	/^let g:colors_name = "elrond"$/;"	v
g:colors_name	zpwr/.vim/colors/enigma.vim	/^let g:colors_name = "enigma"$/;"	v
g:colors_name	zpwr/.vim/colors/enzyme.vim	/^let g:colors_name = "enzyme"$/;"	v
g:colors_name	zpwr/.vim/colors/erez.vim	/^let g:colors_name = "erez"$/;"	v
g:colors_name	zpwr/.vim/colors/eva.vim	/^let g:colors_name = "eva"$/;"	v
g:colors_name	zpwr/.vim/colors/eva01.vim	/^let g:colors_name = "eva01"$/;"	v
g:colors_name	zpwr/.vim/colors/evening.vim	/^let g:colors_name = "evening"$/;"	v
g:colors_name	zpwr/.vim/colors/far.vim	/^let g:colors_name="far"$/;"	v
g:colors_name	zpwr/.vim/colors/felipec.vim	/^let g:colors_name = "felipec"$/;"	v
g:colors_name	zpwr/.vim/colors/flatcolor.vim	/^let g:colors_name='flatcolor'$/;"	v
g:colors_name	zpwr/.vim/colors/flatland.vim	/^let g:colors_name = "flatland"$/;"	v
g:colors_name	zpwr/.vim/colors/flatlandia.vim	/^let g:colors_name = "flatlandia"$/;"	v
g:colors_name	zpwr/.vim/colors/flattown.vim	/^let g:colors_name = "flattown"$/;"	v
g:colors_name	zpwr/.vim/colors/flattr.vim	/^let g:colors_name="flattr"$/;"	v
g:colors_name	zpwr/.vim/colors/flatui.vim	/^let g:colors_name="flatui"$/;"	v
g:colors_name	zpwr/.vim/colors/fokus.vim	/^let g:colors_name="fokus"$/;"	v
g:colors_name	zpwr/.vim/colors/forneus.vim	/^let g:colors_name = "forneus"$/;"	v
g:colors_name	zpwr/.vim/colors/frood.vim	/^let g:colors_name = "frood"$/;"	v
g:colors_name	zpwr/.vim/colors/fx.vim	/^let g:colors_name = "fx"$/;"	v
g:colors_name	zpwr/.vim/colors/gardener.vim	/^let g:colors_name = "gardener"$/;"	v
g:colors_name	zpwr/.vim/colors/genericdc-light.vim	/^let g:colors_name = "genericdc-light"$/;"	v
g:colors_name	zpwr/.vim/colors/genericdc.vim	/^let g:colors_name = "genericdc"$/;"	v
g:colors_name	zpwr/.vim/colors/getfresh.vim	/^let g:colors_name = "getfresh"$/;"	v
g:colors_name	zpwr/.vim/colors/gobo.vim	/^let g:colors_name = "ColorSchemeCreator"  $/;"	v
g:colors_name	zpwr/.vim/colors/golded.vim	/^let g:colors_name="golded"$/;"	v
g:colors_name	zpwr/.vim/colors/golden.vim	/^let g:colors_name = "golden"$/;"	v
g:colors_name	zpwr/.vim/colors/goodwolf.vim	/^let g:colors_name = "goodwolf"$/;"	v
g:colors_name	zpwr/.vim/colors/gor.vim	/^let g:colors_name = "gor"$/;"	v
g:colors_name	zpwr/.vim/colors/gotham.vim	/^let g:colors_name = 'gotham'$/;"	v
g:colors_name	zpwr/.vim/colors/gotham256.vim	/^let g:colors_name = 'gotham256'$/;"	v
g:colors_name	zpwr/.vim/colors/gothic.vim	/^let g:colors_name = "gothic"$/;"	v
g:colors_name	zpwr/.vim/colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:colors_name	zpwr/.vim/colors/greenvision.vim	/^let g:colors_name = 'greenvision'$/;"	v
g:colors_name	zpwr/.vim/colors/grishin.vim	/^let g:colors_name = "grishin"$/;"	v
g:colors_name	zpwr/.vim/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:colors_name	zpwr/.vim/colors/gryffin.vim	/^    let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	zpwr/.vim/colors/guardian.vim	/^let g:colors_name = "Guardian"$/;"	v
g:colors_name	zpwr/.vim/colors/guepardo.vim	/^let g:colors_name = "guepardo"$/;"	v
g:colors_name	zpwr/.vim/colors/h80.vim	/^let g:colors_name="h80"$/;"	v
g:colors_name	zpwr/.vim/colors/habiLight.vim	/^let g:colors_name = "habiLight"$/;"	v
g:colors_name	zpwr/.vim/colors/hemisu.vim	/^let g:colors_name = "hemisu"$/;"	v
g:colors_name	zpwr/.vim/colors/heroku-terminal.vim	/^let g:colors_name = "heroku-terminal"$/;"	v
g:colors_name	zpwr/.vim/colors/heroku.vim	/^let g:colors_name = "heroku"$/;"	v
g:colors_name	zpwr/.vim/colors/herokudoc-gvim.vim	/^let g:colors_name = "herokudoc-gvim"$/;"	v
g:colors_name	zpwr/.vim/colors/herokudoc.vim	/^    let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	zpwr/.vim/colors/hilal.vim	/^let g:colors_name="hilal"$/;"	v
g:colors_name	zpwr/.vim/colors/holokai.vim	/^let g:colors_name="holokai"$/;"	v
g:colors_name	zpwr/.vim/colors/hybrid.vim	/^let g:colors_name = "hybrid"$/;"	v
g:colors_name	zpwr/.vim/colors/iangenzo.vim	/^    let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	zpwr/.vim/colors/ibmedit.vim	/^let g:colors_name="ibmedit"$/;"	v
g:colors_name	zpwr/.vim/colors/icansee.vim	/^let g:colors_name = "icansee"$/;"	v
g:colors_name	zpwr/.vim/colors/iceberg.vim	/^let g:colors_name = 'iceberg'$/;"	v
g:colors_name	zpwr/.vim/colors/impact.vim	/^let g:colors_name="impact"$/;"	v
g:colors_name	zpwr/.vim/colors/impactG.vim	/^let g:colors_name="impact"$/;"	v
g:colors_name	zpwr/.vim/colors/impactjs.vim	/^let g:colors_name = "impactjs"$/;"	v
g:colors_name	zpwr/.vim/colors/ingretu.vim	/^let g:colors_name = "ingretu"$/;"	v
g:colors_name	zpwr/.vim/colors/jammy.vim	/^let g:colors_name="jammy"$/;"	v
g:colors_name	zpwr/.vim/colors/janah.vim	/^let g:colors_name = 'janah'$/;"	v
g:colors_name	zpwr/.vim/colors/kalahari.vim	/^let g:colors_name="kalahari"$/;"	v
g:colors_name	zpwr/.vim/colors/kalisi.vim	/^  let g:colors_name = "kalisi"$/;"	v
g:colors_name	zpwr/.vim/colors/kalt.vim	/^let g:colors_name = "kalt"$/;"	v
g:colors_name	zpwr/.vim/colors/kaltex.vim	/^let g:colors_name = "kaltex"$/;"	v
g:colors_name	zpwr/.vim/colors/kate.vim	/^let g:colors_name="DevC++"$/;"	v
g:colors_name	zpwr/.vim/colors/khaki.vim	/^let g:colors_name = "khaki"$/;"	v
g:colors_name	zpwr/.vim/colors/kib_darktango.vim	/^let g:colors_name="kib_darktango"$/;"	v
g:colors_name	zpwr/.vim/colors/kib_plastic.vim	/^let g:colors_name="kib_plastic"$/;"	v
g:colors_name	zpwr/.vim/colors/kkruby.vim	/^let g:colors_name = "kkruby"$/;"	v
g:colors_name	zpwr/.vim/colors/kolor.vim	/^let g:colors_name="kolor"$/;"	v
g:colors_name	zpwr/.vim/colors/kruby.vim	/^let g:colors_name = "kkruby"$/;"	v
g:colors_name	zpwr/.vim/colors/laederon.vim	/^let g:colors_name="laederon"$/;"	v
g:colors_name	zpwr/.vim/colors/landscape.vim	/^let g:colors_name = 'landscape'$/;"	v
g:colors_name	zpwr/.vim/colors/lapis256.vim	/^let g:colors_name="lapis256"$/;"	v
g:colors_name	zpwr/.vim/colors/lazarus.vim	/^let g:colors_name="lazarus"$/;"	v
g:colors_name	zpwr/.vim/colors/legiblelight.vim	/^let g:colors_name = "legiblelight"$/;"	v
g:colors_name	zpwr/.vim/colors/leo.vim	/^let g:colors_name = "leo256"$/;"	v
g:colors_name	zpwr/.vim/colors/less.vim	/^let g:colors_name = "less"$/;"	v
g:colors_name	zpwr/.vim/colors/lettuce.vim	/^let g:colors_name="lettuce"$/;"	v
g:colors_name	zpwr/.vim/colors/lilac.vim	/^let g:colors_name = "lilac"$/;"	v
g:colors_name	zpwr/.vim/colors/lilydjwg_dark.vim	/^let g:colors_name = "lilydjwg_dark"$/;"	v
g:colors_name	zpwr/.vim/colors/lilydjwg_green.vim	/^let g:colors_name = "lilydjwg_green"$/;"	v
g:colors_name	zpwr/.vim/colors/lingodirector.vim	/^let g:colors_name="lingodirector"$/;"	v
g:colors_name	zpwr/.vim/colors/literal_tango.vim	/^let g:colors_name = "literal_tango"$/;"	v
g:colors_name	zpwr/.vim/colors/lizard256.vim	/^let g:colors_name = "wombat256"$/;"	v
g:colors_name	zpwr/.vim/colors/louver.vim	/^let g:colors_name = 'louver'$/;"	v
g:colors_name	zpwr/.vim/colors/lucius.vim	/^let g:colors_name="lucius"$/;"	v
g:colors_name	zpwr/.vim/colors/luinnar.vim	/^let g:colors_name="luinnar"$/;"	v
g:colors_name	zpwr/.vim/colors/lumberjack.vim	/^let g:colors_name='lumberjack'$/;"	v
g:colors_name	zpwr/.vim/colors/luna-term.vim	/^let g:colors_name = "luna-term"$/;"	v
g:colors_name	zpwr/.vim/colors/luna.vim	/^let g:colors_name = "luna"$/;"	v
g:colors_name	zpwr/.vim/colors/lxvc.vim	/^let g:colors_name="lxvc"$/;"	v
g:colors_name	zpwr/.vim/colors/mac_classic.vim	/^let g:colors_name = "mac_classic"$/;"	v
g:colors_name	zpwr/.vim/colors/made_of_code.vim	/^let g:colors_name = "Made of Code"$/;"	v
g:colors_name	zpwr/.vim/colors/madeofcode.vim	/^let g:colors_name = "madeofcode"$/;"	v
g:colors_name	zpwr/.vim/colors/mango.vim	/^  let g:colors_name = "mango"$/;"	v
g:colors_name	zpwr/.vim/colors/manuscript.vim	/^let g:colors_name = expand('<sfile>:t:r')$/;"	v
g:colors_name	zpwr/.vim/colors/manxome.vim	/^let g:colors_name = "manxome"$/;"	v
g:colors_name	zpwr/.vim/colors/marklar.vim	/^let g:colors_name = "marklar"$/;"	v
g:colors_name	zpwr/.vim/colors/maroloccio.vim	/^let g:colors_name="maroloccio"$/;"	v
g:colors_name	zpwr/.vim/colors/mars.vim	/^let g:colors_name="mars"$/;"	v
g:colors_name	zpwr/.vim/colors/material-theme.vim	/^let g:colors_name = "material-theme"$/;"	v
g:colors_name	zpwr/.vim/colors/material.vim	/^let g:colors_name = "materialvim"$/;"	v
g:colors_name	zpwr/.vim/colors/materialbox.vim	/^let g:colors_name='materialbox'$/;"	v
g:colors_name	zpwr/.vim/colors/matrix.vim	/^let g:colors_name = 'matrix'$/;"	v
g:colors_name	zpwr/.vim/colors/maui.vim	/^let g:colors_name="maui"$/;"	v
g:colors_name	zpwr/.vim/colors/mellow.vim	/^let g:colors_name="mellow"$/;"	v
g:colors_name	zpwr/.vim/colors/midnight.vim	/^let g:colors_name="midnight2"$/;"	v
g:colors_name	zpwr/.vim/colors/midnight2.vim	/^let g:colors_name="midnight2"$/;"	v
g:colors_name	zpwr/.vim/colors/miko.vim	/^let g:colors_name = "miko"$/;"	v
g:colors_name	zpwr/.vim/colors/mizore.vim	/^let g:colors_name="mizore"$/;"	v
g:colors_name	zpwr/.vim/colors/mod8.vim	/^let g:colors_name = "mod8"$/;"	v
g:colors_name	zpwr/.vim/colors/mojave.vim	/^let g:colors_name="mojave"$/;"	v
g:colors_name	zpwr/.vim/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	zpwr/.vim/colors/molokai_dark.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	zpwr/.vim/colors/monoacc.vim	/^let g:colors_name = "monoacc"$/;"	v
g:colors_name	zpwr/.vim/colors/monochrome.vim	/^let g:colors_name = 'monochrome'$/;"	v
g:colors_name	zpwr/.vim/colors/monokai-chris.vim	/^let g:colors_name = "monokai-chris"$/;"	v
g:colors_name	zpwr/.vim/colors/monokain.vim	/^let g:colors_name="monokain"$/;"	v
g:colors_name	zpwr/.vim/colors/montz.vim	/^let g:colors_name = "montz"$/;"	v
g:colors_name	zpwr/.vim/colors/moonshine.vim	/^let g:colors_name = 'moonshine'$/;"	v
g:colors_name	zpwr/.vim/colors/moonshine_lowcontrast.vim	/^let g:colors_name = 'moonshine'$/;"	v
g:colors_name	zpwr/.vim/colors/mophiaDark.vim	/^let g:colors_name="mophiaDark"$/;"	v
g:colors_name	zpwr/.vim/colors/mophiaSmoke.vim	/^let g:colors_name="mophiaSmoke"$/;"	v
g:colors_name	zpwr/.vim/colors/mopkai.vim	/^let g:colors_name='mopkai'$/;"	v
g:colors_name	zpwr/.vim/colors/moss.vim	/^let g:colors_name = "moss"$/;"	v
g:colors_name	zpwr/.vim/colors/motus.vim	/^let g:colors_name = "motus"$/;"	v
g:colors_name	zpwr/.vim/colors/mrkn256.vim	/^let g:colors_name="mrkn256"$/;"	v
g:colors_name	zpwr/.vim/colors/mud.vim	/^let g:colors_name="mud"$/;"	v
g:colors_name	zpwr/.vim/colors/muon.vim	/^let g:colors_name="muon"$/;"	v
g:colors_name	zpwr/.vim/colors/mushroom.vim	/^let g:colors_name = "mushroom"$/;"	v
g:colors_name	zpwr/.vim/colors/nature.vim	/^let g:colors_name="nature"$/;"	v
g:colors_name	zpwr/.vim/colors/navajo-night.vim	/^let g:colors_name = "navajo-night"$/;"	v
g:colors_name	zpwr/.vim/colors/navajo.vim	/^let g:colors_name = "navajo"$/;"	v
g:colors_name	zpwr/.vim/colors/nedit.vim	/^let g:colors_name="nedit"$/;"	v
g:colors_name	zpwr/.vim/colors/nedit2.vim	/^let g:colors_name="nedit2"$/;"	v
g:colors_name	zpwr/.vim/colors/neonwave.vim	/^		let g:colors_name = "neonwave"$/;"	v
g:colors_name	zpwr/.vim/colors/neutron.vim	/^let g:colors_name="neutron"$/;"	v
g:colors_name	zpwr/.vim/colors/neverland-darker.vim	/^let g:colors_name="neverland-darker"$/;"	v
g:colors_name	zpwr/.vim/colors/neverland.vim	/^let g:colors_name="neverland"$/;"	v
g:colors_name	zpwr/.vim/colors/neverland2-darker.vim	/^let g:colors_name="neverland2-dark"$/;"	v
g:colors_name	zpwr/.vim/colors/neverland2.vim	/^let g:colors_name="neverland2"$/;"	v
g:colors_name	zpwr/.vim/colors/neverness.vim	/^let g:colors_name = 'neverness'$/;"	v
g:colors_name	zpwr/.vim/colors/nevfn.vim	/^let g:colors_name = 'nevfn'$/;"	v
g:colors_name	zpwr/.vim/colors/newsprint.vim	/^let g:colors_name = "newsprint"$/;"	v
g:colors_name	zpwr/.vim/colors/nicotine.vim	/^let g:colors_name="nicotine"$/;"	v
g:colors_name	zpwr/.vim/colors/nightVision.vim	/^let g:colors_name="clarity"$/;"	v
g:colors_name	zpwr/.vim/colors/night_vision.vim	/^let g:colors_name="night_vision"$/;"	v
g:colors_name	zpwr/.vim/colors/nightflight.vim	/^let g:colors_name = "nightflight"$/;"	v
g:colors_name	zpwr/.vim/colors/nightflight2.vim	/^let g:colors_name = "nightflight2"$/;"	v
g:colors_name	zpwr/.vim/colors/nightshimmer.vim	/^let g:colors_name = "nightshimmer"$/;"	v
g:colors_name	zpwr/.vim/colors/nightsky.vim	/^let g:colors_name="northsky"$/;"	v
g:colors_name	zpwr/.vim/colors/nightwish.vim	/^let g:colors_name = "nightwish"$/;"	v
g:colors_name	zpwr/.vim/colors/northland.vim	/^let g:colors_name="northland"$/;"	v
g:colors_name	zpwr/.vim/colors/northsky.vim	/^let g:colors_name="northsky"$/;"	v
g:colors_name	zpwr/.vim/colors/norwaytoday.vim	/^let g:colors_name = "norwaytoday"$/;"	v
g:colors_name	zpwr/.vim/colors/nour.vim	/^let g:colors_name="dw_green"$/;"	v
g:colors_name	zpwr/.vim/colors/nuvola.vim	/^let g:colors_name = "nuvola"$/;"	v
g:colors_name	zpwr/.vim/colors/obsidian2.vim	/^let g:colors_name="obsidian2"$/;"	v
g:colors_name	zpwr/.vim/colors/oceanblack.vim	/^let g:colors_name = "oceanblack"$/;"	v
g:colors_name	zpwr/.vim/colors/oceanblack256.vim	/^let g:colors_name = "oceanblack256"$/;"	v
g:colors_name	zpwr/.vim/colors/oceandeep.vim	/^let g:colors_name = "oceandeep"$/;"	v
g:colors_name	zpwr/.vim/colors/oceanlight.vim	/^let g:colors_name = "oceanlight"$/;"	v
g:colors_name	zpwr/.vim/colors/olive.vim	/^let g:colors_name="olive"$/;"	v
g:colors_name	zpwr/.vim/colors/onedark.vim	/^let g:colors_name="onedark"$/;"	v
g:colors_name	zpwr/.vim/colors/orange.vim	/^let g:colors_name = "orange"$/;"	v
g:colors_name	zpwr/.vim/colors/osx_like.vim	/^let g:colors_name = 'osx_like'$/;"	v
g:colors_name	zpwr/.vim/colors/otaku.vim	/^let g:colors_name="otaku"$/;"	v
g:colors_name	zpwr/.vim/colors/oxeded.vim	/^let g:colors_name = "oxeded"$/;"	v
g:colors_name	zpwr/.vim/colors/pacific.vim	/^let g:colors_name="pacific"$/;"	v
g:colors_name	zpwr/.vim/colors/peaksea.vim	/^let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	zpwr/.vim/colors/pencil.vim	/^let g:colors_name='pencil'$/;"	v
g:colors_name	zpwr/.vim/colors/penultimate.vim	/^let g:colors_name="penultimate"$/;"	v
g:colors_name	zpwr/.vim/colors/peppers.vim	/^let g:colors_name="peppers"$/;"	v
g:colors_name	zpwr/.vim/colors/phoenix.vim	/^let g:colors_name = 'phoenix'$/;"	v
g:colors_name	zpwr/.vim/colors/phphaxor.vim	/^let g:colors_name = "phphaxor"$/;"	v
g:colors_name	zpwr/.vim/colors/phpx.vim	/^let g:colors_name = "phpx"$/;"	v
g:colors_name	zpwr/.vim/colors/pink.vim	/^let g:colors_name = "pink"$/;"	v
g:colors_name	zpwr/.vim/colors/pleasant.vim	/^let g:colors_name="pleasant"$/;"	v
g:colors_name	zpwr/.vim/colors/potts.vim	/^let g:colors_name="potts2"$/;"	v
g:colors_name	zpwr/.vim/colors/predawn.vim	/^let g:colors_name = "predawn"$/;"	v
g:colors_name	zpwr/.vim/colors/preto.vim	/^let g:colors_name = "preto"$/;"	v
g:colors_name	zpwr/.vim/colors/pride.vim	/^let g:colors_name = "pride"$/;"	v
g:colors_name	zpwr/.vim/colors/primary.vim	/^let g:colors_name = 'primary'$/;"	v
g:colors_name	zpwr/.vim/colors/print_bw.vim	/^let g:colors_name = "print_bw"$/;"	v
g:colors_name	zpwr/.vim/colors/prmths.vim	/^let g:colors_name = "prmths"$/;"	v
g:colors_name	zpwr/.vim/colors/professional.vim	/^let g:colors_name="professional"$/;"	v
g:colors_name	zpwr/.vim/colors/pspad.vim	/^let g:colors_name = "pspad"$/;"	v
g:colors_name	zpwr/.vim/colors/pw.vim	/^let g:colors_name = "pw"$/;"	v
g:colors_name	zpwr/.vim/colors/python.vim	/^let g:colors_name = "python"$/;"	v
g:colors_name	zpwr/.vim/colors/quagmire.vim	/^let g:colors_name="quagmire"$/;"	v
g:colors_name	zpwr/.vim/colors/railscasts.vim	/^let g:colors_name = "railscasts"$/;"	v
g:colors_name	zpwr/.vim/colors/rastafari.vim	/^  let g:colors_name="rastafari"$/;"	v
g:colors_name	zpwr/.vim/colors/rcg_term.vim	/^let g:colors_name = "rcg_term"$/;"	v
g:colors_name	zpwr/.vim/colors/redstring.vim	/^let g:colors_name = "redstring"$/;"	v
g:colors_name	zpwr/.vim/colors/refactor.vim	/^let g:colors_name = "RefractorMyCode"$/;"	v
g:colors_name	zpwr/.vim/colors/relaxedgreen.vim	/^let g:colors_name = "relaxedgreen"$/;"	v
g:colors_name	zpwr/.vim/colors/reliable.vim	/^let g:colors_name = "reliable"$/;"	v
g:colors_name	zpwr/.vim/colors/reloaded.vim	/^let g:colors_name="reloaded"$/;"	v
g:colors_name	zpwr/.vim/colors/revolutions.vim	/^let g:colors_name = 'revolutions'$/;"	v
g:colors_name	zpwr/.vim/colors/robinhood.vim	/^let g:colors_name = "robinhood"$/;"	v
g:colors_name	zpwr/.vim/colors/rootwater.vim	/^let g:colors_name = 'rootwater'$/;"	v
g:colors_name	zpwr/.vim/colors/sand.vim	/^let g:colors_name="sand"$/;"	v
g:colors_name	zpwr/.vim/colors/sandydune.vim	/^let g:colors_name="sandydune"$/;"	v
g:colors_name	zpwr/.vim/colors/saturn.vim	/^let g:colors_name = "saturn"$/;"	v
g:colors_name	zpwr/.vim/colors/scheakur.vim	/^let g:colors_name = 'scheakur'$/;"	v
g:colors_name	zpwr/.vim/colors/scite.vim	/^let g:colors_name = "scite"$/;"	v
g:colors_name	zpwr/.vim/colors/scooby.vim	/^let g:colors_name = "scooby"$/;"	v
g:colors_name	zpwr/.vim/colors/sean.vim	/^let g:colors_name = "sean"$/;"	v
g:colors_name	zpwr/.vim/colors/seashell.vim	/^let g:colors_name = "seashell"$/;"	v
g:colors_name	zpwr/.vim/colors/selenitic.vim	/^let g:colors_name='selenitic'$/;"	v
g:colors_name	zpwr/.vim/colors/seoul256-light.vim	/^    let g:colors_name = &background == 'dark' ? 'seoul256' : 'seoul256-light'$/;"	v
g:colors_name	zpwr/.vim/colors/seoul256-light.vim	/^    let g:colors_name = 'seoul256'$/;"	v
g:colors_name	zpwr/.vim/colors/seoul256.vim	/^let g:colors_name = 'seoul256'$/;"	v
g:colors_name	zpwr/.vim/colors/seti.vim	/^let g:colors_name = "seti"$/;"	v
g:colors_name	zpwr/.vim/colors/settlemyer.vim	/^let g:colors_name="settlemyer"$/;"	v
g:colors_name	zpwr/.vim/colors/sexy-railscasts.vim	/^let g:colors_name = "sexy-railscasts"$/;"	v
g:colors_name	zpwr/.vim/colors/sf.vim	/^let g:colors_name = "sf"$/;"	v
g:colors_name	zpwr/.vim/colors/shades-of-teal.vim	/^let g:colors_name = "shades-of-teal"$/;"	v
g:colors_name	zpwr/.vim/colors/shadesofamber.vim	/^let g:colors_name = "shadesofamber"$/;"	v
g:colors_name	zpwr/.vim/colors/shobogenzo.vim	/^let g:colors_name = "shobogenzo"$/;"	v
g:colors_name	zpwr/.vim/colors/sienna.vim	/^let g:colors_name = 'sienna'$/;"	v
g:colors_name	zpwr/.vim/colors/sierra.vim	/^let g:colors_name="sierra"$/;"	v
g:colors_name	zpwr/.vim/colors/sift.vim	/^let g:colors_name="sift"$/;"	v
g:colors_name	zpwr/.vim/colors/silent.vim	/^let g:colors_name = "silent"$/;"	v
g:colors_name	zpwr/.vim/colors/simple256.vim	/^let g:colors_name="desert256"$/;"	v
g:colors_name	zpwr/.vim/colors/simple_b.vim	/^let g:colors_name = "simple_b"$/;"	v
g:colors_name	zpwr/.vim/colors/simpleandfriendly.vim	/^let g:colors_name = "simpleandfriendly"$/;"	v
g:colors_name	zpwr/.vim/colors/simplewhite.vim	/^let g:colors_name = 'simplewhite'$/;"	v
g:colors_name	zpwr/.vim/colors/simplon.vim	/^let g:colors_name="simplon"$/;"	v
g:colors_name	zpwr/.vim/colors/skittles_berry.vim	/^let g:colors_name="skittles_berry"$/;"	v
g:colors_name	zpwr/.vim/colors/skittles_dark.vim	/^let g:colors_name="skittles_dark"$/;"	v
g:colors_name	zpwr/.vim/colors/sky.vim	/^let g:colors_name = "sky"$/;"	v
g:colors_name	zpwr/.vim/colors/smp.vim	/^let g:colors_name = "smp"$/;"	v
g:colors_name	zpwr/.vim/colors/smpl.vim	/^let g:colors_name='smpl'$/;"	v
g:colors_name	zpwr/.vim/colors/smyck.vim	/^let g:colors_name = "smyck"$/;"	v
g:colors_name	zpwr/.vim/colors/soda.vim	/^let g:colors_name = "soda"$/;"	v
g:colors_name	zpwr/.vim/colors/softblue.vim	/^let g:colors_name="softblue"$/;"	v
g:colors_name	zpwr/.vim/colors/softbluev2.vim	/^let g:colors_name="softbluev2"$/;"	v
g:colors_name	zpwr/.vim/colors/sol-term.vim	/^let g:colors_name = "sol"$/;"	v
g:colors_name	zpwr/.vim/colors/sol.vim	/^let g:colors_name = "sol"$/;"	v
g:colors_name	zpwr/.vim/colors/sole.vim	/^let g:colors_name = "sole"$/;"	v
g:colors_name	zpwr/.vim/colors/sonofobsidian.vim	/^let g:colors_name="sonofobsidian"$/;"	v
g:colors_name	zpwr/.vim/colors/sonoma.vim	/^let g:colors_name="sonoma"$/;"	v
g:colors_name	zpwr/.vim/colors/soso.vim	/^let g:colors_name="soso"$/;"	v
g:colors_name	zpwr/.vim/colors/spectro.vim	/^let g:colors_name="spectro"$/;"	v
g:colors_name	zpwr/.vim/colors/spiderhawk.vim	/^let g:colors_name="spiderhawk"$/;"	v
g:colors_name	zpwr/.vim/colors/sprinkles.vim	/^let g:colors_name = "sprinkles"$/;"	v
g:colors_name	zpwr/.vim/colors/stingray.vim	/^let g:colors_name="stingray"$/;"	v
g:colors_name	zpwr/.vim/colors/stonewashed-256.vim	/^let g:colors_name = ""$/;"	v
g:colors_name	zpwr/.vim/colors/stonewashed-gui.vim	/^let g:colors_name = "stonewashed-gui"$/;"	v
g:colors_name	zpwr/.vim/colors/strawimodo.vim	/^let g:colors_name = "strawimodo"$/;"	v
g:colors_name	zpwr/.vim/colors/summerfruit256.vim	/^let g:colors_name="summerfruit256"$/;"	v
g:colors_name	zpwr/.vim/colors/sunburst.vim	/^let g:colors_name = "Sunburst"$/;"	v
g:colors_name	zpwr/.vim/colors/surveyor.vim	/^let g:colors_name = "Surveyor"$/;"	v
g:colors_name	zpwr/.vim/colors/symfony.vim	/^let g:colors_name = "symfony"$/;"	v
g:colors_name	zpwr/.vim/colors/synic.vim	/^let g:colors_name = "synic"$/;"	v
g:colors_name	zpwr/.vim/colors/tabula.vim	/^let g:colors_name = "tabula"$/;"	v
g:colors_name	zpwr/.vim/colors/tango-desert.vim	/^let g:colors_name="tango-desert"$/;"	v
g:colors_name	zpwr/.vim/colors/telstar.vim	/^let g:colors_name = "telstar"$/;"	v
g:colors_name	zpwr/.vim/colors/termschool.vim	/^let g:colors_name = "termschool"$/;"	v
g:colors_name	zpwr/.vim/colors/thegoodluck.vim	/^let g:colors_name = "thegoodluck"$/;"	v
g:colors_name	zpwr/.vim/colors/thornbird.vim	/^let g:colors_name = "thornbird"$/;"	v
g:colors_name	zpwr/.vim/colors/tibet.vim	/^let g:colors_name="tibet"$/;"	v
g:colors_name	zpwr/.vim/colors/tidy.vim	/^let g:colors_name="tidy"$/;"	v
g:colors_name	zpwr/.vim/colors/tolerable.vim	/^let g:colors_name="tolerable"$/;"	v
g:colors_name	zpwr/.vim/colors/tomatosoup.vim	/^let g:colors_name="tomatosoup"$/;"	v
g:colors_name	zpwr/.vim/colors/tony_light.vim	/^let g:colors_name="tony_light"$/;"	v
g:colors_name	zpwr/.vim/colors/toothpik.vim	/^let g:colors_name="toothpik"$/;"	v
g:colors_name	zpwr/.vim/colors/torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	zpwr/.vim/colors/transparent.vim	/^let g:colors_name="transparent"$/;"	v
g:colors_name	zpwr/.vim/colors/trivial256.vim	/^let g:colors_name="trivial256"$/;"	v
g:colors_name	zpwr/.vim/colors/trogdor.vim	/^let g:colors_name = "trogdor"$/;"	v
g:colors_name	zpwr/.vim/colors/tropikos.vim	/^let g:colors_name = "tropikos" $/;"	v
g:colors_name	zpwr/.vim/colors/tutticolori.vim	/^let g:colors_name = "tutticolori"$/;"	v
g:colors_name	zpwr/.vim/colors/twilight256.vim	/^let g:colors_name="twilight256"$/;"	v
g:colors_name	zpwr/.vim/colors/twitchy.vim	/^let g:colors_name = "twitchy"$/;"	v
g:colors_name	zpwr/.vim/colors/two2tango.vim	/^let g:colors_name="two2tango"$/;"	v
g:colors_name	zpwr/.vim/colors/ubaryd.vim	/^let g:colors_name="ubaryd"$/;"	v
g:colors_name	zpwr/.vim/colors/ubloh.vim	/^let g:colors_name = "ubloh"$/;"	v
g:colors_name	zpwr/.vim/colors/umber-green.vim	/^let g:colors_name="umber-green"$/;"	v
g:colors_name	zpwr/.vim/colors/understated.vim	/^let g:colors_name="understated"$/;"	v
g:colors_name	zpwr/.vim/colors/valloric.vim	/^let g:colors_name="valloric"$/;"	v
g:colors_name	zpwr/.vim/colors/vc.vim	/^let g:colors_name="vc"$/;"	v
g:colors_name	zpwr/.vim/colors/vcbc.vim	/^let g:colors_name="vcbc"$/;"	v
g:colors_name	zpwr/.vim/colors/vexorian.vim	/^let g:colors_name = "ColorSchemeCreator"  $/;"	v
g:colors_name	zpwr/.vim/colors/vibrantink.vim	/^let g:colors_name = "vibrantink"$/;"	v
g:colors_name	zpwr/.vim/colors/vilight.vim	/^let g:colors_name="vilight"$/;"	v
g:colors_name	zpwr/.vim/colors/vimbrant.vim	/^let g:colors_name="vimbrant"$/;"	v
g:colors_name	zpwr/.vim/colors/vj.vim	/^let g:colors_name="vj"$/;"	v
g:colors_name	zpwr/.vim/colors/void.vim	/^let g:colors_name="void"$/;"	v
g:colors_name	zpwr/.vim/colors/vydark.vim	/^let g:colors_name="vydark"$/;"	v
g:colors_name	zpwr/.vim/colors/vylight.vim	/^let g:colors_name="vylight"$/;"	v
g:colors_name	zpwr/.vim/colors/wargrey.vim	/^let g:colors_name="wargrey"$/;"	v
g:colors_name	zpwr/.vim/colors/wasabi256.vim	/^let g:colors_name = "wasabi256"$/;"	v
g:colors_name	zpwr/.vim/colors/watermark.vim	/^let g:colors_name="watermark"$/;"	v
g:colors_name	zpwr/.vim/colors/wellsokai.vim	/^let g:colors_name = "wellsokai"$/;"	v
g:colors_name	zpwr/.vim/colors/whitebox.vim	/^let g:colors_name = "whitebox"$/;"	v
g:colors_name	zpwr/.vim/colors/widower.vim	/^let g:colors_name = "widower"$/;"	v
g:colors_name	zpwr/.vim/colors/win9xblueback.vim	/^let g:colors_name = 'win9xblueback'$/;"	v
g:colors_name	zpwr/.vim/colors/wintersday.vim	/^let g:colors_name = "wintersday"$/;"	v
g:colors_name	zpwr/.vim/colors/woju.vim	/^let g:colors_name = "woju"$/;"	v
g:colors_name	zpwr/.vim/colors/wolfpack.vim	/^let g:colors_name = "wolfpack"$/;"	v
g:colors_name	zpwr/.vim/colors/wombat256i.vim	/^let g:colors_name = "wombat256i"$/;"	v
g:colors_name	zpwr/.vim/colors/wood.vim	/^let g:colors_name="wood"$/;"	v
g:colors_name	zpwr/.vim/colors/wuye.vim	/^let g:colors_name = "wuye"$/;"	v
g:colors_name	zpwr/.vim/colors/xemacs.vim	/^let g:colors_name="xemacs"$/;"	v
g:colors_name	zpwr/.vim/colors/xian.vim	/^let g:colors_name = "xian"$/;"	v
g:colors_name	zpwr/.vim/colors/yeller.vim	/^let g:colors_name="yeller"$/;"	v
g:colors_name	zpwr/.vim/colors/zen.vim	/^let g:colors_name = "zen"$/;"	v
g:colors_name	zpwr/.vim/colors/zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:colors_name	zpwr/.vim/colors/zephyr.vim	/^let g:colors_name = "zephyr"$/;"	v
g:colors_name	zpwr/.vim/colors/zmrok.vim	/^let g:colors_name="zmrok"$/;"	v
g:colors_name	zpwr/.vim/colors/znake.vim	/^let g:colors_name = "znake"$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_bold	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_bold=1$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_contrast_dark	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_contrast_dark = 'medium'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_guisp_fallback	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_guisp_fallback='NONE'$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_strings	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_improved_strings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_improved_warnings	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_improved_warnings=0$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_inverse	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_inverse=1$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_invert_indent_guides	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_invert_indent_guides=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-faff.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-faff.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-material.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-material.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let g:colorsbox_italic=0$/;"	v
g:colorsbox_italic	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let g:colorsbox_italic=1$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_termcolors	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_termcolors=256$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_undercurl	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_undercurl=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:colorsbox_underline=1$/;"	v
g:colorsbox_underline	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:colorsbox_underline=1$/;"	v
g:dark_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_blue = "0088FF"                                             " #0088FF$/;"	v
g:dark_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_grey = "626262"                                             " #626262$/;"	v
g:dark_orange	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_orange = "FF9A00"                                           " #FF9A00$/;"	v
g:dark_pink	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_pink = "FF628C"                                             " #FF628C$/;"	v
g:dark_purple	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_purple = "345FA8"                                           " #345FA8$/;"	v
g:dark_red	zpwr/.vim/colors/cobalt2.vim	/^let g:dark_red = "902020"                                              " #902020$/;"	v
g:darkburn_alternate_Error	zpwr/.vim/colors/darkburn.vim	/^      let g:darkburn_alternate_Error = 1$/;"	v
g:darkburn_alternate_Include	zpwr/.vim/colors/darkburn.vim	/^      let g:darkburn_alternate_Include = 1$/;"	v
g:darkburn_force_dark_Background	zpwr/.vim/colors/darkburn.vim	/^      let g:darkburn_force_dark_Background = 1$/;"	v
g:darkburn_high_Contrast	zpwr/.vim/colors/darkburn.vim	/^     let g:darkburn_high_Contrast = 1$/;"	v
g:darker_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:darker_blue = "0050A4"                                           " #0050A4$/;"	v
g:darker_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:darker_grey = "444444"                                           " #444444$/;"	v
g:darker_red	zpwr/.vim/colors/cobalt2.vim	/^let g:darker_red = "700009"                                            " #700009$/;"	v
g:darkest_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:darkest_blue = "0000df"                                          " #0000df$/;"	v
g:darkest_green	zpwr/.vim/colors/cobalt2.vim	/^let g:darkest_green = "2D7067"                                         " #2D7067$/;"	v
g:darkest_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:darkest_grey = "3A3A3A"                                          " #303030$/;"	v
g:did_nefertiti_code_setup	zpwr/.vim/colors/nefertiti.vim	/^    let g:did_nefertiti_code_setup = 1$/;"	v
g:dirty_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:dirty_blue = "668799"                                            " #668799$/;"	v
g:dirty_green	zpwr/.vim/colors/cobalt2.vim	/^let g:dirty_green = "70b950"                                           " #70b950$/;"	v
g:dirty_pink	zpwr/.vim/colors/cobalt2.vim	/^let g:dirty_pink = "EB939A"                                            " #EB939A$/;"	v
g:elrond#cursorline	zpwr/.vim/colors/elrond.vim	/^let g:elrond#cursorline   = get(g:, 'elrond#cursorline',         1)$/;"	v
g:elrond#cursorline16	zpwr/.vim/colors/elrond.vim	/^let g:elrond#cursorline16 = get(g:, 'elrond#cursorline16' , 'bold')$/;"	v
g:enable_bold_font	zpwr/.vim/colors/hybrid_material.vim	/^    let g:enable_bold_font = 0$/;"	v
g:enable_bold_font	zpwr/.vim/colors/hybrid_reverse.vim	/^    let g:enable_bold_font = 0$/;"	v
g:flatcolor_termcolors	zpwr/.vim/colors/flatcolor.vim	/^  let g:flatcolor_termcolors = 256$/;"	v
g:flatcolor_terminal_italics	zpwr/.vim/colors/flatcolor.vim	/^  let g:flatcolor_terminal_italics = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_override_sign_column_highlight	zpwr/.vim/colors/materialbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:green	zpwr/.vim/colors/cobalt2.vim	/^let g:green = "3AD900"                                                 " #3AD900$/;"	v
g:grey	zpwr/.vim/colors/cobalt2.vim	/^let g:grey = "808080"                                                  " #808080$/;"	v
g:greyish_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:greyish_blue = "8fbfdc"                                          " #8fbfdc$/;"	v
g:gruvbox_bold	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_italic	zpwr/.vim/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	zpwr/.vim/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	zpwr/.vim/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:hotpot_black_background	zpwr/.vim/colors/hotpot.vim	/^    let g:hotpot_black_background = 0$/;"	v
g:hybrid_use_Xresources	zpwr/.vim/colors/hybrid_material.vim	/^  let g:hybrid_use_Xresources = 0$/;"	v
g:hybrid_use_Xresources	zpwr/.vim/colors/hybrid_reverse.vim	/^  let g:hybrid_use_Xresources = 0$/;"	v
g:hybrid_use_iTerm_colors	zpwr/.vim/colors/hybrid_material.vim	/^  let g:hybrid_use_iTerm_colors = 0$/;"	v
g:hybrid_use_iTerm_colors	zpwr/.vim/colors/hybrid_reverse.vim	/^  let g:hybrid_use_iTerm_colors = 0$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_gui	zpwr/.vim/colors/materialbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_color_term	zpwr/.vim/colors/materialbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/cobalt2.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/materialbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/seoul256.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	zpwr/.vim/colors/triplejelly.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:inkpot_black_background	zpwr/.vim/colors/inkpot.vim	/^    let g:inkpot_black_background = 0$/;"	v
g:inori_colors	zpwr/.vim/colors/inori.vim	/^let g:inori_colors = {}$/;"	v
g:jellybeans_background_color	zpwr/.vim/colors/jellybeans.vim	/^  let g:jellybeans_background_color = "151515"$/;"	v
g:jellybeans_background_color_256	zpwr/.vim/colors/jellybeans.vim	/^  let g:jellybeans_background_color_256=233$/;"	v
g:kalisi_recolor_quickfixsigns	zpwr/.vim/colors/kalisi.vim	/^  let g:kalisi_recolor_quickfixsigns = 1$/;"	v
g:kolor_alternative_matchparen	zpwr/.vim/colors/kolor.vim	/^  let g:kolor_alternative_matchparen=0$/;"	v
g:kolor_bold	zpwr/.vim/colors/kolor.vim	/^  let g:kolor_bold=1$/;"	v
g:kolor_italic	zpwr/.vim/colors/kolor.vim	/^  let g:kolor_italic=1$/;"	v
g:kolor_underlined	zpwr/.vim/colors/kolor.vim	/^  let g:kolor_underlined=0$/;"	v
g:laederon_css_props_highlight	zpwr/.vim/colors/laederon.vim	/^    let g:laederon_css_props_highlight = 0$/;"	v
g:laederon_html_link_underline	zpwr/.vim/colors/laederon.vim	/^    let g:laederon_html_link_underline = 1$/;"	v
g:light_blue	zpwr/.vim/colors/cobalt2.vim	/^let g:light_blue = "80FCFF"                                            " #80FCFF$/;"	v
g:light_green	zpwr/.vim/colors/cobalt2.vim	/^let g:light_green = "88FF88"                                           " #88FF88$/;"	v
g:light_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:light_grey = "9E9E9E"                                            " #9E9E9E$/;"	v
g:light_orange	zpwr/.vim/colors/cobalt2.vim	/^let g:light_orange = "FF9D00"                                          " #FF9D00$/;"	v
g:light_pink	zpwr/.vim/colors/cobalt2.vim	/^let g:light_pink = "EE80E1"                                            " #EE80E1$/;"	v
g:light_purple	zpwr/.vim/colors/cobalt2.vim	/^let g:light_purple = "DEEBFE"                                          " #DEEBFE$/;"	v
g:light_yellow	zpwr/.vim/colors/cobalt2.vim	/^let g:light_yellow = "F2ED7F"                                          " #F2ED7F$/;"	v
g:lighter_green	zpwr/.vim/colors/cobalt2.vim	/^let g:lighter_green = "9EFF80"                                         " #9EFF80$/;"	v
g:lighter_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:lighter_grey = "BCBCBC"                                          " #BCBCBC$/;"	v
g:lightest_green	zpwr/.vim/colors/cobalt2.vim	/^let g:lightest_green = "BBFFDD"                                        " #BBFFDD$/;"	v
g:lightest_grey	zpwr/.vim/colors/cobalt2.vim	/^let g:lightest_grey = "CCCCCC"                                         " #CCCCCC$/;"	v
g:lightest_pink	zpwr/.vim/colors/cobalt2.vim	/^let g:lightest_pink = "FFA5F3"                                         " #FFA5F3$/;"	v
g:loaded_astronaut	zpwr/.vim/colors/astronaut.vim	/^let g:loaded_astronaut = "v7"$/;"	v
g:loaded_mopkai	zpwr/.vim/colors/mopkai.vim	/^let g:loaded_mopkai = 1$/;"	v
g:loaded_pathogen	zpwr/.vim/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:materialbox_bold	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_bold=1$/;"	v
g:materialbox_contrast_dark	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_contrast_dark='medium'$/;"	v
g:materialbox_contrast_light	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_contrast_light='medium'$/;"	v
g:materialbox_guisp_fallback	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_guisp_fallback='NONE'$/;"	v
g:materialbox_improved_strings	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_improved_strings=0$/;"	v
g:materialbox_improved_warnings	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_improved_warnings=0$/;"	v
g:materialbox_inverse	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_inverse=1$/;"	v
g:materialbox_invert_indent_guides	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_invert_indent_guides=0$/;"	v
g:materialbox_italic	zpwr/.vim/colors/materialbox.vim	/^    let g:materialbox_italic=0$/;"	v
g:materialbox_italic	zpwr/.vim/colors/materialbox.vim	/^    let g:materialbox_italic=1$/;"	v
g:materialbox_termcolors	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_termcolors=256$/;"	v
g:materialbox_undercurl	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_undercurl=1$/;"	v
g:materialbox_underline	zpwr/.vim/colors/materialbox.vim	/^  let g:materialbox_underline=1$/;"	v
g:nefertiti_base_brightness_level	zpwr/.vim/colors/nefertiti.vim	/^    let g:nefertiti_base_brightness_level = get(g:, 'nefertiti_base_brightness_level', s:nefertiti_default_brightness_level)$/;"	v
g:nefertiti_base_search_highlight_intensity	zpwr/.vim/colors/nefertiti.vim	/^    let g:nefertiti_base_search_highlight_intensity = get(g:, 'nefertiti_base_search_highlight_intensity', 4)$/;"	v
g:nefertiti_current_brightness_level	zpwr/.vim/colors/nefertiti.vim	/^    let g:nefertiti_current_brightness_level = g:nefertiti_base_brightness_level$/;"	v
g:nefertiti_current_search_highlight_intensity	zpwr/.vim/colors/nefertiti.vim	/^    let g:nefertiti_current_search_highlight_intensity = g:nefertiti_base_search_highlight_intensity$/;"	v
g:neomake_error_sign	zpwr/.vim/colors/cobalt2.vim	/^let g:neomake_error_sign = {$/;"	v
g:neomake_warning_sign	zpwr/.vim/colors/cobalt2.vim	/^let g:neomake_warning_sign = {$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-material.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_dark_colours	zpwr/.vim/colors/materialbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-material.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	zpwr/.vim/colors/materialbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:onedark_termcolors	zpwr/.vim/colors/onedark.vim	/^  let g:onedark_termcolors = 256$/;"	v
g:onedark_terminal_italics	zpwr/.vim/colors/onedark.vim	/^  let g:onedark_terminal_italics = 0$/;"	v
g:pale_pink	zpwr/.vim/colors/cobalt2.vim	/^let g:pale_pink = "F0A0C0"                                             " #f0a0c0$/;"	v
g:pencil_gutter_color	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_gutter_color = 0$/;"	v
g:pencil_higher_contrast_ui	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_higher_contrast_ui = 0$/;"	v
g:pencil_neutral_code_bg	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_neutral_code_bg = 0$/;"	v
g:pencil_neutral_headings	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_neutral_headings = 0$/;"	v
g:pencil_spell_undercurl	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_spell_undercurl = 1$/;"	v
g:pencil_terminal_italics	zpwr/.vim/colors/pencil.vim	/^  let g:pencil_terminal_italics = 0$/;"	v
g:phoenix_acc	zpwr/.vim/colors/phoenix.vim	/^let g:phoenix_acc = ""$/;"	v
g:phoenix_bg	zpwr/.vim/colors/phoenix.vim	/^let g:phoenix_bg = ""$/;"	v
g:pink	zpwr/.vim/colors/cobalt2.vim	/^let g:pink = "FF00FF"                                                  " #FF00FF$/;"	v
g:powerline_loaded	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^let g:powerline_loaded = 1$/;"	v
g:pride_background	zpwr/.vim/colors/pride.vim	/^  let g:pride_background=233$/;"	v
g:purple	zpwr/.vim/colors/cobalt2.vim	/^let g:purple = "967EFB"                                                " #967EFB$/;"	v
g:quickfixsigns#marks#texthl	zpwr/.vim/colors/kalisi.vim	/^       let g:quickfixsigns#marks#texthl = "QFSignsMark"$/;"	v
g:quickfixsigns#marks#texthl	zpwr/.vim/colors/kalisi.vim	/^     let g:quickfixsigns#marks#texthl = "QFSignsMark"$/;"	v
g:quickfixsigns#vcsdiff#highlight	zpwr/.vim/colors/kalisi.vim	/^       let g:quickfixsigns#vcsdiff#highlight = {'DEL': 'QFSignsDiffDelete', 'ADD': 'QFSignsDiffAdd', 'CHANGE': 'QFSignsDiffChange'}$/;"	v
g:quickfixsigns#vcsdiff#highlight	zpwr/.vim/colors/kalisi.vim	/^     let g:quickfixsigns#vcsdiff#highlight = {'DEL': 'QFSignsDiffDelete', 'ADD': 'QFSignsDiffAdd', 'CHANGE': 'QFSignsDiffChange'}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-faff.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-faff.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-faff.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-greenish.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-greenish.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-greenish.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-material.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-material.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-material.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stblue.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stblue.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stblue.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stbright.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stbright.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stbright.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-steighties.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-steighties.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-steighties.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stnight.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stnight.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/colorsbox-stnight.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/materialbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	zpwr/.vim/colors/materialbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	zpwr/.vim/colors/materialbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-material.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_ctermfgs	zpwr/.vim/colors/materialbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-material.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rainbow_guifgs	zpwr/.vim/colors/materialbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-faff.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-material.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/materialbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rbpt_colorpairs	zpwr/.vim/colors/preto.vim	/^let g:rbpt_colorpairs = [$/;"	v
g:red	zpwr/.vim/colors/cobalt2.vim	/^let g:red = "FF0000"                                                   " #FF0000$/;"	v
g:regex_boundary	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_boundary = g:light_green$/;"	v
g:regex_char_group	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_char_group = g:lighter_green$/;"	v
g:regex_escape	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_escape = g:light_green$/;"	v
g:regex_group	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_group = g:green$/;"	v
g:regex_or	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_or = g:green$/;"	v
g:regex_quantifier	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_quantifier = g:light_green$/;"	v
g:regex_string	zpwr/.vim/colors/cobalt2.vim	/^let g:regex_string = g:lightest_green$/;"	v
g:reliable_Metadata	zpwr/.vim/colors/reliable.vim	/^	let g:reliable_Metadata = {$/;"	v
g:seoul256_background	zpwr/.vim/colors/seoul256-light.vim	/^      let g:seoul256_background = s:backup$/;"	v
g:seoul256_background	zpwr/.vim/colors/seoul256-light.vim	/^      let g:seoul256_background = s:custom_bg$/;"	v
g:seoul256_current_bg	zpwr/.vim/colors/seoul256.vim	/^let g:seoul256_current_bg = [s:dark_bg, s:light_bg][s:style_idx]$/;"	v
g:seoul256_current_fg	zpwr/.vim/colors/seoul256.vim	/^let g:seoul256_current_fg = [s:dark_fg, s:light_fg][s:style_idx]$/;"	v
g:sierra_Campfire	zpwr/.vim/colors/sierra.vim	/^    let g:sierra_Campfire = 0$/;"	v
g:sierra_MatchParen_Underline	zpwr/.vim/colors/sierra.vim	/^    let g:sierra_MatchParen_Underline = 0$/;"	v
g:sierra_Midnight	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Midnight = 0$/;"	v
g:sierra_Midnight	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Midnight = 1$/;"	v
g:sierra_Midnight	zpwr/.vim/colors/sierra.vim	/^    let g:sierra_Midnight = 0$/;"	v
g:sierra_Pitch	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Pitch = 0$/;"	v
g:sierra_Pitch	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Pitch = 1$/;"	v
g:sierra_Pitch	zpwr/.vim/colors/sierra.vim	/^    let g:sierra_Pitch = 0$/;"	v
g:sierra_Twilight	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Twilight = 0$/;"	v
g:sierra_Twilight	zpwr/.vim/colors/sierra.vim	/^        let g:sierra_Twilight = 1$/;"	v
g:sierra_Twilight	zpwr/.vim/colors/sierra.vim	/^    let g:sierra_Twilight = 0$/;"	v
g:spectro_lightness	zpwr/.vim/colors/spectro.vim	/^	let g:spectro_lightness = 0$/;"	v
g:spectro_lightness	zpwr/.vim/colors/spectro.vim	/^	let g:spectro_lightness = 255$/;"	v
g:spectro_lightness	zpwr/.vim/colors/spectro.vim	/^    let g:spectro_lightness = 130$/;"	v
g:spectro_saturation	zpwr/.vim/colors/spectro.vim	/^	let g:spectro_saturation = 0$/;"	v
g:spectro_saturation	zpwr/.vim/colors/spectro.vim	/^	let g:spectro_saturation = 255$/;"	v
g:spectro_saturation	zpwr/.vim/colors/spectro.vim	/^    let g:spectro_saturation = 130$/;"	v
g:terminal_background	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_background =  "#363432"$/;"	v
g:terminal_background	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_background = "#262626"$/;"	v
g:terminal_background	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_background = "#EEEEEE"$/;"	v
g:terminal_color_0	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_0='#1b2b34' "{{{$/;"	v
g:terminal_color_0	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_0 =     "#363432"$/;"	v
g:terminal_color_0	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_0    = "#1C1C1C"$/;"	v
g:terminal_color_0	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_0 = "#101112"$/;"	v
g:terminal_color_0	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_0    = "#080808"$/;"	v
g:terminal_color_1	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_1='#ed5f67'$/;"	v
g:terminal_color_1	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_1 =     "#be503e"$/;"	v
g:terminal_color_1	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_1    = "#AF5F5F"$/;"	v
g:terminal_color_1	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_1 = "#C48D62"$/;"	v
g:terminal_color_1	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_1    = "#CC2929"$/;"	v
g:terminal_color_10	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_10='#343d46'$/;"	v
g:terminal_color_10	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_10 =    "#9ad1bc"$/;"	v
g:terminal_color_10	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_10   = "#87AF87"$/;"	v
g:terminal_color_10	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_10 = "#282C33"$/;"	v
g:terminal_color_10	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_10   = "#338033"$/;"	v
g:terminal_color_11	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_11='#4f5b66'$/;"	v
g:terminal_color_11	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_11 =    "#c4c18b"$/;"	v
g:terminal_color_11	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_11   = "#FFFFAF"$/;"	v
g:terminal_color_11	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_11 = "#383E47"$/;"	v
g:terminal_color_11	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_11   = "#F27F0C"$/;"	v
g:terminal_color_12	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_12='#a8aebb'$/;"	v
g:terminal_color_12	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_12 =    "#bad4f5"$/;"	v
g:terminal_color_12	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_12   = "#8FAFD7"$/;"	v
g:terminal_color_12	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_12 = "#798494"$/;"	v
g:terminal_color_12	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_12   = "#003BB3"$/;"	v
g:terminal_color_13	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_13='#ced4df'$/;"	v
g:terminal_color_13	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_13 =    "#e7c6be"$/;"	v
g:terminal_color_13	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_13   = "#8787AF"$/;"	v
g:terminal_color_13	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_13 = "#D8D8D8"$/;"	v
g:terminal_color_13	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_13   = "#80195E"$/;"	v
g:terminal_color_14	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_14='#ac7967'$/;"	v
g:terminal_color_14	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_14 =    "#a8c1c5"$/;"	v
g:terminal_color_14	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_14   = "#5FAFAF"$/;"	v
g:terminal_color_14	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_14 = "#CC99B3"$/;"	v
g:terminal_color_14	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_14   = "#0F9999"$/;"	v
g:terminal_color_15	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_15='#d9dfea'$/;"	v
g:terminal_color_15	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_15 =    "#c5beba"$/;"	v
g:terminal_color_15	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_15   = "#FFFFFF"$/;"	v
g:terminal_color_15	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_15 = "#FDFEFF"$/;"	v
g:terminal_color_15	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_15   = "#E4E4E4"$/;"	v
g:terminal_color_2	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_2='#9ac895'$/;"	v
g:terminal_color_2	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_2 =     "#7bb292"$/;"	v
g:terminal_color_2	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_2    = "#5F875F"$/;"	v
g:terminal_color_2	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_2 = "#99AE63"$/;"	v
g:terminal_color_2	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_2    = "#34B31B"$/;"	v
g:terminal_color_3	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_3='#fbc963'$/;"	v
g:terminal_color_3	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_3 =     "#d7ae38"$/;"	v
g:terminal_color_3	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_3    = "#87875F"$/;"	v
g:terminal_color_3	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_3 = "#D8C27A"$/;"	v
g:terminal_color_3	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_3    = "#E27E00"$/;"	v
g:terminal_color_4	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_4='#669acd'$/;"	v
g:terminal_color_4	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_4 =     "#628b97"$/;"	v
g:terminal_color_4	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_4    = "#5F87AF"$/;"	v
g:terminal_color_4	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_4 = "#7495B6"$/;"	v
g:terminal_color_4	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_4    = "#175CE6"$/;"	v
g:terminal_color_5	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_5='#c695c6'$/;"	v
g:terminal_color_5	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_5 =     "#c7a095"$/;"	v
g:terminal_color_5	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_5    = "#5F5F87"$/;"	v
g:terminal_color_5	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_5 = "#B59CD8"$/;"	v
g:terminal_color_5	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_5    = "#CC00CC"$/;"	v
g:terminal_color_6	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_6='#5fb4b4'$/;"	v
g:terminal_color_6	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_6 =     "#88a2a4"$/;"	v
g:terminal_color_6	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_6    = "#5F8787"$/;"	v
g:terminal_color_6	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_6 = "#8DC9C3"$/;"	v
g:terminal_color_6	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_6    = "#26BFBF"$/;"	v
g:terminal_color_7	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_7='#c1c6cf'$/;"	v
g:terminal_color_7	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_7 =     "#837d7a"$/;"	v
g:terminal_color_7	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_7    = "#6C6C6C"$/;"	v
g:terminal_color_7	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_7 = "#BCC5D1"$/;"	v
g:terminal_color_7	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_7    = "#FAFAFA"$/;"	v
g:terminal_color_8	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_8='#65737e'$/;"	v
g:terminal_color_8	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_8 =     "#645d59"$/;"	v
g:terminal_color_8	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_8    = "#444444"$/;"	v
g:terminal_color_8	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_8 = "#586270"$/;"	v
g:terminal_color_8	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_8    = "#585858"$/;"	v
g:terminal_color_9	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_9='#fa9257'$/;"	v
g:terminal_color_9	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_color_9 =     "#f0a4af"$/;"	v
g:terminal_color_9	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_color_9    = "#FF8700"$/;"	v
g:terminal_color_9	zpwr/.vim/colors/crayon.vim	/^let g:terminal_color_9 = "#B27B78"$/;"	v
g:terminal_color_9	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_color_9    = "#B30000"$/;"	v
g:terminal_color_background	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_background='#1b2b34'$/;"	v
g:terminal_color_foreground	zpwr/.vim/colors/OceanicNext.vim	/^let g:terminal_color_foreground='#c1c6cf' "}}}$/;"	v
g:terminal_foreground	zpwr/.vim/colors/anderson.vim	/^  let g:terminal_foreground =  "#c5beba"$/;"	v
g:terminal_foreground	zpwr/.vim/colors/apprentice.vim	/^  let g:terminal_foreground = "#BCBCBC"$/;"	v
g:terminal_foreground	zpwr/.vim/colors/lightning.vim	/^  let g:terminal_foreground = "#303030"$/;"	v
g:triplejelly_background_color	zpwr/.vim/colors/triplejelly.vim	/^  let g:triplejelly_background_color = "171719"$/;"	v
g:triplejelly_background_color_256	zpwr/.vim/colors/triplejelly.vim	/^  let g:triplejelly_background_color_256=233$/;"	v
g:triplejelly_c_call	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_call="BB95EF"$/;"	v
g:triplejelly_c_comment	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_comment="74737E"$/;"	v
g:triplejelly_c_const	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_const="34A2D9"$/;"	v
g:triplejelly_c_control	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_control="DBCD5D"$/;"	v
g:triplejelly_c_func	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_func="FB97D2"$/;"	v
g:triplejelly_c_func_name	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_func_name="FB97D2"$/;"	v
g:triplejelly_c_highlight	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_highlight="2B3448"$/;"	v
g:triplejelly_c_import	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_import="E160B4"$/;"	v
g:triplejelly_c_interp	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_interp="797BE6"$/;"	v
g:triplejelly_c_keyword	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_keyword="00D2E5"$/;"	v
g:triplejelly_c_lib_const	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_lib_const="99CC33"$/;"	v
g:triplejelly_c_lib_func	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_lib_func="BB95EF"$/;"	v
g:triplejelly_c_lib_type	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_lib_type="6E9CBE"$/;"	v
g:triplejelly_c_namespace	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_namespace="FB97D2"$/;"	v
g:triplejelly_c_number	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_number="99CC66"$/;"	v
g:triplejelly_c_operator	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_operator="3D8F9A"$/;"	v
g:triplejelly_c_quote	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_quote="FF91C5"$/;"	v
g:triplejelly_c_storage	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_storage="EC7967"$/;"	v
g:triplejelly_c_string	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_string="BBE16C"$/;"	v
g:triplejelly_c_type	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_type="FB97D2"$/;"	v
g:triplejelly_c_var	zpwr/.vim/colors/triplejelly.vim	/^let g:triplejelly_c_var="47AEE8"$/;"	v
g:triplejelly_foreground_color	zpwr/.vim/colors/triplejelly.vim	/^  let g:triplejelly_foreground_color="C6CFD2"$/;"	v
g:ubaryd_css_props_highlight	zpwr/.vim/colors/ubaryd.vim	/^    let g:ubaryd_css_props_highlight = 0$/;"	v
g:ubaryd_html_link_underline	zpwr/.vim/colors/ubaryd.vim	/^    let g:ubaryd_html_link_underline = 1$/;"	v
g:unite_cursor_line_highlight	zpwr/.vim/colors/Spink.vim	/^let g:unite_cursor_line_highlight = 'UniteLineHi'$/;"	v
g:unite_source_grep_search_word_highlight	zpwr/.vim/colors/gotham.vim	/^let g:unite_source_grep_search_word_highlight = 'UniteGrep'$/;"	v
g:unite_source_grep_search_word_highlight	zpwr/.vim/colors/gotham256.vim	/^let g:unite_source_grep_search_word_highlight = 'UniteGrep'$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-faff.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-greenish.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-material.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-stblue.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-stbright.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-steighties.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/colorsbox-stnight.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimshell_escape_colors	zpwr/.vim/colors/materialbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:white	zpwr/.vim/colors/cobalt2.vim	/^let g:white = "FFFFFF"                                                 " #FFFFFF$/;"	v
g:xterm16_blue	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_blue		= 'h002550'$/;"	v
g:xterm16_bluegreen	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_bluegreen	= 'm005031'$/;"	v
g:xterm16_darkblue	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_darkblue	= 'h000050'$/;"	v
g:xterm16_green	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_green		= 'm315000'$/;"	v
g:xterm16_grey	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_grey		= 'm474747'$/;"	v
g:xterm16_palette	zpwr/.vim/colors/xterm16.vim	/^    let g:xterm16_palette = 'Current palette (Brightness: '.s:brightness. ', Colormap: '.s:colormap.')'$/;"	v
g:xterm16_skyblue	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16_skyblue	= 'h003850'$/;"	v
g:xterm16bg_Cursor	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16bg_Cursor		= '#00ff00'$/;"	v
g:xterm16fg_Cursor	zpwr/.vim/colors/xterm16.vim	/^	    let g:xterm16fg_Cursor		= '#ffffff'$/;"	v
g:yellow	zpwr/.vim/colors/cobalt2.vim	/^let g:yellow = "FFC600"                                                " #FFC600$/;"	v
g:zenburn_alternate_Error	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_alternate_Error = 0$/;"	v
g:zenburn_alternate_Include	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_alternate_Include = 0$/;"	v
g:zenburn_alternate_Visual	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_alternate_Visual = 0$/;"	v
g:zenburn_color_also_Ignore	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_color_also_Ignore = 0$/;"	v
g:zenburn_force_dark_Background	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_force_dark_Background = 0$/;"	v
g:zenburn_high_Contrast	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_high_Contrast = 0$/;"	v
g:zenburn_unified_CursorColumn	zpwr/.vim/colors/zenburn.vim	/^    let g:zenburn_unified_CursorColumn = 0$/;"	v
g_fish_safe_chars	mantozshcomp.py	/^g_fish_safe_chars = frozenset(string.ascii_letters + string.digits +$/;"	v
g_fish_safe_chars	zpwr/scripts/mantozshcomp.py	/^g_fish_safe_chars = frozenset(string.ascii_letters + string.digits +$/;"	v
g_macro_dict	mantozshcomp.py	/^    g_macro_dict = False$/;"	v	class:Deroffer
g_macro_dict	zpwr/scripts/mantozshcomp.py	/^    g_macro_dict = False$/;"	v	class:Deroffer
g_re_esc_char	mantozshcomp.py	/^    g_re_esc_char = re.compile($/;"	v	class:Deroffer
g_re_esc_char	zpwr/scripts/mantozshcomp.py	/^    g_re_esc_char = re.compile($/;"	v	class:Deroffer
g_re_font	mantozshcomp.py	/^    g_re_font = re.compile($/;"	v	class:Deroffer
g_re_font	zpwr/scripts/mantozshcomp.py	/^    g_re_font = re.compile($/;"	v	class:Deroffer
g_re_newline_collapse	mantozshcomp.py	/^    g_re_newline_collapse = re.compile(r"\\n{3,}")$/;"	v	class:Deroffer
g_re_newline_collapse	zpwr/scripts/mantozshcomp.py	/^    g_re_newline_collapse = re.compile(r"\\n{3,}")$/;"	v	class:Deroffer
g_re_not_backslash_or_whitespace	mantozshcomp.py	/^    g_re_not_backslash_or_whitespace = re.compile($/;"	v	class:Deroffer
g_re_not_backslash_or_whitespace	zpwr/scripts/mantozshcomp.py	/^    g_re_not_backslash_or_whitespace = re.compile($/;"	v	class:Deroffer
g_re_number	mantozshcomp.py	/^    g_re_number = re.compile(r"[+-]?\\d+")  # equivalent to the number() method$/;"	v	class:Deroffer
g_re_number	zpwr/scripts/mantozshcomp.py	/^    g_re_number = re.compile(r"[+-]?\\d+")  # equivalent to the number() method$/;"	v	class:Deroffer
g_re_word	mantozshcomp.py	/^    g_re_word = re.compile(r"[a-zA-Z_]+")  # equivalent to the word() method$/;"	v	class:Deroffer
g_re_word	zpwr/scripts/mantozshcomp.py	/^    g_re_word = re.compile(r"[a-zA-Z_]+")  # equivalent to the word() method$/;"	v	class:Deroffer
g_specs	mantozshcomp.py	/^    g_specs = {$/;"	v	class:Deroffer
g_specs	zpwr/scripts/mantozshcomp.py	/^    g_specs = {$/;"	v	class:Deroffer
g_specs_specletter	mantozshcomp.py	/^    g_specs_specletter = {$/;"	v	class:Deroffer
g_specs_specletter	zpwr/scripts/mantozshcomp.py	/^    g_specs_specletter = {$/;"	v	class:Deroffer
gateway_ip	pingordie.sh	/^gateway_ip='8.8.8.8'$/;"	v
gateway_ip	pingordieBridge.sh	/^gateway_ip='8.8.8.8'$/;"	v
gateway_ip	pingordieBridgeVPN.sh	/^gateway_ip='8.8.8.8'$/;"	v
gateway_ip	zpwr/scripts/pingordie.sh	/^gateway_ip='8.8.8.8'$/;"	v
gateway_ip	zpwr/scripts/pingordieBridge.sh	/^gateway_ip='8.8.8.8'$/;"	v
gateway_ip	zpwr/scripts/pingordieBridgeVPN.sh	/^gateway_ip='8.8.8.8'$/;"	v
gc	zpwr/.tmux/powerline/lib/debug.py	/^import gc$/;"	i
gcl	zpwr/.shell_aliases_functions.sh	/^gcl() {$/;"	f
gen_components_spec	zpwr/.tmux/powerline/lint/__init__.py	/^gen_components_spec = (lambda *components: Spec().list(Spec().type(unicode).oneof(set(components))))$/;"	v
gen_display_condition	zpwr/.tmux/powerline/segment.py	/^	def gen_display_condition(segment):$/;"	f	function:gen_segment_getter
gen_files_react	boiler_gen.py	/^def gen_files_react(start):$/;"	f
gen_files_react	zpwr/scripts/boiler_gen.py	/^def gen_files_react(start):$/;"	f
gen_files_spring	boiler_gen.py	/^def gen_files_spring(start):$/;"	f
gen_files_spring	zpwr/scripts/boiler_gen.py	/^def gen_files_spring(start):$/;"	f
gen_getnewargs	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^def gen_getnewargs(cls):$/;"	f
gen_init	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^def gen_init(cls):$/;"	f
gen_marked_value	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from powerline.lint.markedjson.markedvalue import gen_marked_value$/;"	i
gen_marked_value	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^def gen_marked_value(value, mark, use_special_classes=True):$/;"	f
gen_module_attr_getter	zpwr/.tmux/powerline/__init__.py	/^def gen_module_attr_getter(pl, import_paths, imported_modules):$/;"	f
gen_new	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^def gen_new(cls):$/;"	f
gen_segment_getter	zpwr/.tmux/powerline/segment.py	/^def gen_segment_getter(pl, ext, common_config, theme_configs, default_module, get_module_attr, top_theme):$/;"	f
gen_segment_getter	zpwr/.tmux/powerline/theme.py	/^from powerline.segment import gen_segment_getter, process_segment, get_fallback_segment$/;"	i
generate_argument_list	help2comp.py	/^def generate_argument_list(options):$/;"	f
generate_argument_list	zpwr/scripts/help2comp.py	/^def generate_argument_list(options):$/;"	f
generate_completion_function	help2comp.py	/^def generate_completion_function(options, program_name):$/;"	f
generate_completion_function	zpwr/scripts/help2comp.py	/^def generate_completion_function(options, program_name):$/;"	f
generate_config_finder	zpwr/.tmux/powerline/__init__.py	/^def generate_config_finder(get_config_paths=get_config_paths):$/;"	f
generate_config_finder	zpwr/.tmux/powerline/bindings/config.py	/^from powerline import generate_config_finder, load_config, create_logger, finish_common_config$/;"	i
generate_config_finder	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline import generate_config_finder, get_config_paths, load_config$/;"	i
generate_directories	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def generate_directories(path):$/;"	f
generate_json_config_loader	zpwr/.tmux/powerline/lint/__init__.py	/^def generate_json_config_loader(lhadproblem):$/;"	f
generic_keys	zpwr/.tmux/powerline/lint/checks.py	/^generic_keys = set(($/;"	v
get	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def get(self, key, default=None):$/;"	m	class:.WindowVars
get	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def get(key, default=None):$/;"	m	class:VimEnviron
get	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def get(key, default=None):$/;"	m	class:Environment
get	zpwr/.tmux/powerline/segment.py	/^	def get(segment, side):$/;"	f	function:gen_segment_getter
getCopyCommand	crossOSCommands.sh	/^getCopyCommand(){$/;"	f
getCopyCommand	zpwr/scripts/crossOSCommands.sh	/^getCopyCommand(){$/;"	f
getInitialCommit	gitgo.sh	/^getInitialCommit() {$/;"	f
getInitialCommit	zpwr/scripts/gitgo.sh	/^getInitialCommit() {$/;"	f
getOpenCommand	crossOSCommands.sh	/^getOpenCommand(){$/;"	f
getOpenCommand	zpwr/.tmux/google.sh	/^getOpenCommand(){$/;"	f
getOpenCommand	zpwr/scripts/crossOSCommands.sh	/^getOpenCommand(){$/;"	f
getPasteCommand	crossOSCommands.sh	/^getPasteCommand(){$/;"	f
getPasteCommand	zpwr/scripts/crossOSCommands.sh	/^getPasteCommand(){$/;"	f
getRemoteDetails	gitgo.sh	/^getRemoteDetails() {$/;"	f
getRemoteDetails	zpwr/scripts/gitgo.sh	/^getRemoteDetails() {$/;"	f
get_active_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^get_active_window_index() {$/;"	f
get_all_possible_functions	zpwr/.tmux/powerline/lint/checks.py	/^def get_all_possible_functions(data, context, echoerr):$/;"	f
get_alternate_window_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^get_alternate_window_index() {$/;"	f
get_arg	mantozshcomp.py	/^    def get_arg(self, optionName):$/;"	m	class:ManParser
get_arg	zpwr/scripts/mantozshcomp.py	/^    def get_arg(self, optionName):$/;"	m	class:ManParser
get_argparser	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from powerline.commands.lemonbar import get_argparser$/;"	i
get_argparser	zpwr/.tmux/powerline/commands/config.py	/^def get_argparser(ArgumentParser=ConfigArgParser):$/;"	f
get_argparser	zpwr/.tmux/powerline/commands/daemon.py	/^def get_argparser(ArgumentParser=argparse.ArgumentParser):$/;"	f
get_argparser	zpwr/.tmux/powerline/commands/lemonbar.py	/^def get_argparser(ArgumentParser=argparse.ArgumentParser):$/;"	f
get_argparser	zpwr/.tmux/powerline/commands/lint.py	/^def get_argparser(ArgumentParser=argparse.ArgumentParser):$/;"	f
get_argparser	zpwr/.tmux/powerline/commands/main.py	/^def get_argparser(ArgumentParser=argparse.ArgumentParser):$/;"	f
get_attr_func	zpwr/.tmux/powerline/segment.py	/^def get_attr_func(contents_func, key, args, is_space_func=False):$/;"	f
get_attrs_flag	zpwr/.tmux/powerline/colorscheme.py	/^def get_attrs_flag(attrs):$/;"	f
get_attrs_for_token	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def get_attrs_for_token(self, token):$/;"	m	class:PowerlinePromptStyle
get_branch_name	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def get_branch_name(directory, config_file, get_func, create_watcher):$/;"	f
get_branch_name	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_branch_name	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_branch_name	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_buffer	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def get_buffer(number):$/;"	f
get_charge_color_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^get_charge_color_settings() {$/;"	f
get_charge_color_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^get_charge_color_settings() {$/;"	f
get_client_id	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def get_client_id(self, segment_info):$/;"	m	class:IPythonPygmentsRenderer
get_client_id	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def get_client_id(self, segment_info):$/;"	m	class:PromptRenderer
get_color_charge_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^get_color_charge_settings() {$/;"	f
get_color_status_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^get_color_status_settings() {$/;"	f
get_config_paths	zpwr/.tmux/powerline/__init__.py	/^	def get_config_paths():$/;"	m	class:Powerline
get_config_paths	zpwr/.tmux/powerline/__init__.py	/^def get_config_paths():$/;"	f
get_config_paths	zpwr/.tmux/powerline/ipython.py	/^	def get_config_paths(self):$/;"	m	class:IPythonPowerline
get_config_paths	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline import generate_config_finder, get_config_paths, load_config$/;"	i
get_config_paths	zpwr/.tmux/powerline/pdb.py	/^	def get_config_paths(self):$/;"	m	class:PDBPowerline
get_config_paths	zpwr/.tmux/powerline/shell.py	/^	def get_config_paths(self):$/;"	m	class:ShellPowerline
get_config_paths	zpwr/.tmux/powerline/vim.py	/^	def get_config_paths(self):$/;"	m	class:VimPowerline
get_connected_xrandr_outputs	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from powerline.bindings.wm import get_connected_xrandr_outputs$/;"	i
get_connected_xrandr_outputs	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^def get_connected_xrandr_outputs(pl):$/;"	f
get_connected_xrandr_outputs	zpwr/.tmux/powerline/listers/i3wm.py	/^from powerline.bindings.wm import get_i3_connection, get_connected_xrandr_outputs$/;"	i
get_data	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def get_data(self):$/;"	m	class:BaseConstructor
get_default_pycmd	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	from powerline.vim import get_default_pycmd, pycmd$/;"	i
get_default_pycmd	zpwr/.tmux/powerline/vim.py	/^def get_default_pycmd():$/;"	f
get_default_theme	zpwr/.tmux/powerline/__init__.py	/^def get_default_theme(is_unicode=True):$/;"	f
get_digits_from_string	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_digits_from_string	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_digits_from_string	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_directory	zpwr/.tmux/powerline/segments/common/vcs.py	/^	def get_directory(segment_info):$/;"	m	class:BranchSegment
get_directory	zpwr/.tmux/powerline/segments/common/vcs.py	/^	def get_directory(segment_info):$/;"	m	class:StashSegment
get_directory	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	def get_directory(segment_info):$/;"	m	class:VimBranchSegment
get_directory	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	def get_directory(segment_info):$/;"	m	class:VimStashSegment
get_divider	zpwr/.tmux/powerline/theme.py	/^	def get_divider(self, side='left', type='soft'):$/;"	m	class:Theme
get_encoding	zpwr/.tmux/powerline/__init__.py	/^	get_encoding = staticmethod(get_preferred_output_encoding)$/;"	v	class:Powerline
get_encoding	zpwr/.tmux/powerline/lemonbar.py	/^	get_encoding = staticmethod(lambda: 'utf-8')$/;"	v	class:LemonbarPowerline
get_encoding	zpwr/.tmux/powerline/vim.py	/^	get_encoding = staticmethod(get_vim_encoding)$/;"	v	class:VimPowerline
get_event	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def get_event(self):$/;"	m	class:Parser
get_fallback_create_watcher	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def get_fallback_create_watcher():$/;"	f
get_fallback_logger	zpwr/.tmux/powerline/__init__.py	/^def get_fallback_logger(stream=None):$/;"	f
get_fallback_logger	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	from powerline import get_fallback_logger$/;"	i
get_fallback_segment	zpwr/.tmux/powerline/segment.py	/^get_fallback_segment = {$/;"	v
get_fallback_segment	zpwr/.tmux/powerline/theme.py	/^from powerline.segment import gen_segment_getter, process_segment, get_fallback_segment$/;"	i
get_file_status	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def get_file_status(directory, dirstate_file, file_path, ignore_file_name, get_func, create_watcher, extra_ignore_files=()):$/;"	f
get_file_status	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_file_status	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_file_status	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from powerline.lib.vcs import get_branch_name, get_file_status$/;"	i
get_frame_work	boiler_gen.py	/^def get_frame_work(user_framework):$/;"	f
get_frame_work	zpwr/scripts/boiler_gen.py	/^def get_frame_work(user_framework):$/;"	f
get_fullscreen_option_value	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^get_fullscreen_option_value() {$/;"	f
get_function	zpwr/.tmux/powerline/segment.py	/^def get_function(data, segment):$/;"	f
get_function_strings	zpwr/.tmux/powerline/lint/checks.py	/^def get_function_strings(function_name, context, ext):$/;"	f
get_gradient	zpwr/.tmux/powerline/colorscheme.py	/^	def get_gradient(self, gradient, gradient_level):$/;"	m	class:Colorscheme
get_group_props	zpwr/.tmux/powerline/colorscheme.py	/^	def get_group_props(self, mode, trans, group, translate_colors=True):$/;"	m	class:Colorscheme
get_grouped_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^get_grouped_sessions() {$/;"	f
get_highlighting	zpwr/.tmux/powerline/bindings/config.py	/^	def get_highlighting(group):$/;"	f	function:init_tmux_environment
get_highlighting	zpwr/.tmux/powerline/colorscheme.py	/^	def get_highlighting(self, groups, mode, gradient_level=None):$/;"	m	class:Colorscheme
get_i3_connection	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from powerline.bindings.wm import get_i3_connection, i3_subscribe$/;"	i
get_i3_connection	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^def get_i3_connection():$/;"	f
get_i3_connection	zpwr/.tmux/powerline/listers/i3wm.py	/^from powerline.bindings.wm import get_i3_connection, get_connected_xrandr_outputs$/;"	i
get_i3_connection	zpwr/.tmux/powerline/segments/i3wm.py	/^from powerline.bindings.wm import get_i3_connection$/;"	i
get_icon_charge_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^get_icon_charge_settings() {$/;"	f
get_icon_status_charged_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^get_icon_status_charged_default() {$/;"	f
get_icon_status_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^get_icon_status_settings() {$/;"	f
get_interval	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^get_interval() {$/;"	f
get_ipython	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from IPython.ipapi import get as get_ipython$/;"	i
get_iterm_or_teminal_option_value	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^get_iterm_or_teminal_option_value() {$/;"	f
get_key	zpwr/.tmux/powerline/segment.py	/^	def get_key(merge, segment, module, function_name, name, key, default=None):$/;"	f	function:gen_segment_getter
get_line_number	zpwr/.tmux/powerline/theme.py	/^	def get_line_number(self):$/;"	m	class:Theme
get_local_themes	zpwr/.tmux/powerline/__init__.py	/^	def get_local_themes(local_themes):$/;"	m	class:Powerline
get_local_themes	zpwr/.tmux/powerline/ipython.py	/^	def get_local_themes(self, local_themes):$/;"	m	class:IPythonPowerline
get_local_themes	zpwr/.tmux/powerline/lemonbar.py	/^	def get_local_themes(self, local_themes):$/;"	m	class:LemonbarPowerline
get_local_themes	zpwr/.tmux/powerline/shell.py	/^	def get_local_themes(self, local_themes):$/;"	m	class:ShellPowerline
get_local_themes	zpwr/.tmux/powerline/vim.py	/^	def get_local_themes(self, local_themes):$/;"	m	class:VimPowerline
get_main_config	zpwr/.tmux/powerline/bindings/config.py	/^def get_main_config(args):$/;"	f
get_mark	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def get_mark(self):$/;"	m	class:Reader
get_matched_theme	zpwr/.tmux/powerline/renderers/vim.py	/^	def get_matched_theme(self, match):$/;"	m	class:VimRenderer
get_matcher	zpwr/.tmux/powerline/vim.py	/^	def get_matcher(self, match_name):$/;"	m	class:VimPowerline
get_module_attr	zpwr/.tmux/powerline/__init__.py	/^	def get_module_attr(module, attr, prefix='powerline'):$/;"	f	function:gen_module_attr_getter
get_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def get_node(self):$/;"	m	class:Composer
get_one_segment_function	zpwr/.tmux/powerline/lint/checks.py	/^def get_one_segment_function(data, context, echoerr):$/;"	f
get_output	mantozshcomp.py	/^    def get_output(self):$/;"	m	class:Deroffer
get_output	zpwr/scripts/mantozshcomp.py	/^    def get_output(self):$/;"	m	class:Deroffer
get_paths_from_man_locations	mantozshcomp.py	/^def get_paths_from_man_locations():$/;"	f
get_paths_from_man_locations	zpwr/scripts/mantozshcomp.py	/^def get_paths_from_man_locations():$/;"	f
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:ClementinePlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:CmusPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:ITunesPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:MocPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:PlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:RDIOPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:RhythmboxPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:SpotifyAppleScriptPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl):$/;"	m	class:SpotifyDbusPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	def get_player_status(self, pl, host='localhost', password=None, port=6600):$/;"	m	class:MpdPlayerSegment
get_player_status	zpwr/.tmux/powerline/segments/common/players.py	/^	get_player_status = staticmethod(_get_dbus_player_status)$/;"	v	class:DbusPlayerSegment
get_preferred_arguments_encoding	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.encoding import get_preferred_arguments_encoding$/;"	i
get_preferred_arguments_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_arguments_encoding():$/;"	f
get_preferred_environment_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_environment_encoding():$/;"	f
get_preferred_file_contents_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_file_contents_encoding():$/;"	f
get_preferred_file_contents_encoding	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from powerline.lib.encoding import get_preferred_file_contents_encoding$/;"	i
get_preferred_file_contents_encoding	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from powerline.lib.encoding import get_preferred_file_contents_encoding$/;"	i
get_preferred_file_name_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_file_name_encoding():$/;"	f
get_preferred_file_name_encoding	zpwr/.tmux/powerline/lib/inotify.py	/^from powerline.lib.encoding import get_preferred_file_name_encoding$/;"	i
get_preferred_file_name_encoding	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.encoding import (get_preferred_file_name_encoding,$/;"	i
get_preferred_file_name_encoding	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from powerline.lib.encoding import get_preferred_file_name_encoding$/;"	i
get_preferred_input_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_input_encoding():$/;"	f
get_preferred_input_encoding	zpwr/.tmux/powerline/lib/shell.py	/^from powerline.lib.encoding import get_preferred_input_encoding, get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.encoding import get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.lib.encoding import get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from powerline.lib.encoding import get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.encoding import (get_preferred_output_encoding,$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/lib/encoding.py	/^def get_preferred_output_encoding():$/;"	f
get_preferred_output_encoding	zpwr/.tmux/powerline/lib/shell.py	/^from powerline.lib.encoding import get_preferred_input_encoding, get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/lib/unicode.py	/^from powerline.lib.encoding import get_preferred_output_encoding$/;"	i
get_preferred_output_encoding	zpwr/.tmux/powerline/lint/markedjson/error.py	/^from powerline.lib.encoding import get_preferred_output_encoding$/;"	i
get_remain_settings	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^get_remain_settings() {$/;"	f
get_request_url	zpwr/.tmux/powerline/segments/common/wthr.py	/^	def get_request_url(self, location_query):$/;"	m	class:WeatherSegment
get_segment_info	zpwr/.tmux/powerline/renderer.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:Renderer
get_segment_info	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:IPythonRenderer
get_segment_info	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:IPythonPygmentsRenderer
get_segment_info	zpwr/.tmux/powerline/renderers/pdb.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:PDBRenderer
get_segment_info	zpwr/.tmux/powerline/renderers/tmux.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:TmuxRenderer
get_segment_info	zpwr/.tmux/powerline/renderers/vim.py	/^	def get_segment_info(self, segment_info, mode):$/;"	m	class:VimRenderer
get_segment_key	zpwr/.tmux/powerline/segment.py	/^def get_segment_key(merge, *args, **kwargs):$/;"	f
get_segment_selector	zpwr/.tmux/powerline/segment.py	/^	def get_segment_selector(segment, selector_type):$/;"	f	function:gen_segment_getter
get_segments	zpwr/.tmux/powerline/theme.py	/^	def get_segments(self, side=None, line=0, segment_info=None, mode=None):$/;"	m	class:Theme
get_selector	zpwr/.tmux/powerline/segment.py	/^	def get_selector(function_name):$/;"	f	function:gen_segment_getter
get_shortened_path	zpwr/.tmux/powerline/segments/common/env.py	/^	def get_shortened_path(self, pl, segment_info, shorten_home=True, **kwargs):$/;"	m	class:CwdSegment
get_shortened_path	zpwr/.tmux/powerline/segments/shell.py	/^	def get_shortened_path(self, pl, segment_info, use_shortened_path=True, **kwargs):$/;"	m	class:ShellCwdSegment
get_single_data	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	def get_single_data(self):$/;"	m	class:BaseConstructor
get_single_node	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^	def get_single_node(self):$/;"	m	class:Composer
get_snippet	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def get_snippet(self, indent=4, max_length=75):$/;"	m	class:Mark
get_spaces	zpwr/.tmux/powerline/theme.py	/^	def get_spaces(self):$/;"	m	class:Theme
get_string	zpwr/.tmux/powerline/segment.py	/^def get_string(data, segment):$/;"	f
get_theme	zpwr/.tmux/powerline/renderer.py	/^	def get_theme(self, matcher_info):$/;"	m	class:Renderer
get_theme	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^	def get_theme(self, matcher_info):$/;"	m	class:IPythonRenderer
get_theme	zpwr/.tmux/powerline/renderers/lemonbar.py	/^	def get_theme(self, matcher_info):$/;"	m	class:LemonbarRenderer
get_theme	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def get_theme(self, matcher_info):$/;"	m	class:ShellRenderer
get_theme	zpwr/.tmux/powerline/renderers/vim.py	/^	def get_theme(self, matcher_info):$/;"	m	class:VimRenderer
get_tmux_configs	zpwr/.tmux/powerline/bindings/config.py	/^def get_tmux_configs(version):$/;"	f
get_tmux_copy_mode	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^get_tmux_copy_mode() {$/;"	f
get_tmux_executable_name	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def get_tmux_executable_name():$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	zpwr/.tmux/plugins/tpm/tpm	/^get_tmux_option() {$/;"	f
get_tmux_output	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def get_tmux_output(pl, *args):$/;"	f
get_tmux_output	zpwr/.tmux/powerline/segments/tmux.py	/^from powerline.bindings.tmux import get_tmux_output$/;"	i
get_tmux_version	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.bindings.tmux import (TmuxVersionInfo, run_tmux_command, set_tmux_environment, get_tmux_version,$/;"	i
get_tmux_version	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def get_tmux_version(pl):$/;"	f
get_token	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def get_token(self):$/;"	m	class:Scanner
get_token_to_attributes_dict	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def get_token_to_attributes_dict(self):$/;"	m	class:PowerlinePromptStyle
get_unicode_writer	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from powerline.lib.encoding import get_unicode_writer$/;"	i
get_unicode_writer	zpwr/.tmux/powerline/lib/encoding.py	/^def get_unicode_writer(stream=sys.stdout, encoding=None, errors='replace'):$/;"	f
get_update_value	zpwr/.tmux/powerline/lib/threaded.py	/^	def get_update_value(self, update=False):$/;"	m	class:ThreadedSegment
get_var_config	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def get_var_config(var):$/;"	f
get_vim_encoding	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def get_vim_encoding():$/;"	f
get_vim_encoding	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def get_vim_encoding():$/;"	f
get_vim_encoding	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getoption, environ, current_tabpage, get_vim_encoding$/;"	i
get_vim_encoding	zpwr/.tmux/powerline/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getvar, get_vim_encoding, python_to_vim$/;"	i
get_watcher	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def get_watcher(self, path, ignore_event):$/;"	m	class:TreeWatcher
getargspec	zpwr/.tmux/powerline/lint/inspect.py	/^from inspect import ArgSpec, getargspec$/;"	i
getbufvar	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def getbufvar(*args):$/;"	f
getbufvar	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.bindings.vim import (vim_get_func, getbufvar, vim_getbufoption,$/;"	i
getcolor	zpwr/.vim/colors/xterm16.vim	/^function s:getcolor( globvar, cname)$/;"	f
getconfigargspec	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.inspect import getconfigargspec$/;"	i
getconfigargspec	zpwr/.tmux/powerline/lint/inspect.py	/^def getconfigargspec(obj):$/;"	f
getopt	mantozshcomp.py	/^import getopt$/;"	i
getopt	zpwr/scripts/mantozshcomp.py	/^import getopt$/;"	i
getrc	zpwr/.shell_aliases_functions.sh	/^getrc(){$/;"	f
getrcdev	zpwr/.shell_aliases_functions.sh	/^getrcdev(){$/;"	f
getuid	zpwr/.tmux/powerline/segments/common/env.py	/^			from os import geteuid as getuid$/;"	i
getuid	zpwr/.tmux/powerline/segments/common/env.py	/^			from os import getuid$/;"	i
git	zpwr/.tmux/powerline/lib/vcs/git.py	/^	import pygit2 as git$/;"	i
gitCheckoutRebasePush	zpwr/.shell_aliases_functions.sh	/^gitCheckoutRebasePush(){$/;"	f
gitCommitAndPush	zpwr/.shell_aliases_functions.sh	/^gitCommitAndPush(){$/;"	f
gitPull	gitgo.sh	/^gitPull() {$/;"	f
gitPull	zpwr/scripts/gitgo.sh	/^gitPull() {$/;"	f
gitPush	gitgo.sh	/^gitPush() {$/;"	f
gitPush	zpwr/scripts/gitgo.sh	/^gitPush() {$/;"	f
gitRepoUpdater	rpiSoftwareUpdater.sh	/^gitRepoUpdater() {$/;"	f
gitRepoUpdater	updater.sh	/^gitRepoUpdater() {$/;"	f
gitRepoUpdater	updaterNoPip.sh	/^gitRepoUpdater() {$/;"	f
gitRepoUpdater	zpwr/scripts/rpiSoftwareUpdater.sh	/^gitRepoUpdater() {$/;"	f
gitRepoUpdater	zpwr/scripts/updater.sh	/^gitRepoUpdater() {$/;"	f
gitRepoUpdater	zpwr/scripts/updaterNoPip.sh	/^gitRepoUpdater() {$/;"	f
git_directory	zpwr/.tmux/powerline/lib/vcs/git.py	/^def git_directory(directory):$/;"	f
git_name	zpwr/.shell_aliases_functions.sh	/^    git_name="${1##*\/}"$/;"	v
gittersdev	remoteRepoMonitorDaemon.sh	/^gittersdev() {$/;"	f
gittersdev	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^gittersdev() {$/;"	f
gittersmaster	remoteRepoMonitorDaemon.sh	/^gittersmaster() {$/;"	f
gittersmaster	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^gittersmaster() {$/;"	f
go_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:go_syntax_and_highlights()$/;"	f
go_to_the_beginning_of_current_line	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^go_to_the_beginning_of_current_line() {$/;"	f
go_to_the_end_of_current_line	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^go_to_the_end_of_current_line() {$/;"	f
goclean	zpwr/.shell_aliases_functions.sh	/^goclean() {$/;"	f
gradients	zpwr/.tmux/powerline/lint/__init__.py	/^	gradients=Spec().unknown_spec($/;"	v
gray	zpwr/.vim/colors/spectro.vim	/^let gray   = "#dcdccc"$/;"	v
greenSea	zpwr/.vim/colors/rakr-light.vim	/^  let greenSea    = "16a085"$/;"	v
greetings	zpwr/motd.sh	/^greetings="$borderBar$(color $greetingsColor "$(center "Welcome back, $me!")")$borderBar\\n"$/;"	v
greetings	zpwr/motd.sh	/^greetings="$greetings$borderBar$(color $greetingsColor "$(center "$(date +"%A, %d %B %Y, %T")")")$borderBar"$/;"	v
greetingsColor	zpwr/motd.sh	/^greetingsColor=36$/;"	v
grey_color	zpwr/.vim/colors/candyman.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/cobalt2.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/coda.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/desert256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/jellybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/lizard256.vim	/^fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/simple256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/triplejelly.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>grey_color(n)$/;"	f
grey_color	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>grey_color(n)$/;"	f
grey_colour	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/PaperColor.vim	/^fun s:grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/antares.vim	/^  fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/evening.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/heroku.vim	/^  fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>grey_colour(n)$/;"	f
grey_colour	zpwr/.vim/colors/znake.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_level	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/PaperColor.vim	/^fun s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/antares.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/candyman.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/cobalt2.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/coda.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/desert256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/evening.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/heroku.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/jellybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/lizard256.vim	/^fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/simple256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/triplejelly.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>grey_level(n)$/;"	f
grey_level	zpwr/.vim/colors/znake.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_number	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/PaperColor.vim	/^fun s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/antares.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/candyman.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/cobalt2.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/coda.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/desert256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/evening.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/heroku.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/jellybeans.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/lizard256.vim	/^fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/simple256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/triplejelly.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>grey_number(x)$/;"	f
grey_number	zpwr/.vim/colors/znake.vim	/^	fun <SID>grey_number(x)$/;"	f
groff_replace_escapes	mantozshcomp.py	/^    def groff_replace_escapes(self, line):$/;"	m	class:TypeDarwinManParser
groff_replace_escapes	zpwr/scripts/mantozshcomp.py	/^    def groff_replace_escapes(self, line):$/;"	m	class:TypeDarwinManParser
group	zpwr/.shell_aliases_functions.sh	/^        group=$(id -gn)$/;"	v
group_name_spec	zpwr/.tmux/powerline/lint/__init__.py	/^group_name_spec = Spec().ident().copy$/;"	v
group_spec	zpwr/.tmux/powerline/lint/__init__.py	/^group_spec = Spec().either(Spec($/;"	v
grouped_session	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local grouped_session="$1"$/;"	v
grouped_sessions_dump	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local grouped_sessions_dump="$1"$/;"	v
grouped_sessions_dump	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local grouped_sessions_dump="$(dump_grouped_sessions)"$/;"	v
grouped_sessions_format	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^grouped_sessions_format() {$/;"	f
groups	zpwr/.tmux/powerline/lint/__init__.py	/^	groups=Spec().unknown_spec($/;"	v
groups	zpwr/.tmux/powerline/lint/__init__.py	/^	groups=groups_spec(),$/;"	v
groups_spec	zpwr/.tmux/powerline/lint/__init__.py	/^groups_spec = Spec().unknown_spec($/;"	v
gsdc	zpwr/.shell_aliases_functions.sh	/^gsdc(){$/;"	f
guess	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def guess(path, create_watcher):$/;"	f
guess	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.lib.vcs import guess, tree_status$/;"	i
guess	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib.vcs import guess$/;"	i
gui	zpwr/.vim/colors/OceanicNext.vim	/^fun s:gui(color) "{{{$/;"	f
gui	zpwr/.vim/colors/base16-ateliercave.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierdune.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierestuary.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierforest.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierheath.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierlakeside.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierplateau.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-ateliersavanna.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-atelierseaside.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/base16-railscasts.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-dark.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkcave.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkdesert.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkearth.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkforest.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkheath.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darklake.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkmeadow.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkpark.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkpool.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darksea.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/duotone-darkspace.vim	/^fun s:gui(color)$/;"	f
gui	zpwr/.vim/colors/material-theme.vim	/^fun s:gui(color)$/;"	f
guicolor	zpwr/.vim/colors/xterm16.vim	/^function s:guicolor( r, g, b)$/;"	f
guilevel	zpwr/.vim/colors/xterm16.vim	/^function s:guilevel( n)$/;"	f
guisetcolor	zpwr/.vim/colors/calmar256-light.vim	/^function! s:guisetcolor(colarg)$/;"	f
gundo	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^def gundo(matcher_info):$/;"	f
gundo_preview	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^def gundo_preview(matcher_info):$/;"	f
gzip	mantozshcomp.py	/^import gzip$/;"	i
gzip	zpwr/scripts/mantozshcomp.py	/^import gzip$/;"	i
h	zpwr/.vim/colors/eva.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/flatcolor.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/flatui.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/hemisu.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/onedark.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/pencil.vim	/^function! s:h(group, style)$/;"	f
h	zpwr/.vim/colors/scooby.vim	/^function! s:h(group, style)$/;"	f
handle_error	zpwr/.tmux/powerline/lib/inotify.py	/^	def handle_error(self):$/;"	m	class:INotify
handle_tmux_automatic_start	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^handle_tmux_automatic_start() {$/;"	f
hard	zpwr/.tmux/powerline/lint/__init__.py	/^	hard=divider_spec(),$/;"	v
has_prompt_manager	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	has_prompt_manager = False$/;"	v
has_prompt_manager	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	has_prompt_manager = True$/;"	v
havemarks	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.selfcheck import havemarks$/;"	i
havemarks	zpwr/.tmux/powerline/lint/context.py	/^from powerline.lint.selfcheck import havemarks$/;"	i
havemarks	zpwr/.tmux/powerline/lint/imp.py	/^from powerline.lint.selfcheck import havemarks$/;"	i
havemarks	zpwr/.tmux/powerline/lint/selfcheck.py	/^def havemarks(*args, **kwargs):$/;"	f
havemarks	zpwr/.tmux/powerline/lint/spec.py	/^from powerline.lint.selfcheck import havemarks$/;"	i
hc	zpwr/.shell_aliases_functions.sh	/^hc(){$/;"	f
hd	zpwr/.shell_aliases_functions.sh	/^hd(){$/;"	f
header	zpwr/motd.sh	/^header="$borderTopLine\\n$borderEmptyLine\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerLeafColor "          .~~.   .~~.                                                         ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerLeafColor "         '. \\ ' ' \/ .'                                                        ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "              '~'                                                             ")$borderBar"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "          '~ .~~~. ~'                                                         ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "          .~ .~~~..~.                      _                          _       ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "         (  : '~' :  )                                                        ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "         : .~.'~'.~. :     ___ ___ ___ ___| |_ ___ ___ ___ _ _    ___|_|      ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "        ~ (   ) (   ) ~   |  _| .'|_ -| . | . | -_|  _|  _| | |  | . | |      ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "        ~ .~ (   ) ~. ~               |_|                 |___|  |_|          ")$borderBar\\n"$/;"	v
header	zpwr/motd.sh	/^header="$header$borderBar$(color $headerRaspberryColor "       ( : '~'.~.'~' : )  |_| |__,|___|  _|___|___|_| |_| |_  |  |  _|_|      ")$borderBar\\n"$/;"	v
headerLeafColor	zpwr/motd.sh	/^headerLeafColor=32$/;"	v
headerRaspberryColor	zpwr/motd.sh	/^headerRaspberryColor=31$/;"	v
headerSTRING	templater.sh	/^    headerSTRING=$($/;"	v
headerSTRING	zpwr/scripts/templater.sh	/^    headerSTRING=$($/;"	v
help	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^		help='Subscribe for i3 events.'$/;"	v
help	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^def help(matcher_info):$/;"	f
hexdigits	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from string import hexdigits$/;"	i
hexdigits_set	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^hexdigits_set = set(hexdigits)$/;"	v
hglib	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^import hglib$/;"	i
hi	zpwr/.vim/colors/OceanicNext.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)" {{{$/;"	f
hi	zpwr/.vim/colors/base16-ateliercave.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierdune.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierestuary.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierforest.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierheath.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierlakeside.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierplateau.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-ateliersavanna.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-atelierseaside.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/base16-railscasts.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-dark.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkcave.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkdesert.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkearth.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkforest.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkheath.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darklake.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkmeadow.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkpark.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkpool.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darksea.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/duotone-darkspace.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/elda.vim	/^function! s:hi(item, fg, bg, style)$/;"	f
hi	zpwr/.vim/colors/material-theme.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/mod8.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	zpwr/.vim/colors/seoul256.vim	/^function! s:hi(item, fg, bg)$/;"	f
hi	zpwr/.vim/colors/xterm16.vim	/^function s:hi( group, attr, fg, bg, ...)$/;"	f
hibg	zpwr/.vim/colors/bocau.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hibg	zpwr/.vim/colors/jiks.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hibg	zpwr/.vim/colors/vividchalk.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hifg	zpwr/.vim/colors/bocau.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
hifg	zpwr/.vim/colors/jiks.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
hifg	zpwr/.vim/colors/vividchalk.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^highlight() {$/;"	f
highlight	zpwr/.vim/colors/coffee.vim	/^function! s:highlight(group, fg, bg, attr)$/;"	f
highlight	zpwr/.vim/colors/inori.vim	/^function! s:highlight(group, fg, bg, attr)$/;"	f
highlight_group_spec	zpwr/.tmux/powerline/lint/checks.py	/^highlight_group_spec = Spec().ident().copy$/;"	v
highlight_groups	zpwr/.tmux/powerline/lint/__init__.py	/^	highlight_groups=Spec().list($/;"	v
highlight_keys	zpwr/.tmux/powerline/lint/checks.py	/^highlight_keys = set(('highlight_groups', 'name'))$/;"	v
history_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^				local history_file="$(resurrect_history_file "$pane_id" "$pane_command")"$/;"	v
history_r	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local history_r='fc -R'$/;"	v
history_r	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local history_r='history -r'$/;"	v
history_size	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local history_size="$(tmux display -p -t "$pane_id" -F "#{history_size}")"$/;"	v
history_w	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local history_w='fc -lLn -64 >'$/;"	v
history_w	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local history_w='history -w'$/;"	v
hl	zpwr/.tmux/powerline/renderer.py	/^	def hl(self, contents, fg=None, bg=None, attrs=None):$/;"	m	class:Renderer
hl	zpwr/.tmux/powerline/renderers/i3bar.py	/^	def hl(self, contents, fg=None, bg=None, attrs=None):$/;"	m	class:I3barRenderer
hl	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def hl(self, contents, fg=None, bg=None, attrs=None):$/;"	m	class:IPythonPygmentsRenderer
hl	zpwr/.tmux/powerline/renderers/lemonbar.py	/^	def hl(self, contents, fg=None, bg=None, attrs=None):$/;"	m	class:LemonbarRenderer
hl	zpwr/.tmux/powerline/renderers/pango_markup.py	/^	def hl(self, contents, fg=None, bg=None, attrs=None):$/;"	m	class:PangoMarkupRenderer
hl_exists	zpwr/.tmux/powerline/lint/checks.py	/^def hl_exists(hl_group, data, context, echoerr, allow_gradients=False):$/;"	f
hl_group_in_colorscheme	zpwr/.tmux/powerline/lint/checks.py	/^def hl_group_in_colorscheme(hl_group, cconfig, allow_gradients, data, context, echoerr):$/;"	f
hl_join	zpwr/.tmux/powerline/renderer.py	/^	hl_join = staticmethod(''.join)$/;"	v	class:Renderer
hl_join	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def hl_join(segments):$/;"	m	class:IPythonPygmentsRenderer
hlstyle	zpwr/.tmux/powerline/renderer.py	/^	def hlstyle(fg=None, bg=None, attrs=None):$/;"	m	class:Renderer
hlstyle	zpwr/.tmux/powerline/renderers/i3bar.py	/^	def hlstyle(*args, **kwargs):$/;"	m	class:I3barRenderer
hlstyle	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def hlstyle(self, **kwargs):$/;"	m	class:IPythonPygmentsRenderer
hlstyle	zpwr/.tmux/powerline/renderers/lemonbar.py	/^	def hlstyle(*args, **kwargs):$/;"	m	class:LemonbarRenderer
hlstyle	zpwr/.tmux/powerline/renderers/pango_markup.py	/^	def hlstyle(*args, **kwargs):$/;"	m	class:PangoMarkupRenderer
hlstyle	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def hlstyle(self, fg=None, bg=None, attrs=None):$/;"	m	class:ShellRenderer
hlstyle	zpwr/.tmux/powerline/renderers/tmux.py	/^	def hlstyle(self, fg=None, bg=None, attrs=None):$/;"	m	class:TmuxRenderer
hlstyle	zpwr/.tmux/powerline/renderers/vim.py	/^	def hlstyle(self, fg=None, bg=None, attrs=None):$/;"	m	class:VimRenderer
home	myWatchNoBlink.sh	/^    home=$(tput cup 0 0)$/;"	v
home	myWatchNoBlinkColorized.sh	/^    home=$(tput cup 0 0)$/;"	v
home	zpwr/scripts/myWatchNoBlink.sh	/^    home=$(tput cup 0 0)$/;"	v
home	zpwr/scripts/myWatchNoBlinkColorized.sh	/^    home=$(tput cup 0 0)$/;"	v
home_dir	duplicateLineDeleter.sh	/^home_dir=$HOME$/;"	v
home_dir	indenterAndDuplicateLineDeleter.sh	/^home_dir=$HOME$/;"	v
home_dir	zpwr/scripts/duplicateLineDeleter.sh	/^home_dir=$HOME$/;"	v
home_dir	zpwr/scripts/indenterAndDuplicateLineDeleter.sh	/^home_dir=$HOME$/;"	v
hook	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	hook=$(get_tmux_option "$hook_prefix$kind" "")$/;"	v
hook_prefix	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^hook_prefix="@resurrect-hook-"$/;"	v
host	macOnly/rsyncr.sh	/^host="r"$/;"	v
host	zpwr/scripts/macOnly/rsyncr.sh	/^host="r"$/;"	v
host_status	pingordie.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
host_status	pingordieBridge.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
host_status	pingordieBridgeVPN.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
host_status	zpwr/scripts/pingordie.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
host_status	zpwr/scripts/pingordieBridge.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
host_status	zpwr/scripts/pingordieBridgeVPN.sh	/^    host_status=$(fping $gateway_ip)$/;"	v
hostname	updatePi.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hostname	updater.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hostname	updaterNoPip.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hostname	zpwr/.tmux/powerline/segments/common/net.py	/^def hostname(pl, segment_info, only_if_ssh=False, exclude_domain=False):$/;"	f
hostname	zpwr/scripts/updatePi.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hostname	zpwr/scripts/updater.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hostname	zpwr/scripts/updaterNoPip.sh	/^    hostname="$(echo "$1" | awk -F: '{print $1}')"$/;"	v
hour	timeConverter.sh	/^    hour=$((hour - 12))$/;"	v
hour	timeConverter.sh	/^hour=$(date | tr -s ' ' | cut -d ' ' -f4 | cut -d ':' -f1)$/;"	v
hour	zpwr/scripts/timeConverter.sh	/^    hour=$((hour - 12))$/;"	v
hour	zpwr/scripts/timeConverter.sh	/^hour=$(date | tr -s ' ' | cut -d ' ' -f4 | cut -d ':' -f1)$/;"	v
hoursPlural	zpwr/motd.sh	/^      hoursPlural=""$/;"	v
hoursPlural	zpwr/motd.sh	/^    local hoursPlural="s"$/;"	v
hs_highlight_boolean	zpwr/.vim/colors/parsec.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_boolean	zpwr/.vim/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	zpwr/.vim/colors/parsec.vim	/^let hs_highlight_delimiters=1$/;"	v
hs_highlight_delimiters	zpwr/.vim/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
hsl2color	zpwr/.vim/colors/saturn.vim	/^fu! s:hsl2color(h, s, l)$/;"	f
html_my_rendering	zpwr/.vim/colors/tabula.vim	/^let html_my_rendering=1$/;"	v
htopDIR	zpwr/plugins_install.sh	/^htopDIR="$HOME\/.config\/htop"$/;"	v
humanReadable	zpwr/.shell_aliases_functions.sh	/^humanReadable(){$/;"	f
humanize_bytes	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^def humanize_bytes(num, suffix='B', si_prefix=False):$/;"	f
humanize_bytes	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.lib.humanize_bytes import humanize_bytes$/;"	i
humanize_bytes	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib.humanize_bytes import humanize_bytes$/;"	i
i	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^	  i=$(( (i+1) %4 ))$/;"	v
i	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^	local i=0$/;"	v
i3	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^			import i3$/;"	i
i3	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	i3 = get_i3_connection()$/;"	v
i3	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^			import i3$/;"	i
i3	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^		import i3$/;"	i
i3_subscribe	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from powerline.bindings.wm import get_i3_connection, i3_subscribe$/;"	i
i3_subscribe	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^def i3_subscribe(conn, event, callback):$/;"	f
i3ipc	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^			import i3ipc$/;"	i
i3ipc	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^			import i3ipc$/;"	i
i3ipc	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^			import i3ipc$/;"	i
i3ipc	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^		import i3ipc$/;"	i
icon_charge_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier1=$(get_tmux_option "@batt_icon_charge_tier1" "$icon_charge_tier1_default")$/;"	v
icon_charge_tier1	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier1=''$/;"	v
icon_charge_tier1_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier1_default='▁'$/;"	v
icon_charge_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier2=$(get_tmux_option "@batt_icon_charge_tier2" "$icon_charge_tier2_default")$/;"	v
icon_charge_tier2	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier2=''$/;"	v
icon_charge_tier2_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier2_default='▂'$/;"	v
icon_charge_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier3=$(get_tmux_option "@batt_icon_charge_tier3" "$icon_charge_tier3_default")$/;"	v
icon_charge_tier3	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier3=''$/;"	v
icon_charge_tier3_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier3_default='▃'$/;"	v
icon_charge_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier4=$(get_tmux_option "@batt_icon_charge_tier4" "$icon_charge_tier4_default")$/;"	v
icon_charge_tier4	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier4=''$/;"	v
icon_charge_tier4_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier4_default='▄'$/;"	v
icon_charge_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier5=$(get_tmux_option "@batt_icon_charge_tier5" "$icon_charge_tier5_default")$/;"	v
icon_charge_tier5	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier5=''$/;"	v
icon_charge_tier5_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier5_default='▅'$/;"	v
icon_charge_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier6=$(get_tmux_option "@batt_icon_charge_tier6" "$icon_charge_tier6_default")$/;"	v
icon_charge_tier6	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier6=''$/;"	v
icon_charge_tier6_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier6_default='▆'$/;"	v
icon_charge_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier7=$(get_tmux_option "@batt_icon_charge_tier7" "$icon_charge_tier7_default")$/;"	v
icon_charge_tier7	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier7=''$/;"	v
icon_charge_tier7_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier7_default='▇'$/;"	v
icon_charge_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	icon_charge_tier8=$(get_tmux_option "@batt_icon_charge_tier8" "$icon_charge_tier8_default")$/;"	v
icon_charge_tier8	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier8=''$/;"	v
icon_charge_tier8_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^icon_charge_tier8_default='█'$/;"	v
icon_status_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	icon_status_attached=$(get_tmux_option "@batt_icon_status_attached" "$icon_status_attached_default")$/;"	v
icon_status_attached	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_attached=''$/;"	v
icon_status_attached_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_attached_default='⚠️'$/;"	v
icon_status_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	icon_status_charged=$(get_tmux_option "@batt_icon_status_charged" "$(get_icon_status_charged_default)")$/;"	v
icon_status_charged	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_charged=''$/;"	v
icon_status_charged_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_charged_default='🔌'$/;"	v
icon_status_charged_default_osx	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_charged_default_osx='🔌'$/;"	v
icon_status_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	icon_status_charging=$(get_tmux_option "@batt_icon_status_charging" "$icon_status_charging_default")$/;"	v
icon_status_charging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_charging=''$/;"	v
icon_status_charging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_charging_default='🔌'$/;"	v
icon_status_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	icon_status_discharging=$(get_tmux_option "@batt_icon_status_discharging" "$icon_status_discharging_default")$/;"	v
icon_status_discharging	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_discharging=''$/;"	v
icon_status_discharging_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_discharging_default='🔋'$/;"	v
icon_status_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	icon_status_unknown=$(get_tmux_option "@batt_icon_status_unknown" "$icon_status_unknown_default")$/;"	v
icon_status_unknown	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_unknown=''$/;"	v
icon_status_unknown_default	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^icon_status_unknown_default='?'$/;"	v
id	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	id = 'mapping'$/;"	v	class:MappingNode
id	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	id = 'scalar'$/;"	v	class:ScalarNode
id	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^	id = 'sequence'$/;"	v	class:SequenceNode
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = ','$/;"	v	class:FlowEntryToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = ':'$/;"	v	class:ValueToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '<scalar>'$/;"	v	class:ScalarToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '<stream end>'$/;"	v	class:StreamEndToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '<stream start>'$/;"	v	class:StreamStartToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '?'$/;"	v	class:KeyToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '['$/;"	v	class:FlowSequenceStartToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = ']'$/;"	v	class:FlowSequenceEndToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '{'$/;"	v	class:FlowMappingStartToken
id	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^	id = '}'$/;"	v	class:FlowMappingEndToken
ident	zpwr/.tmux/powerline/lint/spec.py	/^	def ident(self, msg_func=None):$/;"	m	class:Spec
iface	zpwr/install.sh	/^iface=$(ifconfig | grep -B3 "inet .*$ip" | grep '^[a-zA-Z0-9].*' | awk '{print $1}' | tr -d ":")$/;"	v
ignore_event	zpwr/.tmux/powerline/lib/vcs/git.py	/^		def ignore_event(path, name):$/;"	m	class:GitRepository.Repository
ignore_files	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def ignore_files(self, keypath):$/;"	m	class:FileStatusCache
import_function	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.imp import WithPath, import_function, import_segment$/;"	i
import_function	zpwr/.tmux/powerline/lint/imp.py	/^def import_function(function_type, name, data, context, echoerr, module):$/;"	f
import_pyuv	zpwr/.tmux/powerline/lib/watcher/uv.py	/^def import_pyuv():$/;"	f
import_segment	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.imp import WithPath, import_function, import_segment$/;"	i
import_segment	zpwr/.tmux/powerline/lint/imp.py	/^def import_segment(*args, **kwargs):$/;"	f
include_function	zpwr/.tmux/powerline/lint/__init__.py	/^	include_function=exinclude_spec().optional(),$/;"	v
include_modes	zpwr/.tmux/powerline/lint/__init__.py	/^	include_modes=Spec().list(vim_mode_spec()).optional(),$/;"	v
info	about.sh	/^            info="$(git tag -l -n9 "$version" | perl -pe 's@[\\t ]+@ @')"$/;"	v
info	zpwr/.tmux/powerline/__init__.py	/^	def info(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
info	zpwr/.tmux/powerline/lib/threaded.py	/^	def info(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
info	zpwr/scripts/about.sh	/^            info="$(git tag -l -n9 "$version" | perl -pe 's@[\\t ]+@ @')"$/;"	v
init	zpwr/.tmux/powerline/__init__.py	/^	def init(self,$/;"	m	class:Powerline
init	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		def init(self, ip):$/;"	m	class:ShutdownHook.ConfigurableIPythonPowerline
init	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def init(self, config_overrides=None, theme_overrides={}, config_paths=None):$/;"	m	class:ConfigurableIPythonPowerline
init	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^	def init(self, ip):$/;"	m	class:ConfigurableIPythonPowerline
init	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def init(self, **kwargs):$/;"	m	class:ZshPowerline
init	zpwr/.tmux/powerline/ipython.py	/^	def init(self, **kwargs):$/;"	m	class:IPythonPowerline
init	zpwr/.tmux/powerline/lemonbar.py	/^	def init(self):$/;"	m	class:LemonbarPowerline
init	zpwr/.tmux/powerline/pdb.py	/^	def init(self, **kwargs):$/;"	m	class:PDBPowerline
init	zpwr/.tmux/powerline/shell.py	/^	def init(self, args, **kwargs):$/;"	m	class:ShellPowerline
init	zpwr/.tmux/powerline/vim.py	/^	def init(self, pyeval='PowerlinePyeval', **kwargs):$/;"	m	class:VimPowerline
init_tmux_environment	zpwr/.tmux/powerline/bindings/config.py	/^def init_tmux_environment(pl, args, set_tmux_environment=set_tmux_environment):$/;"	f
initial_stack_length	zpwr/.tmux/powerline/renderers/pdb.py	/^	initial_stack_length = None$/;"	v	class:PDBRenderer
initialize	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^def initialize():$/;"	f
initializeGitDirectory	gitgo.sh	/^initializeGitDirectory() {$/;"	f
initializeGitDirectory	zpwr/scripts/gitgo.sh	/^initializeGitDirectory() {$/;"	f
initialized	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^initialized = False$/;"	v
inline_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^				local inline_strategy="$($strategy_file "$pane_full_command" "$dir")"$/;"	v
inline_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^		local inline_strategy="$(_get_inline_strategy "$pane_full_command")" # might not be defined$/;"	v
inline_strategy_token	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^inline_strategy_token="->"$/;"	v
ino	zpwr/.shell_aliases_functions.sh	/^ino(){$/;"	f
input	zpwr/motd.sh	/^  local input=$1$/;"	v
install	tgzLocalInstaller.sh	/^install() {$/;"	f
install	zpwr/scripts/tgzLocalInstaller.sh	/^install() {$/;"	f
installDir	updater.sh	/^            installDir=$(python2 -m pip show "$i" | \\perl -ne 'print $1 if \/^Location: (.*)\/')$/;"	v
installDir	updater.sh	/^            installDir=$(python3 -m pip show "$i" | \\perl -ne 'print $1 if \/^Location: (.*)\/')$/;"	v
installDir	updater.sh	/^        installDir=$(npm root -g | head -n 1)$/;"	v
installDir	updaterNoPip.sh	/^        installDir=$(npm root -g | head -n 1)$/;"	v
installDir	zpwr/scripts/updater.sh	/^            installDir=$(python2 -m pip show "$i" | \\perl -ne 'print $1 if \/^Location: (.*)\/')$/;"	v
installDir	zpwr/scripts/updater.sh	/^            installDir=$(python3 -m pip show "$i" | \\perl -ne 'print $1 if \/^Location: (.*)\/')$/;"	v
installDir	zpwr/scripts/updater.sh	/^        installDir=$(npm root -g | head -n 1)$/;"	v
installDir	zpwr/scripts/updaterNoPip.sh	/^        installDir=$(npm root -g | head -n 1)$/;"	v
installGitHubPlugin	zpwr/tmux_plugins_install.sh	/^installGitHubPlugin(){$/;"	f
installOhMyZshPlugin	zpwr/zsh_plugins_install.sh	/^installOhMyZshPlugin(){$/;"	f
installVimPlugin	zpwr/vim_plugins_install.sh	/^installVimPlugin(){$/;"	f
install_counter	zpwr/install.sh	/^install_counter=0$/;"	v
install_key	zpwr/.tmux/plugins/tpm/tpm	/^	local install_key="$(get_tmux_option "$install_key_option" "$default_install_key")"$/;"	v
install_key_option	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^install_key_option="@tpm-install"$/;"	v
install_plugin	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugin() {$/;"	f
install_plugins	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugins() {$/;"	f
installerDir	macOnly/tutorialConfigUpdater.sh	/^installerDir="$ZPWR_HIDDEN_DIR\/scripts\/$ZPWR_REPO_NAME"$/;"	v
installerDir	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^installerDir="$HOME\/Documents\/shellScripts\/$ZPWR_REPO_NAME"$/;"	v
int_or_sig	zpwr/.tmux/powerline/commands/main.py	/^def int_or_sig(s):$/;"	f
int_to_rgb	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^def int_to_rgb(num):$/;"	f
interfaces	zpwr/.tmux/powerline/segments/common/net.py	/^	interfaces = {}$/;"	v	class:NetworkLoadSegment
internal_ip	zpwr/.tmux/powerline/segments/common/net.py	/^	def internal_ip(pl, interface='auto', ipv=4):$/;"	f
internal_ip	zpwr/.tmux/powerline/segments/common/net.py	/^internal_ip = with_docstring(internal_ip,$/;"	v
interval	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	interval = 0.5$/;"	v
interval	zpwr/.tmux/powerline/lib/threaded.py	/^	interval = 1$/;"	v	class:ThreadedSegment
interval	zpwr/.tmux/powerline/segments/common/mail.py	/^	interval = 60$/;"	v	class:EmailIMAPSegment
interval	zpwr/.tmux/powerline/segments/common/net.py	/^	interval = 300$/;"	v	class:ExternalIpSegment
interval	zpwr/.tmux/powerline/segments/common/sys.py	/^		interval = 1$/;"	v	class:.CPULoadPercentSegment
interval	zpwr/.tmux/powerline/segments/common/wthr.py	/^	interval = 600$/;"	v	class:WeatherSegment
interval_minutes	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local interval_minutes="$(get_interval)"$/;"	v
interval_seconds	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local interval_seconds="$((interval_minutes * 60))"$/;"	v
invalidate	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def invalidate(self, dirstate_file=None, ignore_file=None):$/;"	m	class:FileStatusCache
invalidation_hash	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	def invalidation_hash(self):$/;"	m	class:PowerlinePromptStyle
ip	zpwr/.shell_aliases_functions.sh	/^                    ip="$(echo "$out" | command grep 'address' | head -n 1 | awk '{print $4}')"$/;"	v
ip	zpwr/.shell_aliases_functions.sh	/^    ip=$(curl --socks5 127.0.0.1:9050 icanhazip.com)$/;"	v
ip	zpwr/install.sh	/^ip=$(ifconfig | grep "inet\\s" | grep -v 127 | awk '{print $2}' | sed 's@addr:@@')$/;"	v
ipython_magic	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def ipython_magic(self, ip, parameter_s=''):$/;"	m	class:ConfigurableIPythonPowerline
isBinary	zpwr/.shell_aliases_functions.sh	/^isBinary() {$/;"	f
isGitDir	zpwr/.shell_aliases_functions.sh	/^isGitDir(){$/;"	f
isGitDirMessage	zpwr/.shell_aliases_functions.sh	/^isGitDirMessage(){$/;"	f
isZsh	fzfEnv.sh	/^isZsh(){$/;"	f
isZsh	fzfPreviewOptsCommon.sh	/^isZsh(){$/;"	f
isZsh	fzfPreviewOptsCommon2Pos.sh	/^isZsh(){$/;"	f
isZsh	tailZOU.sh	/^isZsh(){$/;"	f
isZsh	zpwr/.shell_aliases_functions.sh	/^isZsh(){$/;"	f
isZsh	zpwr/scripts/fzfEnv.sh	/^isZsh(){$/;"	f
isZsh	zpwr/scripts/fzfPreviewOptsCommon.sh	/^isZsh(){$/;"	f
isZsh	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^isZsh(){$/;"	f
isZsh	zpwr/scripts/tailZOU.sh	/^isZsh(){$/;"	f
is_alive	zpwr/.tmux/powerline/lib/threaded.py	/^	def is_alive(self):$/;"	m	class:MultiRunnedThread
is_chrome	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^is_chrome() {$/;"	f
is_dummy	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	is_dummy = False$/;"	v	class:INotifyTreeWatcher
is_dummy	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	is_dummy = True$/;"	v	class:DummyTreeWatcher
is_dummy	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	is_dummy = False$/;"	v	class:UvTreeWatcher
is_fullscreen	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local is_fullscreen="$2"$/;"	v
is_line_type	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_line_type() {$/;"	f
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:ManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type1ManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type2ManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type3ManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type4ManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:TypeDarwinManParser
is_my_type	mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:TypeDeroffManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:ManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type1ManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type2ManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type3ManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:Type4ManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:TypeDarwinManParser
is_my_type	zpwr/scripts/mantozshcomp.py	/^    def is_my_type(self, manpage):$/;"	m	class:TypeDeroffManParser
is_option	mantozshcomp.py	/^    def is_option(self, line):$/;"	m	class:TypeDarwinManParser
is_option	mantozshcomp.py	/^    def is_option(self, line):$/;"	m	class:TypeDeroffManParser
is_option	zpwr/scripts/mantozshcomp.py	/^    def is_option(self, line):$/;"	m	class:TypeDarwinManParser
is_option	zpwr/scripts/mantozshcomp.py	/^    def is_option(self, line):$/;"	m	class:TypeDeroffManParser
is_osx	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^is_osx() {$/;"	f
is_osx	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^is_osx() {$/;"	f
is_osx	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^is_osx() {$/;"	f
is_pane_registered_as_existing	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_pane_registered_as_existing() {$/;"	f
is_restoring_from_scratch	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_restoring_from_scratch() {$/;"	f
is_restoring_pane_contents	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_restoring_pane_contents() {$/;"	f
is_session_grouped	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^is_session_grouped() {$/;"	f
is_systemd	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^is_systemd() {$/;"	f
is_tmux_automatic_start_enabled	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^is_tmux_automatic_start_enabled() {$/;"	f
is_watching	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def is_watching(self, path):$/;"	m	class:INotifyFileWatcher
is_watching	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def is_watching(self, path):$/;"	m	class:StatFileWatcher
is_watching	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def is_watching(self, path):$/;"	m	class:UvWatcher
is_white	mantozshcomp.py	/^    def is_white(self, idx):$/;"	m	class:Deroffer
is_white	zpwr/scripts/mantozshcomp.py	/^    def is_white(self, idx):$/;"	m	class:Deroffer
iterm_or_terminal_value	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local iterm_or_terminal_value="$(get_iterm_or_teminal_option_value "$options")"$/;"	v
iterm_terminal	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^iterm_terminal() {$/;"	f
itertools	zpwr/.tmux/powerline/lint/context.py	/^import itertools$/;"	i
itertools	zpwr/.tmux/powerline/lint/spec.py	/^import itertools$/;"	i
itertools	zpwr/.tmux/powerline/theme.py	/^import itertools$/;"	i
itunes	zpwr/.tmux/powerline/segments/common/players.py	/^itunes = with_docstring(ITunesPlayerSegment(),$/;"	v
j	zpwr/.shell_aliases_functions.sh	/^function j(){$/;"	f
javascript_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:javascript_syntax_and_highlights()$/;"	f
jd	zpwr/.shell_aliases_functions.sh	/^jd(){$/;"	f
jellyx_show_whitespace	zpwr/.vim/colors/jellyx.vim	/^    augroup jellyx_show_whitespace$/;"	a
jetbrainsWorkspaceEdit	zpwr/.shell_aliases_functions.sh	/^jetbrainsWorkspaceEdit(){$/;"	f
jobnum	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local jobnum="$(jobs -p|wc -l)"$/;"	v
jobnum	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def jobnum(self):$/;"	m	class:Args
jobnum	zpwr/.tmux/powerline/segments/shell.py	/^def jobnum(pl, segment_info, show_zero=False):$/;"	f
join	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lib/path.py	/^def join(*components):$/;"	f
join	zpwr/.tmux/powerline/lib/threaded.py	/^	def join(self, *args, **kwargs):$/;"	m	class:MultiRunnedThread
join	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def join(self):$/;"	m	class:UvThread
join	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lib.path import join$/;"	i
join	zpwr/.tmux/powerline/lint/context.py	/^	def join(self, iterable):$/;"	m	class:JStr
json	zpwr/.shell_aliases_functions.sh	/^    local json="$(cat)"$/;"	v
json	zpwr/.tmux/powerline/lib/config.py	/^import json$/;"	i
json	zpwr/.tmux/powerline/lib/overrides.py	/^import json$/;"	i
json	zpwr/.tmux/powerline/renderers/i3bar.py	/^import json$/;"	i
json	zpwr/.tmux/powerline/segments/common/wthr.py	/^import json$/;"	i
json	zpwr/.tmux/powerline/vim.py	/^import json$/;"	i
jsonToArray	zpwr/.shell_aliases_functions.sh	/^jsonToArray(){$/;"	f
just_started_tmux_server	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^just_started_tmux_server() {$/;"	f
key	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local key="$1"$/;"	v
key	zpwr/.tmux/powerline/lib/threaded.py	/^	def key(**kwargs):$/;"	m	class:KwThreadedSegment
key	zpwr/.tmux/powerline/lint/context.py	/^	def key(self):$/;"	m	class:Context
key	zpwr/.tmux/powerline/segments/common/mail.py	/^	def key(username, password, server='imap.gmail.com', port=IMAP4_SSL_PORT, folder='INBOX', use_ssl=None, **kwargs):$/;"	m	class:EmailIMAPSegment
key	zpwr/.tmux/powerline/segments/common/net.py	/^	def key(interface='auto', **kwargs):$/;"	m	class:NetworkLoadSegment
key	zpwr/.tmux/powerline/segments/common/wthr.py	/^	def key(location_query=None, **kwargs):$/;"	m	class:WeatherSegment
key_binding_not_changed	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_changed() {$/;"	f
key_binding_not_set	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_set() {$/;"	f
key_bindings	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^	local key_bindings=$(get_tmux_option "$restore_option" "$default_restore_key")$/;"	v
key_bindings	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^	local key_bindings=$(get_tmux_option "$save_option" "$default_save_key")$/;"	v
key_bindings	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^    key_bindings="$(yank_key) $(put_key) $(yank_put_key)"$/;"	v
key_sep	zpwr/.tmux/powerline/lint/context.py	/^key_sep = JStr('\/')$/;"	v
keyvaluesplit	zpwr/.tmux/powerline/lib/overrides.py	/^def keyvaluesplit(s):$/;"	f
killCursor	batchRename.sh	/^killCursor() {$/;"	f
killCursor	openAll.sh	/^killCursor() {$/;"	f
killCursor	picture_finder.sh	/^killCursor() {$/;"	f
killCursor	secureDelete.sh	/^killCursor() {$/;"	f
killCursor	zpwr/scripts/batchRename.sh	/^killCursor() {$/;"	f
killCursor	zpwr/scripts/openAll.sh	/^killCursor() {$/;"	f
killCursor	zpwr/scripts/picture_finder.sh	/^killCursor() {$/;"	f
killCursor	zpwr/scripts/secureDelete.sh	/^killCursor() {$/;"	f
killpids	CPU_Stresser.sh	/^killpids() {$/;"	f
killpids	zpwr/scripts/CPU_Stresser.sh	/^killpids() {$/;"	f
kind	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local kind="$1"$/;"	v
label1	zpwr/motd.sh	/^label1="$(extend "$login")"$/;"	v
label1	zpwr/motd.sh	/^label1="$borderBar  $(color $statsLabelColor "Last Login....:") $label1$borderBar"$/;"	v
label2	zpwr/motd.sh	/^label2="$(extend "$uptime")"$/;"	v
label2	zpwr/motd.sh	/^label2="$borderBar  $(color $statsLabelColor "Uptime........:") $label2$borderBar"$/;"	v
label3	zpwr/motd.sh	/^label3="$(extend "$(free -m | awk 'NR==2 { printf "Total: %sMB, Used: %sMB, Free: %sMB",$2,$3,$4; }')")"$/;"	v
label3	zpwr/motd.sh	/^label3="$borderBar  $(color $statsLabelColor "Memory........:") $label3$borderBar"$/;"	v
label4	zpwr/motd.sh	/^label4="$(extend "$(df -h ~ | awk 'NR==2 { printf "Total: %sB, Used: %sB, Free: %sB",$2,$3,$4; }')")"$/;"	v
label4	zpwr/motd.sh	/^label4="$borderBar  $(color $statsLabelColor "Home space....:") $label4$borderBar"$/;"	v
label5	zpwr/motd.sh	/^label5="$(extend "$(\/opt\/vc\/bin\/vcgencmd measure_temp | cut -c "6-9")ºC")"$/;"	v
label5	zpwr/motd.sh	/^label5="$borderBar  $(color $statsLabelColor "Temperature...:") $label5$borderBar"$/;"	v
laederon_tex	zpwr/.vim/colors/laederon.vim	/^augroup laederon_tex $/;"	a
landscape	zpwr/.vim/colors/landscape.vim	/^  augroup landscape-newmatch$/;"	a
last	batchRename.sh	/^        local last=$(echo ${file##*_})$/;"	v
last	zpwr/scripts/batchRename.sh	/^        local last=$(echo ${file##*_})$/;"	v
last_auto_save_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^last_auto_save_option="@continuum-save-last-timestamp"$/;"	v
last_exit_code	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local last_exit_code=$1 ; shift$/;"	v
last_exit_code	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local last_exit_code=$? last_pipe_status=( "${PIPESTATUS[@]}" )$/;"	v
last_pipe_status	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^		last_pipe_status=()$/;"	v
last_pipe_status	zpwr/.tmux/powerline/bindings/bash/powerline.sh	/^	local last_pipe_status=$1 ; shift$/;"	v
last_pipe_status	zpwr/.tmux/powerline/segments/shell.py	/^def last_pipe_status(pl, segment_info):$/;"	f
last_resurrect_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^last_resurrect_file() {$/;"	f
last_resurrect_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local last_resurrect_file="$(last_resurrect_file)"$/;"	v
last_save_file_differs_helper	zpwr/.tmux/plugins/tmux-resurrect/tests/helpers/resurrect_helpers.sh	/^last_save_file_differs_helper() {$/;"	f
last_saved_timestamp	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local last_saved_timestamp="$(get_tmux_option "$last_auto_save_option" "0")"$/;"	v
last_status	zpwr/.tmux/powerline/segments/shell.py	/^def last_status(pl, segment_info):$/;"	f
last_swe_idx	zpwr/.tmux/powerline/lib/unicode.py	/^last_swe_idx = 0$/;"	v
lastcommit	about.sh	/^            lastcommit="$(git log --oneline -n 1)"$/;"	v
lastcommit	zpwr/scripts/about.sh	/^            lastcommit="$(git log --oneline -n 1)"$/;"	v
late_startup_hook	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def late_startup_hook():$/;"	f	function:setup
later	zpwr/.tmux/powerline/segments/common/bat.py	/^		from shutil import which  # Python-3.3 and later$/;"	i
launchd_plist_file_content	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local launchd_plist_file_content="$(template "$tmux_start_script_path" "$fullscreen_option_value")"$/;"	v
lcline	openAll.sh	/^    lcline="$(echo $line | tr '[:upper:]' '[:lower:]')"$/;"	v
lcline	zpwr/scripts/openAll.sh	/^    lcline="$(echo $line | tr '[:upper:]' '[:lower:]')"$/;"	v
le	zpwr/.shell_aliases_functions.sh	/^    le(){$/;"	f
learning	zpwr/.shell_aliases_functions.sh	/^        learning="$(printf -- '%s' "$1" | sed 's@^[[:space:]]*@@;s@[[:space:]]*$@@')"$/;"	v
leavePresentPaneAloneFlag	powerTo.sh	/^leavePresentPaneAloneFlag=false$/;"	v
leavePresentPaneAloneFlag	zpwr/scripts/powerTo.sh	/^leavePresentPaneAloneFlag=false$/;"	v
left	zpwr/.tmux/powerline/lint/__init__.py	/^	left=divside_spec(),$/;"	v
left	zpwr/.tmux/powerline/lint/__init__.py	/^	left=segments_spec().context_message('Error while loading segments from left side (key {key})'),$/;"	v
len	manzshcompgen.zsh	/^    len=${#1}$/;"	v
len	zpwr/.shell_aliases_functions.sh	/^        len=${#file_ary}$/;"	v
len	zpwr/.tmux/powerline/lint/spec.py	/^	def len(self, comparison, cint, msg_func=None):$/;"	m	class:Spec
len	zpwr/scripts/manzshcompgen.zsh	/^    len=${#1}$/;"	v
len	zpwr/scripts/zshcompgen.zsh	/^    len=${#1}$/;"	v
len	zshcompgen.zsh	/^    len=${#1}$/;"	v
letter	mantozshcomp.py	/^    def letter(self, idx):$/;"	m	class:Deroffer
letter	zpwr/scripts/mantozshcomp.py	/^    def letter(self, idx):$/;"	m	class:Deroffer
level	macOnly/splitReg.sh	/^level=1$/;"	v
level	splitReg.sh	/^level=1$/;"	v
level	zpwr/scripts/macOnly/splitReg.sh	/^level=1$/;"	v
level	zpwr/scripts/splitReg.sh	/^level=1$/;"	v
lf	clearList.sh	/^                    lf="$(echo $loc|cut -d' ' -f3-10)"$/;"	v
lf	zpwr/.shell_aliases_functions.sh	/^                    lf="$(echo $loc | cut -d' ' -f3-10)"$/;"	v
lf	zpwr/scripts/clearList.sh	/^                    lf="$(echo $loc|cut -d' ' -f3-10)"$/;"	v
lib_command	clearList.sh	/^        lib_command="ldd"$/;"	v
lib_command	clearList.sh	/^        lib_command="otool -L"$/;"	v
lib_command	zpwr/.shell_aliases_functions.sh	/^        lib_command="ldd"$/;"	v
lib_command	zpwr/.shell_aliases_functions.sh	/^        lib_command="otool -L"$/;"	v
lib_command	zpwr/scripts/clearList.sh	/^        lib_command="ldd"$/;"	v
lib_command	zpwr/scripts/clearList.sh	/^        lib_command="otool -L"$/;"	v
libc	zpwr/.tmux/powerline/lib/monotonic.py	/^			libc = ctypes.CDLL(libc_name, use_errno=True)$/;"	v
libc_name	zpwr/.tmux/powerline/lib/monotonic.py	/^			libc_name = find_library('c')$/;"	v
library_state	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from bzrlib import (workingtree, status, library_state, trace, ui)$/;"	i
librt	zpwr/.tmux/powerline/lib/monotonic.py	/^			librt = ctypes.CDLL('librt.so.1', use_errno=True)$/;"	v
lightclouds	zpwr/.vim/colors/rakr-light.vim	/^  let lightclouds = "f3f7f8"$/;"	v
limitFlag	myWatchMaintainEscapes.sh	/^        limitFlag=true$/;"	v
limitFlag	zpwr/scripts/myWatchMaintainEscapes.sh	/^        limitFlag=true$/;"	v
line	fzfEnv.sh	/^line=\\$(echo \\$line| sed "s@[]\\\\\\[^\\$.*\/]@\\\\\\\\\\\\&@g")$/;"	v
line	fzfEnv.sh	/^line={};$/;"	v
line	fzfMan.sh	/^line=\\$(echo {} | perl -lane "do{\\\\\\$_=~s@^\\\\\\s+|\\\\\\s+\\\\\\$@@g;print}");$/;"	v
line	gitRemoteRepoInformation.sh	/^                line="$(git remote -v 2>\/dev\/null | sed 1q)" && {$/;"	v
line	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local line="$2"$/;"	v
line	zpwr/scripts/fzfEnv.sh	/^line=\\$(echo \\$line| sed "s@[]\\\\\\[^\\$.*\/]@\\\\\\\\\\\\&@g")$/;"	v
line	zpwr/scripts/fzfEnv.sh	/^line={};$/;"	v
line	zpwr/scripts/fzfMan.sh	/^line=\\$(echo {} | perl -lane "do{\\\\\\$_=~s@^\\\\\\s+|\\\\\\s+\\\\\\$@@g;print}");$/;"	v
line	zpwr/scripts/gitRemoteRepoInformation.sh	/^                line="$(git remote -v 2>\/dev\/null | sed 1q)" && {$/;"	v
lineContribCount	zpwr/.shell_aliases_functions.sh	/^lineContribCount(){$/;"	f
lineCount	zpwr/.shell_aliases_functions.sh	/^    lineCount="$(cat "$ZPWR_TEMPFILE" | wc -l)"$/;"	v
lineCount	zpwr/.shell_aliases_functions.sh	/^    lineCount="$(echo $lines | wc -l)"$/;"	v
lineCounter	shebangChanger.sh	/^    lineCounter=1$/;"	v
lineCounter	zpwr/scripts/shebangChanger.sh	/^    lineCounter=1$/;"	v
line_count	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def line_count(pl, segment_info):$/;"	f
line_current	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def line_current(pl, segment_info):$/;"	f
line_magic	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from IPython.core.magic import Magics, magics_class, line_magic$/;"	i
line_percent	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def line_percent(pl, segment_info, gradient=False):$/;"	f
line_type	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local line_type="$1"$/;"	v
lines	zpwr/.shell_aliases_functions.sh	/^    lines="$(git status > \/dev\/null && git log --pretty="%an" | sort | uniq -c | sort -rn)"$/;"	v
link	uploadWebPi.sh	/^        link="http:\/\/$MY_IP:$RPI_HTML_PORT\/$i"$/;"	v
link	zpwr/scripts/uploadWebPi.sh	/^        link="http:\/\/$MY_IP:$RPI_HTML_PORT\/$i"$/;"	v
list	zpwr/.tmux/powerline/lint/spec.py	/^	def list(self, item_func, msg_func=None):$/;"	m	class:Spec
listNoClear	zpwr/.shell_aliases_functions.sh	/^listNoClear () {$/;"	f
list_all_tmux_configs	zpwr/.tmux/powerline/bindings/config.py	/^def list_all_tmux_configs():$/;"	f
list_segment_key_values	zpwr/.tmux/powerline/segment.py	/^def list_segment_key_values(segment, theme_configs, segment_data, key, function_name=None, name=None, module=None, default=None):$/;"	f
list_sep	zpwr/.tmux/powerline/lint/checks.py	/^list_sep = JStr(', ')$/;"	v
list_tabpage_buffers_segment_info	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def list_tabpage_buffers_segment_info(segment_info):$/;"	f
list_tabpages	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def list_tabpages():$/;"	f
list_tabpages	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	list_tabpages = lambda: vim.tabpages$/;"	v
list_tabpages	zpwr/.tmux/powerline/listers/vim.py	/^from powerline.bindings.vim import (current_tabpage, list_tabpages)$/;"	i
list_tabpages	zpwr/.tmux/powerline/selectors/vim.py	/^from powerline.bindings.vim import list_tabpages$/;"	i
list_themes	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lint.context import JStr, list_themes$/;"	i
list_themes	zpwr/.tmux/powerline/lint/context.py	/^def list_themes(data, context):$/;"	f
listed_key	zpwr/.tmux/powerline/lint/checks.py	/^		def listed_key(d, k):$/;"	f	function:check_group
load	zpwr/.tmux/powerline/lib/config.py	/^	def load(self, path):$/;"	m	class:ConfigLoader
load	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lint.markedjson import load$/;"	i
load	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^def load(stream, Loader=Loader):$/;"	f
load_colors	zpwr/.vim/colors/jellybeans.vim	/^  fun! s:load_colors(defs)$/;"	f
load_colors	zpwr/.vim/colors/triplejelly.vim	/^  fun! s:load_colors(defs)$/;"	f
load_colors_config	zpwr/.tmux/powerline/__init__.py	/^	def load_colors_config(self):$/;"	m	class:Powerline
load_colorscheme_config	zpwr/.tmux/powerline/__init__.py	/^	def load_colorscheme_config(self, name):$/;"	m	class:Powerline
load_config	zpwr/.tmux/powerline/__init__.py	/^	def load_config(self, cfg_path, cfg_type):$/;"	m	class:Powerline
load_config	zpwr/.tmux/powerline/__init__.py	/^def load_config(cfg_path, find_config_files, config_loader, loader_callback=None):$/;"	f
load_config	zpwr/.tmux/powerline/bindings/config.py	/^from powerline import generate_config_finder, load_config, create_logger, finish_common_config$/;"	i
load_config	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline import generate_config_finder, get_config_paths, load_config$/;"	i
load_inotify	zpwr/.tmux/powerline/lib/inotify.py	/^def load_inotify():$/;"	f
load_ipython_extension	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^def load_ipython_extension(ip):$/;"	f
load_json_config	zpwr/.tmux/powerline/lib/config.py	/^def load_json_config(config_file_path, load=json.load, open_file=open_file):$/;"	f
load_json_config	zpwr/.tmux/powerline/lint/__init__.py	/^	def load_json_config(config_file_path, load=load, open_file=open_file):$/;"	f	function:generate_json_config_loader
load_json_file	zpwr/.tmux/powerline/lint/__init__.py	/^def load_json_file(path):$/;"	f
load_main_config	zpwr/.tmux/powerline/__init__.py	/^	def load_main_config(self):$/;"	m	class:Powerline
load_main_config	zpwr/.tmux/powerline/ipython.py	/^	def load_main_config(self):$/;"	m	class:IPythonPowerline
load_main_config	zpwr/.tmux/powerline/pdb.py	/^	def load_main_config(self):$/;"	m	class:PDBPowerline
load_main_config	zpwr/.tmux/powerline/shell.py	/^	def load_main_config(self):$/;"	m	class:ShellPowerline
load_main_config	zpwr/.tmux/powerline/vim.py	/^	def load_main_config(self):$/;"	m	class:VimPowerline
load_theme_config	zpwr/.tmux/powerline/__init__.py	/^	def load_theme_config(self, name):$/;"	m	class:Powerline
load_theme_config	zpwr/.tmux/powerline/ipython.py	/^	def load_theme_config(self, name):$/;"	m	class:IPythonPowerline
load_theme_config	zpwr/.tmux/powerline/pdb.py	/^	def load_theme_config(self, name):$/;"	m	class:PDBPowerline
load_theme_config	zpwr/.tmux/powerline/shell.py	/^	def load_theme_config(self, name):$/;"	m	class:ShellPowerline
load_theme_config	zpwr/.tmux/powerline/vim.py	/^	def load_theme_config(self, name):$/;"	m	class:VimPowerline
loaded_taglist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_taglist	zpwr/taglist_46/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	zpwr/taglist_46/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	zpwr/taglist_46/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	zpwr/taglist_46/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
locale	zpwr/.tmux/powerline/lib/encoding.py	/^import locale$/;"	i
location_urls	zpwr/.tmux/powerline/segments/common/wthr.py	/^	location_urls = {}$/;"	v	class:WeatherSegment
lock	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	lock = Lock()$/;"	v
lock	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	lock = Lock()$/;"	v
lock	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	lock = Lock()$/;"	v
lock_generation	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local lock_generation=$((`date +%s` \/ 100))$/;"	v
lockdir1	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local lockdir1="${lockdir_prefix}${lock_generation}"$/;"	v
lockdir2	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local lockdir2="${lockdir_prefix}$(($lock_generation + 1))"$/;"	v
lockdir_prefix	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local lockdir_prefix="\/tmp\/tmux-continuum-$(current_tmux_server_pid)-lock-"$/;"	v
log	fzfMan.sh	/^log=\/Users\/wizard\/updaterlog.txt$/;"	v
log	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^from math import log$/;"	i
log	zpwr/scripts/fzfMan.sh	/^log=\/Users\/wizard\/updaterlog.txt$/;"	v
log_format_spec	zpwr/.tmux/powerline/lint/__init__.py	/^log_format_spec = Spec().type(unicode).copy$/;"	v
log_level_spec	zpwr/.tmux/powerline/lint/__init__.py	/^log_level_spec = Spec().re('^[A-Z]+$').func($/;"	v
logfile	zpwr/install.sh	/^logfile="$INSTALLER_DIR\/escaped_logfile.txt"$/;"	v
logfileCargoYCM	zpwr/install.sh	/^logfileCargoYCM="$INSTALLER_DIR\/cargoYCM_logfile.txt"$/;"	v
logg	zpwr/.shell_aliases_functions.sh	/^logg(){$/;"	f
logging	zpwr/.tmux/powerline/__init__.py	/^import logging$/;"	i
logging	zpwr/.tmux/powerline/lint/__init__.py	/^import logging$/;"	i
logging	zpwr/.tmux/powerline/lint/checks.py	/^import logging$/;"	i
logging	zpwr/.tmux/powerline/vim.py	/^import logging$/;"	i
login	zpwr/motd.sh	/^  login="$(date -d $loginDate +"%A, %d %B %Y, %T") ($loginIP)"$/;"	v
login	zpwr/motd.sh	/^  login="None"$/;"	v
loginCount	zpwr/.shell_aliases_functions.sh	/^loginCount(){$/;"	f
loginDate	zpwr/motd.sh	/^  loginDate=$loginIP$/;"	v
loginDate	zpwr/motd.sh	/^loginDate=$(date -u -d "$(last -2 | awk 'NR==2 {print $4,$5,$6,$7}')" +"%Y-%m-%dT%H:%M:%SZ" )$/;"	v
loginIP	zpwr/motd.sh	/^  loginIP=$loginFrom$/;"	v
lossy_unicode	mantozshcomp.py	/^def lossy_unicode(s):$/;"	f
lossy_unicode	zpwr/scripts/mantozshcomp.py	/^def lossy_unicode(s):$/;"	f
ls_command	clearList.sh	/^                ls_command="grc -c $HOME\/conf.gls gls -iFlhAd --color=always"$/;"	v
ls_command	clearList.sh	/^                ls_command="grc -c $HOME\/conf.gls ls -iFlhA --color=always"$/;"	v
ls_command	clearList.sh	/^                ls_command="ls -iFlhA"$/;"	v
ls_command	clearList.sh	/^                ls_command="ls -iFlhAOd"$/;"	v
ls_command	clearList.sh	/^            ls_command="$EXA_COMMAND"$/;"	v
ls_command	clearList.sh	/^            ls_command="grc -c $HOME\/conf.gls ls -iFlhA"$/;"	v
ls_command	clearList.sh	/^            ls_command="ls -iFhlA"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^                ls_command="grc -c $HOME\/conf.gls gls -iFlhAd --color=always"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^                ls_command="grc -c $HOME\/conf.gls ls -iFlhA --color=always"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^                ls_command="ls -iFlhA"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^                ls_command="ls -iFlhAOd"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^            ls_command="$ZPWR_EXA_COMMAND"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^            ls_command="grc -c $HOME\/conf.gls ls -iFlhA"$/;"	v
ls_command	zpwr/.shell_aliases_functions.sh	/^            ls_command="ls -iFhlA"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^                ls_command="grc -c $HOME\/conf.gls gls -iFlhAd --color=always"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^                ls_command="grc -c $HOME\/conf.gls ls -iFlhA --color=always"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^                ls_command="ls -iFlhA"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^                ls_command="ls -iFlhAOd"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^            ls_command="$EXA_COMMAND"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^            ls_command="grc -c $HOME\/conf.gls ls -iFlhA"$/;"	v
ls_command	zpwr/scripts/clearList.sh	/^            ls_command="ls -iFhlA"$/;"	v
lzma	mantozshcomp.py	/^        from backports import lzma$/;"	i
lzma	mantozshcomp.py	/^        import lzma$/;"	i
lzma	zpwr/scripts/mantozshcomp.py	/^        from backports import lzma$/;"	i
lzma	zpwr/scripts/mantozshcomp.py	/^        import lzma$/;"	i
lzma_available	mantozshcomp.py	/^    lzma_available = False$/;"	v
lzma_available	mantozshcomp.py	/^lzma_available = True$/;"	v
lzma_available	zpwr/scripts/mantozshcomp.py	/^    lzma_available = False$/;"	v
lzma_available	zpwr/scripts/mantozshcomp.py	/^lzma_available = True$/;"	v
mach_absolute_time	zpwr/.tmux/powerline/lib/monotonic.py	/^			mach_absolute_time = libc.mach_absolute_time$/;"	v
mach_timebase_info	zpwr/.tmux/powerline/lib/monotonic.py	/^			def mach_timebase_info():$/;"	f
mach_timebase_info_data_p	zpwr/.tmux/powerline/lib/monotonic.py	/^			mach_timebase_info_data_p = ctypes.POINTER(mach_timebase_info_data_t)$/;"	v
mach_timebase_info_data_t	zpwr/.tmux/powerline/lib/monotonic.py	/^			class mach_timebase_info_data_t(ctypes.Structure):$/;"	c
macro_Nm	mantozshcomp.py	/^    def macro_Nm(self):$/;"	m	class:Deroffer
macro_Nm	zpwr/scripts/mantozshcomp.py	/^    def macro_Nm(self):$/;"	m	class:Deroffer
macro_bl_vl	mantozshcomp.py	/^    def macro_bl_vl(self):$/;"	m	class:Deroffer
macro_bl_vl	zpwr/scripts/mantozshcomp.py	/^    def macro_bl_vl(self):$/;"	m	class:Deroffer
macro_bv	mantozshcomp.py	/^    def macro_bv(self):$/;"	m	class:Deroffer
macro_bv	zpwr/scripts/mantozshcomp.py	/^    def macro_bv(self):$/;"	m	class:Deroffer
macro_close_bracket	mantozshcomp.py	/^    def macro_close_bracket(self):$/;"	m	class:Deroffer
macro_close_bracket	zpwr/scripts/mantozshcomp.py	/^    def macro_close_bracket(self):$/;"	m	class:Deroffer
macro_de	mantozshcomp.py	/^    def macro_de(self):$/;"	m	class:Deroffer
macro_de	zpwr/scripts/mantozshcomp.py	/^    def macro_de(self):$/;"	m	class:Deroffer
macro_ds	mantozshcomp.py	/^    def macro_ds(self):$/;"	m	class:Deroffer
macro_ds	zpwr/scripts/mantozshcomp.py	/^    def macro_ds(self):$/;"	m	class:Deroffer
macro_en	mantozshcomp.py	/^    def macro_en(self):$/;"	m	class:Deroffer
macro_en	zpwr/scripts/mantozshcomp.py	/^    def macro_en(self):$/;"	m	class:Deroffer
macro_eq	mantozshcomp.py	/^    def macro_eq(self):$/;"	m	class:Deroffer
macro_eq	zpwr/scripts/mantozshcomp.py	/^    def macro_eq(self):$/;"	m	class:Deroffer
macro_i_ir	mantozshcomp.py	/^    def macro_i_ir(self):$/;"	m	class:Deroffer
macro_i_ir	zpwr/scripts/mantozshcomp.py	/^    def macro_i_ir(self):$/;"	m	class:Deroffer
macro_le	mantozshcomp.py	/^    def macro_le(self):$/;"	m	class:Deroffer
macro_le	zpwr/scripts/mantozshcomp.py	/^    def macro_le(self):$/;"	m	class:Deroffer
macro_lp_pp	mantozshcomp.py	/^    def macro_lp_pp(self):$/;"	m	class:Deroffer
macro_lp_pp	zpwr/scripts/mantozshcomp.py	/^    def macro_lp_pp(self):$/;"	m	class:Deroffer
macro_other	mantozshcomp.py	/^    def macro_other(self):$/;"	m	class:Deroffer
macro_other	zpwr/scripts/mantozshcomp.py	/^    def macro_other(self):$/;"	m	class:Deroffer
macro_pe	mantozshcomp.py	/^    def macro_pe(self):$/;"	m	class:Deroffer
macro_pe	zpwr/scripts/mantozshcomp.py	/^    def macro_pe(self):$/;"	m	class:Deroffer
macro_ps	mantozshcomp.py	/^    def macro_ps(self):$/;"	m	class:Deroffer
macro_ps	zpwr/scripts/mantozshcomp.py	/^    def macro_ps(self):$/;"	m	class:Deroffer
macro_r1	mantozshcomp.py	/^    def macro_r1(self):$/;"	m	class:Deroffer
macro_r1	zpwr/scripts/mantozshcomp.py	/^    def macro_r1(self):$/;"	m	class:Deroffer
macro_r2	mantozshcomp.py	/^    def macro_r2(self):$/;"	m	class:Deroffer
macro_r2	zpwr/scripts/mantozshcomp.py	/^    def macro_r2(self):$/;"	m	class:Deroffer
macro_sh	mantozshcomp.py	/^    def macro_sh(self):$/;"	m	class:Deroffer
macro_sh	zpwr/scripts/mantozshcomp.py	/^    def macro_sh(self):$/;"	m	class:Deroffer
macro_so_nx	mantozshcomp.py	/^    def macro_so_nx(self):$/;"	m	class:Deroffer
macro_so_nx	zpwr/scripts/mantozshcomp.py	/^    def macro_so_nx(self):$/;"	m	class:Deroffer
macro_sp	mantozshcomp.py	/^    def macro_sp(self):$/;"	m	class:Deroffer
macro_sp	zpwr/scripts/mantozshcomp.py	/^    def macro_sp(self):$/;"	m	class:Deroffer
macro_ss_ip	mantozshcomp.py	/^    def macro_ss_ip(self):$/;"	m	class:Deroffer
macro_ss_ip	zpwr/scripts/mantozshcomp.py	/^    def macro_ss_ip(self):$/;"	m	class:Deroffer
macro_t_and	mantozshcomp.py	/^    def macro_t_and(self):$/;"	m	class:Deroffer
macro_t_and	zpwr/scripts/mantozshcomp.py	/^    def macro_t_and(self):$/;"	m	class:Deroffer
macro_te	mantozshcomp.py	/^    def macro_te(self):$/;"	m	class:Deroffer
macro_te	zpwr/scripts/mantozshcomp.py	/^    def macro_te(self):$/;"	m	class:Deroffer
macro_tr	mantozshcomp.py	/^    def macro_tr(self):$/;"	m	class:Deroffer
macro_tr	zpwr/scripts/mantozshcomp.py	/^    def macro_tr(self):$/;"	m	class:Deroffer
macro_ts	mantozshcomp.py	/^    def macro_ts(self):$/;"	m	class:Deroffer
macro_ts	zpwr/scripts/mantozshcomp.py	/^    def macro_ts(self):$/;"	m	class:Deroffer
magics_class	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from IPython.core.magic import Magics, magics_class, line_magic$/;"	i
main	remoteRepoMonitorDaemon.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_graph.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_disable.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_disable.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_save.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bin/clean_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bin/install_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bin/update_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bindings/clean_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bindings/install_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^main() {$/;"	f
main	zpwr/.tmux/plugins/tpm/tpm	/^main() {$/;"	f
main	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^def main():$/;"	f
main	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^def main():$/;"	f
main	zpwr/.tmux/powerline/bindings/pdb/__main__.py	/^from powerline.bindings.pdb import main$/;"	i
main	zpwr/.vim/colors/marklar.vim	/^    function! s:main()$/;"	f
main	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^main() {$/;"	f
main_spec	zpwr/.tmux/powerline/lint/__init__.py	/^main_spec = (Spec($/;"	v
main_theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^main_theme_spec = common_theme_spec().update($/;"	v
make_obvious	zpwr/.vim/colors/detailed.vim	/^fun! s:make_obvious(group)$/;"	f
manager	updatePi.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manager	updater.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manager	updaterNoPip.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manager	zpwr/scripts/updatePi.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manager	zpwr/scripts/updater.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manager	zpwr/scripts/updaterNoPip.sh	/^    manager="$(echo "$1" | awk -F: '{print $2}')"$/;"	v
manually_install_the_plugin	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^manually_install_the_plugin() {$/;"	f
manually_install_the_plugin	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^manually_install_the_plugin() {$/;"	f
marked	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^def marked(func):$/;"	f
master	dsDownloader.sh	/^master="jacobmenke"$/;"	v
master	rpiDownloader.sh	/^master="jacobmenke"$/;"	v
master	zpwr/scripts/dsDownloader.sh	/^master="jacobmenke"$/;"	v
master	zpwr/scripts/rpiDownloader.sh	/^master="jacobmenke"$/;"	v
match	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			match="$(_get_proc_match_element "$proc")"$/;"	v
match	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^		match="$(_get_proc_match_element "$proc")"$/;"	v
match	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^		match="$(remove_first_char "$match")"$/;"	v
match	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local match="$2"$/;"	v
match	zpwr/.tmux/powerline/lint/spec.py	/^	def match(self, value, context_mark=None, data=None, context=(), echoerr=echoerr):$/;"	m	class:Spec
match_checks	zpwr/.tmux/powerline/lint/spec.py	/^	def match_checks(self, *args):$/;"	m	class:Spec
mdark_current_col	zpwr/.vim/colors/mdark.vim	/^let mdark_current_col = 0$/;"	v
mdark_current_line	zpwr/.vim/colors/mdark.vim	/^let mdark_current_line = 1$/;"	v
me	zpwr/motd.sh	/^me=$(whoami)$/;"	v
member_1	textmessage.sh	/^    member_1="5551113333"$/;"	v
member_1	zpwr/scripts/textmessage.sh	/^    member_1="5551113333"$/;"	v
memoize	zpwr/.tmux/powerline/lib/memoize.py	/^class memoize(object):$/;"	c
mergeargs	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.dict import mergeargs$/;"	i
mergeargs	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.dict import mergeargs$/;"	i
mergeargs	zpwr/.tmux/powerline/lib/dict.py	/^def mergeargs(argvalue, remove=False):$/;"	f
mergeargs	zpwr/.tmux/powerline/pdb.py	/^from powerline.lib.dict import mergeargs, mergedicts$/;"	i
mergedefaults	zpwr/.tmux/powerline/lib/dict.py	/^def mergedefaults(d1, d2):$/;"	f
mergedicts	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.dict import mergedicts$/;"	i
mergedicts	zpwr/.tmux/powerline/ipython.py	/^from powerline.lib.dict import mergedicts$/;"	i
mergedicts	zpwr/.tmux/powerline/lemonbar.py	/^from powerline.lib.dict import mergedicts$/;"	i
mergedicts	zpwr/.tmux/powerline/lib/dict.py	/^def mergedicts(d1, d2, remove=True):$/;"	f
mergedicts	zpwr/.tmux/powerline/pdb.py	/^from powerline.lib.dict import mergeargs, mergedicts$/;"	i
mergedicts	zpwr/.tmux/powerline/shell.py	/^from powerline.lib.dict import mergedicts$/;"	i
mergedicts	zpwr/.tmux/powerline/vim.py	/^from powerline.lib.dict import mergedicts$/;"	i
mergedicts_copy	zpwr/.tmux/powerline/lib/dict.py	/^def mergedicts_copy(d1, d2):$/;"	f
mergedicts_copy	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lib.dict import mergedicts_copy$/;"	i
message	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local message="$1"$/;"	v
message	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local message="$1"$/;"	v
message	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    local message="$1"$/;"	v
message	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local message="$1"$/;"	v
message	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^	local message="$1"$/;"	v
message	zpwr/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^	local message="$1"$/;"	v
messageToSpeak	macOnly/say.sh	/^messageToSpeak=""$/;"	v
messageToSpeak	zpwr/scripts/macOnly/say.sh	/^messageToSpeak=""$/;"	v
midnightBlue	zpwr/.vim/colors/rakr-light.vim	/^  let midnightBlue= "2c3e50"$/;"	v
milliamps	zpwr/.powerlevel9kconfig.sh	/^milliamps(){$/;"	f
min_args	boiler_gen.py	/^    min_args = 3$/;"	v
min_args	zpwr/scripts/boiler_gen.py	/^    min_args = 3$/;"	v
min_args_check	boiler_gen.py	/^def min_args_check(min_args):$/;"	f
min_args_check	zpwr/scripts/boiler_gen.py	/^def min_args_check(min_args):$/;"	f
min_sleep_time	zpwr/.tmux/powerline/lib/threaded.py	/^	min_sleep_time = 0.1$/;"	v	class:ThreadedSegment
minsPlural	zpwr/motd.sh	/^      minsPlural=""$/;"	v
minsPlural	zpwr/motd.sh	/^    local minsPlural="s"$/;"	v
minute	timeConverter.sh	/^minute=$(date | tr -s ' ' | cut -d ' ' -f4 | cut -d ':' -f2)$/;"	v
minute	zpwr/scripts/timeConverter.sh	/^minute=$(date | tr -s ' ' | cut -d ' ' -f4 | cut -d ':' -f2)$/;"	v
minutes_to_sleep	autoUpdater.sh	/^minutes_to_sleep=10$/;"	v
minutes_to_sleep	zpwr/scripts/autoUpdater.sh	/^minutes_to_sleep=10$/;"	v
mocp	zpwr/.tmux/powerline/segments/common/players.py	/^mocp = with_docstring(MocPlayerSegment(),$/;"	v
mode	zpwr/.tmux/powerline/segments/i3wm.py	/^def mode(pl, segment_info, names={'default': None}):$/;"	f
mode	zpwr/.tmux/powerline/segments/shell.py	/^def mode(pl, segment_info, override={'vicmd': 'COMMND', 'viins': 'INSERT'}, default=None):$/;"	f
mode	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def mode(pl, segment_info, override=None):$/;"	f
mode_translations	zpwr/.tmux/powerline/lint/__init__.py	/^	mode_translations=Spec().unknown_spec($/;"	v
mode_translations	zpwr/.tmux/powerline/renderers/vim.py	/^mode_translations = {$/;"	v
mode_translations_value_spec	zpwr/.tmux/powerline/lint/__init__.py	/^mode_translations_value_spec = Spec($/;"	v
modes	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	modes = ['default']$/;"	v
modes	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	modes = ['default']$/;"	v
modified_buffers	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def modified_buffers(pl, text='+ ', join_str=','):$/;"	f
modified_indicator	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def modified_indicator(pl, segment_info, text='+'):$/;"	f
module	zpwr/.tmux/powerline/__init__.py	/^			pl.exception('Failed to import attr {0} from module {1}: {2}', attr, module, str(e), prefix=prefix)$/;"	i
module	zpwr/.tmux/powerline/lint/__init__.py	/^	module=segment_module_spec(),$/;"	v
monotonic	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/lib/memoize.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/lib/monotonic.py	/^			def monotonic():$/;"	f
monotonic	zpwr/.tmux/powerline/lib/monotonic.py	/^		from time import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/lib/monotonic.py	/^		from time import time as monotonic  # NOQA$/;"	i
monotonic	zpwr/.tmux/powerline/lib/monotonic.py	/^		monotonic = lambda: clock_gettime(CLOCK_ID)$/;"	v
monotonic	zpwr/.tmux/powerline/lib/threaded.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.monotonic import monotonic$/;"	i
monotonic	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.lib.monotonic import monotonic$/;"	i
mosh_command	zpwr/.tmux/plugins/tmux-resurrect/strategies/mosh-client_default_strategy.sh	/^mosh_command() {$/;"	f
mouse	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    local mouse="${1:-false}"$/;"	v
mpd	zpwr/.tmux/powerline/segments/common/players.py	/^			import mpd$/;"	i
mpd	zpwr/.tmux/powerline/segments/common/players.py	/^mpd = with_docstring(MpdPlayerSegment(),$/;"	v
msg	zpwr/.shell_aliases_functions.sh	/^        msg="$2"$/;"	v
msg	zpwr/.shell_aliases_functions.sh	/^    msg='\\x1b[0;37;43m'$/;"	v
myPrettyPrint	gitgo.sh	/^myPrettyPrint() {$/;"	f
myPrettyPrint	zpwr/scripts/gitgo.sh	/^myPrettyPrint() {$/;"	f
my_backup_dir	backupBashConfig.sh	/^my_backup_dir="$my_scripts_dir\/rcBackups"$/;"	v
my_backup_dir	zpwr/scripts/backupBashConfig.sh	/^my_backup_dir="$my_scripts_dir\/rcBackups"$/;"	v
my_home_dir	backupBashConfig.sh	/^my_home_dir="$HOME"$/;"	v
my_home_dir	zpwr/scripts/backupBashConfig.sh	/^my_home_dir="$HOME"$/;"	v
my_scripts_dir	backupBashConfig.sh	/^my_scripts_dir="$ZPWR_SCRIPTS"$/;"	v
my_scripts_dir	zpwr/scripts/backupBashConfig.sh	/^my_scripts_dir="$ZPWR_SCRIPTS"$/;"	v
mycurl	zpwr/.shell_aliases_functions.sh	/^mycurl(){$/;"	f
name	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^		name = sys.argv[1]$/;"	v
name	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	name = 'wm'$/;"	v
name	zpwr/.tmux/powerline/lint/__init__.py	/^	name=Spec().re('^[a-zA-Z_]\\w*$').optional(),$/;"	v
name	zpwr/.tmux/powerline/lint/__init__.py	/^	name=name_spec(),$/;"	v
name_spec	zpwr/.tmux/powerline/lint/__init__.py	/^name_spec = Spec().type(unicode).len('gt', 0).optional().copy$/;"	v
namedtuple	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from collections import namedtuple$/;"	i
namedtuple	zpwr/.tmux/powerline/segments/common/mail.py	/^from collections import namedtuple$/;"	i
needSudo	updater.sh	/^                needSudo=no$/;"	v
needSudo	updater.sh	/^                needSudo=yes$/;"	v
needSudo	updater.sh	/^            needSudo=no$/;"	v
needSudo	updater.sh	/^            needSudo=yes$/;"	v
needSudo	updaterNoPip.sh	/^            needSudo=no$/;"	v
needSudo	updaterNoPip.sh	/^            needSudo=yes$/;"	v
needSudo	zpwr/.shell_aliases_functions.sh	/^needSudo(){$/;"	f
needSudo	zpwr/common.sh	/^needSudo(){$/;"	f
needSudo	zpwr/install.sh	/^        needSudo=no$/;"	v
needSudo	zpwr/install.sh	/^        needSudo=yes$/;"	v
needSudo	zpwr/scripts/updater.sh	/^                needSudo=no$/;"	v
needSudo	zpwr/scripts/updater.sh	/^                needSudo=yes$/;"	v
needSudo	zpwr/scripts/updater.sh	/^            needSudo=no$/;"	v
needSudo	zpwr/scripts/updater.sh	/^            needSudo=yes$/;"	v
needSudo	zpwr/scripts/updaterNoPip.sh	/^            needSudo=no$/;"	v
needSudo	zpwr/scripts/updaterNoPip.sh	/^            needSudo=yes$/;"	v
need_more_tokens	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def need_more_tokens(self):$/;"	m	class:Scanner
nephritis	zpwr/.vim/colors/rakr-light.vim	/^  let nephritis   = "27ae60"$/;"	v
nerdtree	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^def nerdtree(matcher_info):$/;"	f
nerdtree	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^def nerdtree(pl):$/;"	f
netifaces	zpwr/.tmux/powerline/segments/common/net.py	/^	import netifaces$/;"	i
network_check_threshold	pingordie.sh	/^network_check_threshold=5$/;"	v
network_check_threshold	pingordieBridge.sh	/^network_check_threshold=5$/;"	v
network_check_threshold	pingordieBridgeVPN.sh	/^network_check_threshold=5$/;"	v
network_check_threshold	zpwr/scripts/pingordie.sh	/^network_check_threshold=5$/;"	v
network_check_threshold	zpwr/scripts/pingordieBridge.sh	/^network_check_threshold=5$/;"	v
network_check_threshold	zpwr/scripts/pingordieBridgeVPN.sh	/^network_check_threshold=5$/;"	v
network_check_tries	pingordie.sh	/^network_check_tries=0$/;"	v
network_check_tries	pingordieBridge.sh	/^network_check_tries=0$/;"	v
network_check_tries	pingordieBridgeVPN.sh	/^network_check_tries=0$/;"	v
network_check_tries	zpwr/scripts/pingordie.sh	/^network_check_tries=0$/;"	v
network_check_tries	zpwr/scripts/pingordieBridge.sh	/^network_check_tries=0$/;"	v
network_check_tries	zpwr/scripts/pingordieBridgeVPN.sh	/^network_check_tries=0$/;"	v
network_load	zpwr/.tmux/powerline/segments/common/net.py	/^network_load = with_docstring(NetworkLoadSegment(),$/;"	v
never_ever_overwrite	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^never_ever_overwrite() {$/;"	f
newEmail	zpwr/.shell_aliases_functions.sh	/^    newEmail="$2"$/;"	v
new_args_2	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local new_args_2=' --renderer-arg="parser_state=${(%%):-%_}"'$/;"	v
new_empty_segment_line	zpwr/.tmux/powerline/theme.py	/^def new_empty_segment_line():$/;"	f
new_option_value	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^	local new_option_value="$(do_interpolation "$option_value")"$/;"	v
new_option_value	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^	local new_option_value="${option_value\/$status_interpolation_string\/$status_script}"$/;"	v
new_pane	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_pane() {$/;"	f
new_session	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_session() {$/;"	f
new_value	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^		local new_value="${save_command_interpolation}${status_right_value}"$/;"	v
new_win_idx	zpwr/.tmux/powerline/vim.py	/^	def new_win_idx(self, window_id):$/;"	m	class:VimPowerline
new_window	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_window() {$/;"	f
new_window	zpwr/.tmux/powerline/vim.py	/^	def new_window(self):$/;"	m	class:VimPowerline
newfile	batchRename.sh	/^        local newfile="$first$number.$endFileEnding"$/;"	v
newfile	createScriptButDontOpenSublime.sh	/^    newfile="$newfile.txt"$/;"	v
newfile	createScriptButDontOpenSublime.sh	/^newfile="$1"$/;"	v
newfile	createTextFile.sh	/^    newfile="$newfile".txt$/;"	v
newfile	createTextFile.sh	/^newfile="$1"$/;"	v
newfile	macOnly/postscriptToPDFCreator.sh	/^    newfile=${file%.*}$/;"	v
newfile	zpwr/.shell_aliases_functions.sh	/^    newfile="$1".$(date +%Y%m%d.%H.%M.bak)$/;"	v
newfile	zpwr/scripts/batchRename.sh	/^        local newfile="$first$number.$endFileEnding"$/;"	v
newfile	zpwr/scripts/createScriptButDontOpenSublime.sh	/^    newfile="$newfile.txt"$/;"	v
newfile	zpwr/scripts/createScriptButDontOpenSublime.sh	/^newfile="$1"$/;"	v
newfile	zpwr/scripts/createTextFile.sh	/^    newfile="$newfile".txt$/;"	v
newfile	zpwr/scripts/createTextFile.sh	/^newfile="$1"$/;"	v
newfile	zpwr/scripts/macOnly/postscriptToPDFCreator.sh	/^    newfile=${file%.*}$/;"	v
newmatch	zpwr/.vim/colors/landscape.vim	/^  function! s:newmatch() abort$/;"	f
newtime	autoUpdater.sh	/^        newtime=$(date +"%s")$/;"	v
newtime	zpwr/scripts/autoUpdater.sh	/^        newtime=$(date +"%s")$/;"	v
next_possible_simple_key	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def next_possible_simple_key(self):$/;"	m	class:Scanner
next_run	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local next_run="$((last_saved_timestamp + $interval_seconds))"$/;"	v
next_variant	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def next_variant(self):$/;"	m	class:DelayedEchoErr
nextdate	autoUpdater.sh	/^    nextdate=$(echo "$perlscript" | perl -MTime::Piece -MTime::Seconds)$/;"	v
nextdate	zpwr/scripts/autoUpdater.sh	/^    nextdate=$(echo "$perlscript" | perl -MTime::Piece -MTime::Seconds)$/;"	v
nick_pat	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^nick_pat = re.compile(br'nickname\\s*=\\s*(.+)')$/;"	v
nmcmd	fzfPreviewOptsCommon.sh	/^    nmcmd="nm -D"$/;"	v
nmcmd	fzfPreviewOptsCommon.sh	/^    nmcmd="nm"$/;"	v
nmcmd	fzfPreviewOptsCommon2Pos.sh	/^    nmcmd="nm -D"$/;"	v
nmcmd	fzfPreviewOptsCommon2Pos.sh	/^    nmcmd="nm"$/;"	v
nmcmd	zpwr/scripts/fzfPreviewOptsCommon.sh	/^    nmcmd="nm -D"$/;"	v
nmcmd	zpwr/scripts/fzfPreviewOptsCommon.sh	/^    nmcmd="nm"$/;"	v
nmcmd	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^    nmcmd="nm -D"$/;"	v
nmcmd	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^    nmcmd="nm"$/;"	v
nn	zpwr/.shell_aliases_functions.sh	/^    nn(){$/;"	f
node_exe	macOnly/randomCow.sh	/^node_exe="\/usr\/local\/lib\/node_modules\/cowsay\/cli.js"$/;"	v
node_exe	zpwr/scripts/macOnly/randomCow.sh	/^node_exe="\/usr\/local\/lib\/node_modules\/cowsay\/cli.js"$/;"	v
nodes	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from powerline.lint.markedjson import nodes$/;"	i
nodes	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from powerline.lint.markedjson import nodes$/;"	i
nodes	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from powerline.lint.markedjson import nodes$/;"	i
noport	zpwr/.shell_aliases_functions.sh	/^                noport="$(echo "$url" | sed -E 's@(.*\\.[^\/]+)(\/.*)$@\\1@' | sed -E 's@:[0-9]{1,4}$@@')"$/;"	v
noproto	zpwr/.shell_aliases_functions.sh	/^                        noproto="${noproto:0:-1}"$/;"	v
noproto	zpwr/.shell_aliases_functions.sh	/^                noproto="$(echo "$noport" | sed -E 's@https:\/\/|http:\/\/@@')"$/;"	v
normalize	zpwr/.vim/colors/saturn.vim	/^fu! s:normalize(h, s, l)$/;"	f
normpath	zpwr/.tmux/powerline/lib/watcher/uv.py	/^def normpath(path, fenc):$/;"	f
np_character_translations	zpwr/.tmux/powerline/renderer.py	/^np_character_translations = np_control_character_translations.copy()$/;"	v
np_control_character_translations	zpwr/.tmux/powerline/renderer.py	/^np_control_character_translations = dict(($/;"	v
np_invalid_character_re	zpwr/.tmux/powerline/renderer.py	/^np_invalid_character_re = re.compile('(?<![\\uD800-\\uDBFF])[\\uDC80-\\uDD00]')$/;"	v
np_invalid_character_translations	zpwr/.tmux/powerline/renderer.py	/^np_invalid_character_translations = dict(($/;"	v
nproc	CPU_Stresser.sh	/^nproc=10$/;"	v
nproc	zpwr/scripts/CPU_Stresser.sh	/^nproc=10$/;"	v
num	myWatchMaintainEscapes.sh	/^        num=$OPTARG$/;"	v
num	powerTo.sh	/^        num=realNum$/;"	v
num	powerTo.sh	/^    num=$1$/;"	v
num	powerTo.sh	/^    num=realNum$/;"	v
num	storageShower.sh	/^    num="$1"$/;"	v
num	zpwr/.shell_aliases_functions.sh	/^            num=$1$/;"	v
num	zpwr/.shell_aliases_functions.sh	/^        local num=100$/;"	v
num	zpwr/.shell_aliases_functions.sh	/^    num=$1$/;"	v
num	zpwr/scripts/myWatchMaintainEscapes.sh	/^        num=$OPTARG$/;"	v
num	zpwr/scripts/powerTo.sh	/^        num=realNum$/;"	v
num	zpwr/scripts/powerTo.sh	/^    num=$1$/;"	v
num	zpwr/scripts/powerTo.sh	/^    num=realNum$/;"	v
num	zpwr/scripts/storageShower.sh	/^    num="$1"$/;"	v
number	batchRename.sh	/^        local number=$((10#$number))$/;"	v
number	batchRename.sh	/^        local number=$(echo ${last%%.*})$/;"	v
number	mantozshcomp.py	/^    def number(self):$/;"	m	class:Deroffer
number	zpwr/scripts/batchRename.sh	/^        local number=$((10#$number))$/;"	v
number	zpwr/scripts/batchRename.sh	/^        local number=$(echo ${last%%.*})$/;"	v
number	zpwr/scripts/mantozshcomp.py	/^    def number(self):$/;"	m	class:Deroffer
number_current_server_client_processes	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^number_current_server_client_processes() {$/;"	f
number_nonempty_lines_on_screen	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^number_nonempty_lines_on_screen() {$/;"	f
number_tmux_processes_except_current_server	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^number_tmux_processes_except_current_server() {$/;"	f
numreq	mantozshcomp.py	/^    def numreq(self):$/;"	m	class:Deroffer
numreq	zpwr/scripts/mantozshcomp.py	/^    def numreq(self):$/;"	m	class:Deroffer
nvimDir	zpwr/plugins_install.sh	/^nvimDir="$HOME\/.config\/nvim"$/;"	v
nvim_session_file_exists	zpwr/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^nvim_session_file_exists() {$/;"	f
o	macOnly/combo.sh	/^    o="$(cat)"$/;"	v
o	macOnly/combo.sh	/^    o="$(hostname)"$/;"	v
o	sixLangDisplayer.sh	/^o="$(cat)"$/;"	v
o	zpwr/.shell_aliases_functions.sh	/^o(){$/;"	f
o	zpwr/scripts/macOnly/combo.sh	/^    o="$(cat)"$/;"	v
o	zpwr/scripts/macOnly/combo.sh	/^    o="$(hostname)"$/;"	v
o	zpwr/scripts/sixLangDisplayer.sh	/^o="$(cat)"$/;"	v
old	zpwr/.shell_aliases_functions.sh	/^    old="$LESS"$/;"	v
oldEmail	zpwr/.shell_aliases_functions.sh	/^    oldEmail="$1"$/;"	v
old_dir	zpwr/.shell_aliases_functions.sh	/^    old_dir="$(pwd)"$/;"	v
old_kde	zpwr/.vim/colors/gryffin.vim	/^function! s:old_kde()$/;"	f
old_kde	zpwr/.vim/colors/herokudoc.vim	/^function! s:old_kde()$/;"	f
old_kde	zpwr/.vim/colors/iangenzo.vim	/^function! s:old_kde()$/;"	f
old_prompt_manager	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^old_prompt_manager = None$/;"	v
old_widget_command	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^	local old_widget_command="$(zle -l -L $widget)"$/;"	v
old_win_idx	zpwr/.tmux/powerline/vim.py	/^	def old_win_idx(self, window_id):$/;"	m	class:VimPowerline
olddate	autoUpdater.sh	/^    olddate="$(date +'%Y-%m-%d %H:%M:%S')"$/;"	v
olddate	zpwr/scripts/autoUpdater.sh	/^    olddate="$(date +'%Y-%m-%d %H:%M:%S')"$/;"	v
oldifs	sortedArrayCounter.sh	/^oldifs="$IFS"$/;"	v
oldifs	zpwr/scripts/sortedArrayCounter.sh	/^oldifs="$IFS"$/;"	v
oldtime	autoUpdater.sh	/^    oldtime=$(date +"%s")$/;"	v
oldtime	zpwr/scripts/autoUpdater.sh	/^    oldtime=$(date +"%s")$/;"	v
omitted_args	zpwr/.tmux/powerline/lib/threaded.py	/^	def omitted_args(self, name, method):$/;"	m	class:ThreadedSegment
omitted_args	zpwr/.tmux/powerline/segments/__init__.py	/^	def omitted_args(self, name, method):$/;"	m	class:Segment
omitted_args	zpwr/.tmux/powerline/segments/common/env.py	/^	def omitted_args(self, name, method):$/;"	m	class:CwdSegment
omitted_args	zpwr/.tmux/powerline/segments/common/players.py	/^	def omitted_args(self, name, method):$/;"	m	class:PlayerSegment
on_bwipe	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def on_bwipe():$/;"	f
on_file_change	zpwr/.tmux/powerline/__init__.py	/^	def on_file_change(path):$/;"	f	function:_generate_change_callback
oneof	zpwr/.tmux/powerline/lint/spec.py	/^	def oneof(self, collection, msg_func=None):$/;"	m	class:Spec
only_digits	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local only_digits="$(echo "$string" | tr -dC '[:digit:]')"$/;"	v
only_digits	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local only_digits="$(echo "$string" | tr -dC '[:digit:]')"$/;"	v
only_digits	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local only_digits="$(echo "$string" | tr -dC '[:digit:]')"$/;"	v
openTextEditor	createScriptButDontOpenSublime.sh	/^openTextEditor() {$/;"	f
openTextEditor	createTextFile.sh	/^openTextEditor() {$/;"	f
openTextEditor	zpwr/scripts/createScriptButDontOpenSublime.sh	/^openTextEditor() {$/;"	f
openTextEditor	zpwr/scripts/createTextFile.sh	/^openTextEditor() {$/;"	f
open_cmd	crossOSCommands.sh	/^                open_cmd='cmd.exe \/c start ""'$/;"	v
open_cmd	crossOSCommands.sh	/^                open_cmd='nohup xdg-open'$/;"	v
open_cmd	zpwr/.shell_aliases_functions.sh	/^    open_cmd="$ZPWR_OPEN_CMD" || return 1$/;"	v
open_cmd	zpwr/.tmux/google.sh	/^                open_cmd='cmd.exe \/c start ""'$/;"	v
open_cmd	zpwr/.tmux/google.sh	/^                open_cmd='nohup xdg-open'$/;"	v
open_cmd	zpwr/scripts/crossOSCommands.sh	/^                open_cmd='cmd.exe \/c start ""'$/;"	v
open_cmd	zpwr/scripts/crossOSCommands.sh	/^                open_cmd='nohup xdg-open'$/;"	v
open_file	zpwr/.tmux/powerline/lib/config.py	/^def open_file(path):$/;"	f
open_file	zpwr/.tmux/powerline/lint/__init__.py	/^def open_file(path):$/;"	f
openmygh	zpwr/.shell_aliases_functions.sh	/^openmygh(){$/;"	f
operator	zpwr/.tmux/powerline/renderer.py	/^import operator$/;"	i
operator	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^import operator$/;"	i
opt	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		opt="-l "$/;"	v
opt	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local opt=""$/;"	v
option	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local option=$1$/;"	v
option	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local option="$(get_tmux_option "$pane_contents_option" "off")"$/;"	v
option	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    local option="$1"$/;"	v
option	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local option=$1$/;"	v
option	zpwr/.tmux/plugins/tpm/tpm	/^	local option="$1"$/;"	v
option_bash	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local option_bash="$(get_tmux_option "$bash_history_option" "off")"$/;"	v
option_shell	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local option_shell="$(get_tmux_option "$shell_history_option" "off")"$/;"	v
option_value	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^	local option_value="$(get_tmux_option "$option")"$/;"	v
option_value	zpwr/.tmux/plugins/tmux-battery/scripts/helpers.sh	/^	local option_value="$(tmux show-option -gqv "$option")"$/;"	v
option_value	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^	local option_value="$(get_tmux_option "$option")"$/;"	v
option_value	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^	local option_value=$(tmux show-option -gqv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local option_value=$(tmux show-option -gqv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local option_value=$(tmux show-option -gqv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local option_value=$(tmux show-option -gv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local option_value=$(tmux show-option -sv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    option_value=$(tmux show-option -gqv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local option_value=$(tmux show-option -gqv "$option")$/;"	v
option_value	zpwr/.tmux/plugins/tpm/tpm	/^	local option_value="$(tmux show-option -gqv "$option")"$/;"	v
option_value_not_changed	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^option_value_not_changed() {$/;"	f
optional	zpwr/.tmux/powerline/lint/spec.py	/^	def optional(self):$/;"	m	class:Spec
options	help2comp.py	/^        options = parse_options(sys.stdin.readlines())$/;"	v
options	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local options="$(get_tmux_option "$auto_start_config_option" "$auto_start_config_default")"$/;"	v
options	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local options="$1"$/;"	v
options	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local options="$(get_tmux_option "$auto_start_config_option" "${auto_start_config_default}")"$/;"	v
options	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local options="$@"$/;"	v
options	zpwr/scripts/help2comp.py	/^        options = parse_options(sys.stdin.readlines())$/;"	v
optstring	directoryContentsSize.sh	/^optstring=shta$/;"	v
optstring	gitgo.sh	/^optstring=p:hcl$/;"	v
optstring	myWatchMaintainEscapes.sh	/^optstring=dhl:$/;"	v
optstring	myWatchNoBlink.sh	/^optstring=bh$/;"	v
optstring	myWatchNoBlinkColorized.sh	/^optstring=bh$/;"	v
optstring	mywatch.sh	/^optstring=dh$/;"	v
optstring	zpwr/scripts/directoryContentsSize.sh	/^optstring=shta$/;"	v
optstring	zpwr/scripts/gitgo.sh	/^optstring=p:hcl$/;"	v
optstring	zpwr/scripts/myWatchMaintainEscapes.sh	/^optstring=dhl:$/;"	v
optstring	zpwr/scripts/myWatchNoBlink.sh	/^optstring=bh$/;"	v
optstring	zpwr/scripts/myWatchNoBlinkColorized.sh	/^optstring=bh$/;"	v
optstring	zpwr/scripts/mywatch.sh	/^optstring=dh$/;"	v
orange	zpwr/.vim/colors/rakr-light.vim	/^  let orange      = "f49c12"$/;"	v
orig	zpwr/.shell_aliases_functions.sh	/^    orig="$1"$/;"	v
origin	gitgo.sh	/^    local origin="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
origin	zpwr/scripts/gitgo.sh	/^    local origin="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
original_command_contains_session_flag	zpwr/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^original_command_contains_session_flag() {$/;"	f
original_command_contains_session_flag	zpwr/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^original_command_contains_session_flag() {$/;"	f
original_command_wo_junk_vars	zpwr/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^original_command_wo_junk_vars() {$/;"	f
original_file	zpwr/.tmux/plugins/tmux-resurrect/tests/helpers/resurrect_helpers.sh	/^	local original_file="$1"$/;"	v
original_session	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^				original_session="$session_name"$/;"	v
os	boiler_gen.py	/^import os$/;"	i
os	fzfPreviewOptsCommon.sh	/^os="$(uname -s)"$/;"	v
os	fzfPreviewOptsCommon2Pos.sh	/^os="$(uname -s)"$/;"	v
os	mantozshcomp.py	/^    import subprocess, os$/;"	i
os	mantozshcomp.py	/^import os.path$/;"	i
os	zpwr/.tmux/powerline/__init__.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/bindings/config.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/config.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/inotify.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/monotonic.py	/^			import os$/;"	i
os	zpwr/.tmux/powerline/lib/path.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/shell.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/vcs/git.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/watcher/stat.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lib/watcher/uv.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lint/__init__.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/lint/checks.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/pdb.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/renderer.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/common/bat.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/common/env.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/common/net.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/common/sys.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/pdb.py	/^import os$/;"	i
os	zpwr/.tmux/powerline/segments/vim/__init__.py	/^import os$/;"	i
os	zpwr/scripts/boiler_gen.py	/^import os$/;"	i
os	zpwr/scripts/fzfPreviewOptsCommon.sh	/^os="$(uname -s)"$/;"	v
os	zpwr/scripts/fzfPreviewOptsCommon2Pos.sh	/^os="$(uname -s)"$/;"	v
os	zpwr/scripts/mantozshcomp.py	/^    import subprocess, os$/;"	i
os	zpwr/scripts/mantozshcomp.py	/^import os.path$/;"	i
ost	zpwr/.shell_aliases_functions.sh	/^        ost="$(uname | tr A-Z a-z)_amd64"$/;"	v
osx_auto_start_file_name	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^osx_auto_start_file_name="Tmux.Start.plist"$/;"	v
osx_auto_start_file_path	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^osx_auto_start_file_path="${HOME}\/Library\/LaunchAgents\/${osx_auto_start_file_name}"$/;"	v
out	inotifyWatchLogAndEmailIfNAS.sh	/^        out=$(tail -1 "$file" | grep "nas")$/;"	v
out	macOnly/commandToColors.sh	/^out="$(eval $command)"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^                    out="$($colo $exe whois "$noproto")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^                    out="$($exe whois "$noproto")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^                    out="$($exe whois "$primary")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^                out="$($colo $exe host "$noproto")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^                out="$($exe host "$noproto")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^            out="$(echo "$@" | python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^        out="$(ps -ef)"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^        out="$(ps aux)"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^        out=$(echo "$file" | sed -n "$search"p |  wc -l | tr -d ' ')$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^    out="$(curl -u "$user" -X DELETE "https:\/\/api.github.com\/repos\/$user\/$repo")"$/;"	v
out	zpwr/.shell_aliases_functions.sh	/^    out="$(eval "$@")"$/;"	v
out	zpwr/.tmux/google.sh	/^                out="$(paste.exe)"$/;"	v
out	zpwr/.tmux/google.sh	/^                out="$(powershell.exe -c 'Get-Clipboard'| python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.tmux/google.sh	/^                out="$(xclip -o -sel clip | python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.tmux/google.sh	/^                out="$(xclip -o -sel clip)"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(paste.exe)"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(pbpaste | python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(pbpaste)"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(powershell.exe -c 'Get-Clipboard'| python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(xclip -o -sel clip | python3 -c 'import urllib.parse; print(urllib.parse.quote(input(), safe=""))')"$/;"	v
out	zpwr/.tmux/google.sh	/^            out="$(xclip -o -sel clip)"$/;"	v
out	zpwr/scripts/inotifyWatchLogAndEmailIfNAS.sh	/^        out=$(tail -1 "$file" | grep "nas")$/;"	v
out	zpwr/scripts/macOnly/commandToColors.sh	/^out="$(eval $command)"$/;"	v
outFile	zpwr/.shell_aliases_functions.sh	/^    outFile=out.gif$/;"	v
out_u	zpwr/.tmux/powerline/lib/unicode.py	/^def out_u(s):$/;"	f
out_u	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from powerline.lib.unicode import out_u$/;"	i
out_u	zpwr/.tmux/powerline/segments/common/env.py	/^from powerline.lib.unicode import out_u$/;"	i
out_u	zpwr/.tmux/powerline/segments/common/players.py	/^from powerline.lib.unicode import out_u$/;"	i
out_u	zpwr/.tmux/powerline/segments/shell.py	/^from powerline.lib.unicode import out_u$/;"	i
outdated	pipUpdater.sh	/^    outdated=$(python3 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	pipUpdater.sh	/^    outdated=$(python3 -m pip list --outdated | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	pipUpdater.sh	/^outdated=$(python2 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	updater.sh	/^        outdated=$(python2 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	updater.sh	/^        outdated=$(python3 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	zpwr/scripts/pipUpdater.sh	/^    outdated=$(python3 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	zpwr/scripts/pipUpdater.sh	/^    outdated=$(python3 -m pip list --outdated | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	zpwr/scripts/pipUpdater.sh	/^outdated=$(python2 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	zpwr/scripts/updater.sh	/^        outdated=$(python2 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
outdated	zpwr/scripts/updater.sh	/^        outdated=$(python3 -m pip list --outdated --format=columns | sed -n '3,$p' | awk '{print $1}')$/;"	v
output	macOnly/figletRandomFontOnce.sh	/^    output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
output	macOnly/menkeTechRandomFont.sh	/^    output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
output	macOnly/splitReg.sh	/^output=$(cat $file)$/;"	v
output	myWatchMaintainEscapes.sh	/^        output="$(script -q \/dev\/null $1 | tr -d '\\r' | cat)"$/;"	v
output	myWatchMaintainEscapes.sh	/^        output="$(script -q \/dev\/null -c "$1" | tr -d '\\r' | cat)"$/;"	v
output	mywatch.sh	/^    output=$(eval "$1")$/;"	v
output	remoteRepoMonitorDaemon.sh	/^    output=$(git log HEAD..origin\/dev --oneline)$/;"	v
output	remoteRepoMonitorDaemon.sh	/^    output=$(git log HEAD..origin\/master --oneline)$/;"	v
output	splitReg.sh	/^output=$(cat $file)$/;"	v
output	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^    output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
output	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^    output="$(echo $TEXT_TO_DISPLAY | figlet -f $font)"$/;"	v
output	zpwr/scripts/macOnly/splitReg.sh	/^output=$(cat $file)$/;"	v
output	zpwr/scripts/myWatchMaintainEscapes.sh	/^        output="$(script -q \/dev\/null $1 | tr -d '\\r' | cat)"$/;"	v
output	zpwr/scripts/myWatchMaintainEscapes.sh	/^        output="$(script -q \/dev\/null -c "$1" | tr -d '\\r' | cat)"$/;"	v
output	zpwr/scripts/mywatch.sh	/^    output=$(eval "$1")$/;"	v
output	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^    output=$(git log HEAD..origin\/dev --oneline)$/;"	v
output	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^    output=$(git log HEAD..origin\/master --oneline)$/;"	v
output	zpwr/scripts/splitReg.sh	/^output=$(cat $file)$/;"	v
outputDir	dsDownloader.sh	/^outputDir="Desktop"$/;"	v
outputDir	rpiDownloader.sh	/^outputDir="Desktop"$/;"	v
outputDir	zpwr/scripts/dsDownloader.sh	/^outputDir="Desktop"$/;"	v
outputDir	zpwr/scripts/rpiDownloader.sh	/^outputDir="Desktop"$/;"	v
output_complete_command	mantozshcomp.py	/^def output_complete_command(cmdname, args, description, output_list, argument):$/;"	f
output_complete_command	zpwr/scripts/mantozshcomp.py	/^def output_complete_command(cmdname, args, description, output_list, argument):$/;"	f
output_lister	zpwr/.tmux/powerline/listers/i3wm.py	/^def output_lister(pl, segment_info):$/;"	f
output_prefix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        output_prefix="$6" \\$/;"	v
output_prefix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        output_prefix=$(tmux_option "$output_prefix" " ") \\$/;"	v
output_prefix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^output_prefix='@prefix_highlight_output_prefix'$/;"	v
output_suffix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        output_suffix="$7" \\$/;"	v
output_suffix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        output_suffix=$(tmux_option "$output_suffix" " ") \\$/;"	v
output_suffix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^output_suffix='@prefix_highlight_output_suffix'$/;"	v
override_copy_command	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^override_copy_command() {$/;"	f
override_copy_command_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^override_copy_command_default=""$/;"	v
override_copy_command_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^override_copy_command_option="@override_copy_command"$/;"	v
overwrite_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^overwrite_option="@resurrect-never-overwrite"$/;"	v
overwrite_option_value	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local overwrite_option_value="$(get_tmux_option "$overwrite_option" "")"$/;"	v
p	zpwr/.shell_aliases_functions.sh	/^p(){$/;"	f
pane	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local pane="$1"$/;"	v
pane_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local pane_command="$2"$/;"	v
pane_command	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^    pane_command="$(tmux display-message -p '#{pane_current_command}')"$/;"	v
pane_content_files_restore_from_archive	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_content_files_restore_from_archive() {$/;"	f
pane_contents_archive_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_archive_file() {$/;"	f
pane_contents_area	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local pane_contents_area="$(get_tmux_option "$pane_contents_area_option" "$default_pane_contents_area")"$/;"	v
pane_contents_area	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local pane_contents_area="$3"$/;"	v
pane_contents_area_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^pane_contents_area_option="@resurrect-pane-contents-area"$/;"	v
pane_contents_create_archive	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_create_archive() {$/;"	f
pane_contents_dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_dir() {$/;"	f
pane_contents_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_file() {$/;"	f
pane_contents_file_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_file_exists() {$/;"	f
pane_contents_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^pane_contents_option="@resurrect-capture-pane-contents"$/;"	v
pane_creation_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		local pane_creation_command="$(pane_creation_command "$session_name" "$window_number" "$pane_index")"$/;"	v
pane_creation_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^pane_creation_command() {$/;"	f
pane_current_path	zpwr/.tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh	/^pane_current_path() {$/;"	f
pane_custom_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local pane_custom_id="${session_name}:${window_number}:${pane_index}"$/;"	v
pane_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^pane_exists() {$/;"	f
pane_format	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_format() {$/;"	f
pane_full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local pane_full_command="$1"$/;"	v
pane_full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^				pane_full_command="$(remove_first_char "$pane_full_command")"$/;"	v
pane_full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		pane_full_command="$(remove_first_char "$pane_full_command")"$/;"	v
pane_full_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_full_command() {$/;"	f
pane_has_any_content	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_has_any_content() {$/;"	f
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local pane_id="$1"$/;"	v
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local pane_id="$2"$/;"	v
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^				local pane_id="$(tmux display-message -p -F "#{pane_id}" -t "$session_name:$window_number")"$/;"	v
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^				local pane_id="$session_name:$window_number.$pane_index"$/;"	v
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local pane_id="${session_name}:${window_number}.${pane_index}"$/;"	v
pane_id	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local pane_id="$1"$/;"	v
pane_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local pane_index="$4"$/;"	v
pane_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local pane_index="$3"$/;"	v
pane_index	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local pane_index="$5"$/;"	v
pane_pid	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local pane_pid="$1"$/;"	v
parse_and_output_man_pages	mantozshcomp.py	/^def parse_and_output_man_pages(paths, output_directory, show_progress):$/;"	f
parse_and_output_man_pages	zpwr/scripts/mantozshcomp.py	/^def parse_and_output_man_pages(paths, output_directory, show_progress):$/;"	f
parse_args	zpwr/.tmux/powerline/commands/config.py	/^	def parse_args(self, *args, **kwargs):$/;"	m	class:ConfigArgParser
parse_document_content	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_document_content(self):$/;"	m	class:Parser
parse_document_end	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_document_end(self):$/;"	m	class:Parser
parse_document_start	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_document_start(self):$/;"	m	class:Parser
parse_flow_mapping_first_key	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_mapping_first_key(self):$/;"	m	class:Parser
parse_flow_mapping_key	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_mapping_key(self, first=False):$/;"	m	class:Parser
parse_flow_mapping_value	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_mapping_value(self):$/;"	m	class:Parser
parse_flow_sequence_entry	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_sequence_entry(self, first=False):$/;"	m	class:Parser
parse_flow_sequence_entry_mapping_end	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_sequence_entry_mapping_end(self):$/;"	m	class:Parser
parse_flow_sequence_first_entry	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_flow_sequence_first_entry(self):$/;"	m	class:Parser
parse_implicit_document_start	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_implicit_document_start(self):$/;"	m	class:Parser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:ManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type1ManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type2ManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type3ManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type4ManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:TypeDarwinManParser
parse_man_page	mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:TypeDeroffManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:ManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type1ManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type2ManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type3ManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:Type4ManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:TypeDarwinManParser
parse_man_page	zpwr/scripts/mantozshcomp.py	/^    def parse_man_page(self, manpage):$/;"	m	class:TypeDeroffManParser
parse_manpage_at_path	mantozshcomp.py	/^def parse_manpage_at_path(manpage_path, output_directory):$/;"	f
parse_manpage_at_path	zpwr/scripts/mantozshcomp.py	/^def parse_manpage_at_path(manpage_path, output_directory):$/;"	f
parse_node	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_node(self, indentless_sequence=False):$/;"	m	class:Parser
parse_options	help2comp.py	/^def parse_options(help_text):$/;"	f
parse_options	zpwr/scripts/help2comp.py	/^def parse_options(help_text):$/;"	f
parse_override_var	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.overrides import parsedotval, parse_override_var$/;"	i
parse_override_var	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.overrides import parsedotval, parse_override_var$/;"	i
parse_override_var	zpwr/.tmux/powerline/lib/overrides.py	/^def parse_override_var(s):$/;"	f
parse_override_var	zpwr/.tmux/powerline/pdb.py	/^from powerline.lib.overrides import parse_override_var$/;"	i
parse_stream_start	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def parse_stream_start(self):$/;"	m	class:Parser
parse_value	zpwr/.tmux/powerline/lib/overrides.py	/^def parse_value(s):$/;"	f
parsedotval	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.overrides import parsedotval, parse_override_var$/;"	i
parsedotval	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.overrides import parsedotval, parse_override_var$/;"	i
parsedotval	zpwr/.tmux/powerline/lib/overrides.py	/^def parsedotval(s):$/;"	f
parser	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	parser = ArgumentParser(description='Powerline lemonbar bindings.')$/;"	v
parser	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	parser = get_argparser()$/;"	v
partial	zpwr/.tmux/powerline/lib/shell.py	/^from functools import partial$/;"	i
partial	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	from functools import partial$/;"	i
partial	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from functools import partial$/;"	i
partial	zpwr/.tmux/powerline/lint/__init__.py	/^from functools import partial$/;"	i
partition	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def partition(self, sep):$/;"	m	class:MarkedUnicode
pass_count	secureDelete.sh	/^    pass_count=1$/;"	v
pass_count	zpwr/scripts/secureDelete.sh	/^    pass_count=1$/;"	v
passes	secureDelete.sh	/^passes=7     # Number of file-shredding passes.$/;"	v
passes	zpwr/scripts/secureDelete.sh	/^passes=7     # Number of file-shredding passes.$/;"	v
paste_cmd	crossOSCommands.sh	/^                paste_cmd="powershell.exe -c 'Get-Clipboard'"$/;"	v
paste_cmd	crossOSCommands.sh	/^                paste_cmd='xclip -o -sel clip'$/;"	v
paste_cmd	crossOSCommands.sh	/^            paste_cmd="powershell.exe -c 'Get-Clipboard'"$/;"	v
paste_cmd	crossOSCommands.sh	/^            paste_cmd='pbpaste'$/;"	v
paste_cmd	zpwr/scripts/crossOSCommands.sh	/^                paste_cmd="powershell.exe -c 'Get-Clipboard'"$/;"	v
paste_cmd	zpwr/scripts/crossOSCommands.sh	/^                paste_cmd='xclip -o -sel clip'$/;"	v
paste_cmd	zpwr/scripts/crossOSCommands.sh	/^            paste_cmd="powershell.exe -c 'Get-Clipboard'"$/;"	v
paste_cmd	zpwr/scripts/crossOSCommands.sh	/^            paste_cmd='pbpaste'$/;"	v
paste_indicator	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def paste_indicator(pl, segment_info, text='PASTE'):$/;"	f
path	mantozshcomp.py	/^import os.path$/;"	i
path	shebangChanger.sh	/^path="#!\/usr\/bin\/env $executableProgram"$/;"	v
path	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^		local path="$(get_tmux_option "$resurrect_dir_option" "$default_resurrect_dir")"$/;"	v
path	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local path="$1"$/;"	v
path	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^	local path="$(tpm_path)"$/;"	v
path	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^def path(pl):$/;"	f
path	zpwr/scripts/mantozshcomp.py	/^import os.path$/;"	i
path	zpwr/scripts/shebangChanger.sh	/^path="#!\/usr\/bin\/env $executableProgram"$/;"	v
pathogen#cycle_filetype	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#expand(pattern, ...) abort$/;"	f
pathogen#fnameescape	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort$/;"	f
pathogen#runtime_prepend_subdirectories	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	zpwr/.vim/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
pdb	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^import pdb$/;"	i
pdb	zpwr/.tmux/powerline/renderers/pdb.py	/^	pdb = None$/;"	v	class:PDBRenderer
peek	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def peek(self, index=0):$/;"	m	class:Reader
peek_event	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^	def peek_event(self):$/;"	m	class:Parser
peek_token	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def peek_token(self):$/;"	m	class:Scanner
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	percentage=$($CURRENT_DIR\/battery_percentage.sh | sed -e 's\/%\/\/')$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_graph.sh	/^	local percentage=$($CURRENT_DIR\/battery_percentage.sh)$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_graph.sh	/^	local percentage=$1$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^	percentage=$($CURRENT_DIR\/battery_percentage.sh | sed -e 's\/%\/\/')$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^		local percentage=$(upower -i $battery | awk '\/percentage:\/ {print $2}')$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    percentage=$($CURRENT_DIR\/battery_percentage.sh | sed -e 's\/%\/\/')$/;"	v
percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    percentage=$($CURRENT_DIR\/battery_percentage.sh | sed -e 's\/%\/\/')$/;"	v
perlOutdated	updater.sh	/^        perlOutdated=$(cpan-outdated -p -L "$PERL5LIB")$/;"	v
perlOutdated	updaterNoPip.sh	/^        perlOutdated=$(cpan-outdated -p -L "$PERL5LIB")$/;"	v
perlOutdated	zpwr/scripts/updater.sh	/^        perlOutdated=$(cpan-outdated -p -L "$PERL5LIB")$/;"	v
perlOutdated	zpwr/scripts/updaterNoPip.sh	/^        perlOutdated=$(cpan-outdated -p -L "$PERL5LIB")$/;"	v
perlfile	zpwr/common.sh	/^    perlfile="$INSTALLER_DIR\/scripts\/boxPrint.pl"$/;"	v
perlremovespaces	zpwr/.shell_aliases_functions.sh	/^perlremovespaces(){$/;"	f
perlscript	autoUpdater.sh	/^    perlscript=$($/;"	v
perlscript	zpwr/scripts/autoUpdater.sh	/^    perlscript=$($/;"	v
peterRiver	zpwr/.vim/colors/rakr-light.vim	/^  let peterRiver  = "3498db"$/;"	v
php_htmlInStrings	zpwr/.vim/colors/zephyr.vim	/^let php_htmlInStrings = 0$/;"	v
php_sql_query	zpwr/.vim/colors/zephyr.vim	/^let php_sql_query = 0$/;"	v
pick_gradient_value	zpwr/.tmux/powerline/colorscheme.py	/^def pick_gradient_value(grad_list, gradient_level):$/;"	f
picounter	zpwr/.shell_aliases_functions.sh	/^    picounter=1$/;"	v
pid	fsWatchLongRunning.sh	/^            pid=$!$/;"	v
pid	fsWatchLongRunning.sh	/^        pid=$!$/;"	v
pid	tailZOU.sh	/^        pid=$!$/;"	v
pid	tailZOU.sh	/^    pid=$!$/;"	v
pid	zpwr/scripts/fsWatchLongRunning.sh	/^            pid=$!$/;"	v
pid	zpwr/scripts/fsWatchLongRunning.sh	/^        pid=$!$/;"	v
pid	zpwr/scripts/tailZOU.sh	/^        pid=$!$/;"	v
pid	zpwr/scripts/tailZOU.sh	/^    pid=$!$/;"	v
pids	CPU_Stresser.sh	/^        pids="$pids $!"$/;"	v
pids	fdswap.sh	/^pids=$*$/;"	v
pids	zpwr/scripts/CPU_Stresser.sh	/^        pids="$pids $!"$/;"	v
pids	zpwr/scripts/fdswap.sh	/^pids=$*$/;"	v
pipe	readFIFO.sh	/^pipe=$HOME\/Desktop\/testpipe$/;"	v
pipe	readFIFO.sh	/^pipe=\/tmp\/testpipe$/;"	v
pipe	zpwr/scripts/readFIFO.sh	/^pipe=$HOME\/Desktop\/testpipe$/;"	v
pipe	zpwr/scripts/readFIFO.sh	/^pipe=\/tmp\/testpipe$/;"	v
pirun	zpwr/.shell_aliases_functions.sh	/^pirun(){$/;"	f
pkg	zpwr/.shell_aliases_functions.sh	/^    local pkg=$1;$/;"	v
pl	zpwr/.tmux/powerline/lint/__init__.py	/^	pl=Spec().error('pl object must be set by powerline').optional(),$/;"	v
place_holder	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^place_holder="\\#{prefix_highlight}"$/;"	v
plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^	local plane="$1"$/;"	v
plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	local plane="$1"$/;"	v
plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	local plane="$1"$/;"	v
plane_primary	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	local plane_primary="$1"$/;"	v
plane_secondary	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^		plane_secondary="bg"$/;"	v
plane_secondary	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^		plane_secondary="fg"$/;"	v
plane_secondary	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	local plane_secondary=""$/;"	v
platform	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local platform=$(uname)$/;"	v
platform	zpwr/.tmux/powerline/pdb.py	/^import platform$/;"	i
platform	zpwr/.tmux/powerline/renderers/pdb.py	/^import platform$/;"	i
plm_bk	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local plm_bk="$(bindkey -lL ${_POWERLINE_MODE})"$/;"	v
plugin	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^		plugin="$(plugin_name_helper "${plugin_directory}")"$/;"	v
plugin	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local plugin="$1"$/;"	v
plugin	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^	local plugin="$1"$/;"	v
plugin	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^	local plugin="$1"$/;"	v
plugin_already_installed	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_already_installed() {$/;"	f
plugin_basename	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local plugin_basename="$(basename "$plugin")"$/;"	v
plugin_dir_exists	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^plugin_dir_exists() {$/;"	f
plugin_name	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^			local plugin_name="$(plugin_name_helper "$plugin")"$/;"	v
plugin_name	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local plugin_name="$(plugin_name_helper "$plugin")"$/;"	v
plugin_name	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local plugin_name="${plugin_basename%.git}"$/;"	v
plugin_name	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^	local plugin_name="$(plugin_name_helper "$plugin")"$/;"	v
plugin_name	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^		local plugin_name="$(plugin_name_helper "$plugin")"$/;"	v
plugin_name_helper	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_name_helper() {$/;"	f
plugin_path	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local plugin_path="$(plugin_path_helper "$plugin")"$/;"	v
plugin_path	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^		plugin_path="$(plugin_path_helper "$plugin")"$/;"	v
plugin_path	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^	local plugin_path="$1"$/;"	v
plugin_path	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^	local plugin_path="$(plugin_path_helper "$plugin")"$/;"	v
plugin_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	local plugin_path="$PLUGINS_DIR\/tmux_test_plugin\/"$/;"	v
plugin_path_helper	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_path_helper() {$/;"	f
plugin_tmux_files	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^	local plugin_tmux_files="$plugin_path*.tmux"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^	local plugins="$(tpm_plugins_list_helper)"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^	plugins="$(tpm_plugins_list_helper)"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^	local plugins="$(tpm_plugins_list_helper)"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^	local plugins="$(tpm_plugins_list_helper)"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^	local plugins="$(tpm_plugins_list_helper)"$/;"	v
plugins	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^	local plugins="$*"$/;"	v
pluginsinstall	zpwr/install.sh	/^pluginsinstall(){$/;"	f
pmset_battery_remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^pmset_battery_remaining_time() {$/;"	f
pomegranate	zpwr/.vim/colors/rakr-light.vim	/^  let pomegranate = "c0392b"$/;"	v
position	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def position(pl, position_strings={'top': 'Top', 'bottom': 'Bot', 'all': 'All'}, gradient=False):$/;"	f
post	zpwr/.shell_aliases_functions.sh	/^post(){$/;"	f
postfix	zpwr/.shell_aliases_functions.sh	/^    postfix="$1"$/;"	v
powerline	zpwr/.tmux/powerline/bindings/awesome/powerline.lua	/^function powerline(mode, widget) end$/;"	f
powerline	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	powerline = LemonbarPowerline()$/;"	v
powerline	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	powerline = I3Powerline(name, renderer_module='i3bar')$/;"	v
powerline	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^	def powerline(self, line):$/;"	m	class:PowerlineMagics
powerline	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline = lambda: None$/;"	v	class:ShutdownHook
powerline	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	powerline = LemonbarPowerline()$/;"	v
powerline	zpwr/.tmux/powerline/commands/config.py	/^import powerline.bindings.config as config$/;"	i
powerline#debug#profile_pyeval	zpwr/.tmux/powerline/bindings/vim/autoload/powerline/debug.vim	/^function powerline#debug#profile_pyeval(s)$/;"	f
powerline#debug#write_profile	zpwr/.tmux/powerline/bindings/vim/autoload/powerline/debug.vim	/^function powerline#debug#write_profile(fname)$/;"	f
powerline_decode_error	zpwr/.tmux/powerline/lib/unicode.py	/^def powerline_decode_error(e):$/;"	f
powerline_encode_strwidth_error	zpwr/.tmux/powerline/lib/unicode.py	/^	def powerline_encode_strwidth_error(e):$/;"	f	function:register_strwidth_error
powerline_is_prompt	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_is_prompt = False$/;"	v	class:PowerlinePromptOut
powerline_is_prompt	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_is_prompt = True$/;"	v	class:PowerlinePrompt1
powerline_is_prompt	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_is_prompt = True$/;"	v	class:PowerlinePrompt2
powerline_prompt_type	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_prompt_type = 'in'$/;"	v	class:PowerlinePrompt1
powerline_prompt_type	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_prompt_type = 'in2'$/;"	v	class:PowerlinePrompt2
powerline_prompt_type	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	powerline_prompt_type = 'out'$/;"	v	class:PowerlinePromptOut
powerline_vim_strtrans_error	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def powerline_vim_strtrans_error(e):$/;"	f
prch	mantozshcomp.py	/^    def prch(self, idx):$/;"	m	class:Deroffer
prch	zpwr/scripts/mantozshcomp.py	/^    def prch(self, idx):$/;"	m	class:Deroffer
pre	zpwr/.shell_aliases_functions.sh	/^pre(){$/;"	f
precmd	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def precmd(self):$/;"	m	class:ZshPowerline
prefix	zpwr/.shell_aliases_functions.sh	/^    prefix="$1"$/;"	v
prefix	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        prefix="$2" \\$/;"	v
prefix	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local prefix="$(prefix)"$/;"	v
prefix	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix() {$/;"	f
prefix	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def prefix(self, length=1):$/;"	m	class:Reader
prefix_highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        prefix_highlight="#[fg=$fg_color,bg=$bg_color]" \\$/;"	v
prefix_highlight	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        prefix_highlight="$3" \\$/;"	v
prefix_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        prefix_prompt=$(tmux_option "$prefix_prompt" "$default_prefix_prompt") \\$/;"	v
prefix_prompt	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^prefix_prompt='@prefix_highlight_prefix_prompt'$/;"	v
prefix_without_ctrl	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^	local prefix_without_ctrl="$(prefix_without_ctrl)"$/;"	v
prefix_without_ctrl	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix_without_ctrl() {$/;"	f
prettyPrint	CPU_Stresser.sh	/^prettyPrint() {$/;"	f
prettyPrint	clearList.sh	/^prettyPrint(){$/;"	f
prettyPrint	colorLogger.sh	/^prettyPrint() {$/;"	f
prettyPrint	macOnly/resetWIFI.sh	/^prettyPrint() {$/;"	f
prettyPrint	macOnly/tor.sh	/^prettyPrint() {$/;"	f
prettyPrint	macOnly/tutorialConfigUpdater.sh	/^prettyPrint() {$/;"	f
prettyPrint	rpiSoftwareUpdater.sh	/^prettyPrint() {$/;"	f
prettyPrint	textmessage.sh	/^prettyPrint() {$/;"	f
prettyPrint	updater.sh	/^prettyPrint() {$/;"	f
prettyPrint	updaterNoPip.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/.shell_aliases_functions.sh	/^prettyPrint(){$/;"	f
prettyPrint	zpwr/common.sh	/^prettyPrint(){$/;"	f
prettyPrint	zpwr/scripts/CPU_Stresser.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/clearList.sh	/^prettyPrint(){$/;"	f
prettyPrint	zpwr/scripts/colorLogger.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/macOnly/resetWIFI.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/macOnly/tor.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/rpiSoftwareUpdater.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/textmessage.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/updater.sh	/^prettyPrint() {$/;"	f
prettyPrint	zpwr/scripts/updaterNoPip.sh	/^prettyPrint() {$/;"	f
prettyPrintStdin	zpwr/common.sh	/^prettyPrintStdin(){$/;"	f
primary	zpwr/.shell_aliases_functions.sh	/^                    primary="$(echo "$noproto" | sed -E 's@^(.*)\\.([^.]+)\\.([^.]+)$@\\2.\\3@')"$/;"	v
primary_plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	local primary_plane="$1"$/;"	v
printD	banner.pl	/^sub printD {$/;"	s
printD	zpwr/scripts/banner.pl	/^sub printD {$/;"	s
printDate	banner.pl	/^sub printDate {$/;"	s
printDate	zpwr/scripts/banner.pl	/^sub printDate {$/;"	s
print_battery_percentage	zpwr/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh	/^print_battery_percentage() {$/;"	f
print_battery_remain	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^print_battery_remain() {$/;"	f
print_battery_status_bg	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^print_battery_status_bg() {$/;"	f
print_battery_status_fg	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^print_battery_status_fg() {$/;"	f
print_color	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^print_color() {$/;"	f
print_color_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^print_color_charge() {$/;"	f
print_color_status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^print_color_status() {$/;"	f
print_cycles	zpwr/.tmux/powerline/lib/debug.py	/^def print_cycles(objects, outstream=sys.stdout, show_progress=False):$/;"	f
print_function	zpwr/.tmux/powerline/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/pdb/__main__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/colorscheme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/commands/config.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/commands/daemon.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/commands/lemonbar.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/commands/lint.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/commands/main.py	/^from __future__ import (division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/debug.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/dict.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/encoding.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/memoize.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/monotonic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/overrides.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/path.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/threaded.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/unicode.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/url.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/vcs/git.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/checks.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/context.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/imp.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/inspect.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/error.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/events.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/selfcheck.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/lint/spec.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/listers/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/listers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/listers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/i3bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/bash.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/readline.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/renderers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segment.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/bat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/env.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/mail.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/net.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/players.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/sys.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/time.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/vcs.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/common/wthr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/selectors/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/theme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_function	zpwr/.tmux/powerline/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_graph	zpwr/.tmux/plugins/tmux-battery/scripts/battery_graph.sh	/^print_graph() {$/;"	f
print_icon	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon.sh	/^print_icon() {$/;"	f
print_icon_charge	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_charge.sh	/^print_icon_charge() {$/;"	f
print_icon_status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^print_icon_status() {$/;"	f
print_opts	zpwr/.vim/colors/marklar.vim	/^        function! s:print_opts(...)$/;"	f
print_path	zpwr/.tmux/powerline/lib/debug.py	/^	def print_path(path):$/;"	f	function:print_cycles
print_status	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^print_status() {$/;"	f
printable	zpwr/.tmux/powerline/lint/spec.py	/^	def printable(self, *args):$/;"	m	class:Spec
priority	zpwr/.tmux/powerline/lint/__init__.py	/^	priority=Spec().type(int, float, type(None)).optional(),$/;"	v
proceed	zpwr/common.sh	/^proceed(){$/;"	f
process	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^		process = subprocess.Popen(command, stdin=subprocess.PIPE)$/;"	v
process_csv_buffer	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def process_csv_buffer(pl, buffer, line, col, display_name):$/;"	f
process_event	zpwr/.tmux/powerline/lib/inotify.py	/^	def process_event(self, *args):$/;"	m	class:INotify
process_event	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def process_event(self, wd, mask, cookie, name):$/;"	m	class:INotifyFileWatcher
process_event	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def process_event(self, wd, mask, cookie, name):$/;"	m	class:INotifyTreeWatcher
process_segment	zpwr/.tmux/powerline/segment.py	/^def process_segment(pl, side, segment_info, parsed_segments, segment, mode, colorscheme):$/;"	f
process_segment	zpwr/.tmux/powerline/theme.py	/^from powerline.segment import gen_segment_getter, process_segment, get_fallback_segment$/;"	i
process_segment_lister	zpwr/.tmux/powerline/segment.py	/^def process_segment_lister(pl, segment_info, parsed_segments, side, mode, colorscheme,$/;"	f
progress_pid	batchRename.sh	/^    progress_pid=$!$/;"	v
progress_pid	openAll.sh	/^    progress_pid=$!$/;"	v
progress_pid	picture_finder.sh	/^    progress_pid=$!$/;"	v
progress_pid	secureDelete.sh	/^    progress_pid=$!$/;"	v
progress_pid	zpwr/scripts/batchRename.sh	/^    progress_pid=$!$/;"	v
progress_pid	zpwr/scripts/openAll.sh	/^    progress_pid=$!$/;"	v
progress_pid	zpwr/scripts/picture_finder.sh	/^    progress_pid=$!$/;"	v
progress_pid	zpwr/scripts/secureDelete.sh	/^    progress_pid=$!$/;"	v
prompt	batchRename.sh	/^    local prompt="press any key..." # user prompt$/;"	v
prompt	openAll.sh	/^    local prompt="press any key..." # user prompt$/;"	v
prompt	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	def prompt(self):$/;"	f	function:use_powerline_prompt
prompt	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^	def prompt(self, _):$/;"	f	function:use_powerline_prompt
prompt	zpwr/scripts/batchRename.sh	/^    local prompt="press any key..." # user prompt$/;"	v
prompt	zpwr/scripts/openAll.sh	/^    local prompt="press any key..." # user prompt$/;"	v
prompt_count	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def prompt_count(self):$/;"	m	class:IPythonInfo
prompt_count	zpwr/.tmux/powerline/ipython.py	/^	def prompt_count(self):$/;"	m	class:IPythonInfo
prompt_count	zpwr/.tmux/powerline/segments/ipython.py	/^def prompt_count(pl, segment_info):$/;"	f
pstreemonitor	zpwr/.shell_aliases_functions.sh	/^pstreemonitor(){$/;"	f
psutil	zpwr/.tmux/powerline/segments/common/env.py	/^	import psutil$/;"	i
psutil	zpwr/.tmux/powerline/segments/common/net.py	/^	import psutil$/;"	i
psutil	zpwr/.tmux/powerline/segments/common/sys.py	/^	import psutil$/;"	i
pull_changes	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^pull_changes() {$/;"	f
pumpkin	zpwr/.vim/colors/rakr-light.vim	/^  let pumpkin     = "d35400"$/;"	v
purpose	headerSummarizer.sh	/^    purpose="$(sed -n 6p "$file")"$/;"	v
purpose	zpwr/scripts/headerSummarizer.sh	/^    purpose="$(sed -n 6p "$file")"$/;"	v
push	about.sh	/^            push="$(git remote -v | grep zpwr | grep push | tail -n 1 | perl -pe 's@[\\t ]+@    @')"$/;"	v
push	zpwr/scripts/about.sh	/^            push="$(git remote -v | grep zpwr | grep push | tail -n 1 | perl -pe 's@[\\t ]+@    @')"$/;"	v
put_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^put_default="Y"$/;"	v
put_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^put_key() {$/;"	f
put_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^put_option="@copy_mode_put"$/;"	v
putchar	mantozshcomp.py	/^    def putchar(self, c):$/;"	m	class:Deroffer
putchar	zpwr/scripts/mantozshcomp.py	/^    def putchar(self, c):$/;"	m	class:Deroffer
pwd	zpwr/.tmux/powerline/segments/common/env.py	/^		import pwd$/;"	i
pycmd	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	from powerline.vim import get_default_pycmd, pycmd$/;"	i
pycmd	zpwr/.tmux/powerline/vim.py	/^pycmd = None$/;"	v
pygmentcolors	zpwr/.shell_aliases_functions.sh	/^pygmentcolors(){$/;"	f
python_highlight_all	zpwr/.vim/colors/256-grayvim.vim	/^let python_highlight_all = 1$/;"	v
python_highlight_all	zpwr/.vim/colors/256-jungle.vim	/^let python_highlight_all = 1$/;"	v
python_highlight_all	zpwr/.vim/colors/devbox-dark-256.vim	/^let python_highlight_all = 1$/;"	v
python_to_vim	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def python_to_vim(o):$/;"	f
python_to_vim	zpwr/.tmux/powerline/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getvar, get_vim_encoding, python_to_vim$/;"	i
python_to_vim_types	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^python_to_vim_types = {$/;"	v
pyuv	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^		pl.debug('Failed to import pyuv')$/;"	i
pyuv	zpwr/.tmux/powerline/lib/watcher/uv.py	/^pyuv = None$/;"	v
pyuv_version_info	zpwr/.tmux/powerline/lib/watcher/uv.py	/^pyuv_version_info = None$/;"	v
qu	zpwr/.shell_aliases_functions.sh	/^    qu(){$/;"	f
quickfix	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^def quickfix(matcher_info):$/;"	f
quote	zpwr/.shell_aliases_functions.sh	/^    quote='\\x1b[0;35m'$/;"	v
quoted_arg	mantozshcomp.py	/^    def quoted_arg(self):$/;"	m	class:Deroffer
quoted_arg	zpwr/scripts/mantozshcomp.py	/^    def quoted_arg(self):$/;"	m	class:Deroffer
r	zpwr/.shell_aliases_functions.sh	/^r(){$/;"	f
r	zpwr/.vim/colors/lumberjack.vim	/^function! s:r(group, style)$/;"	f
rand	zpwr/.shell_aliases_functions.sh	/^        rand=$(echo "$randscript" | perl)$/;"	v
randIndex	eyes.sh	/^    randIndex=$((RANDOM % rangePossibleIndices))$/;"	v
randIndex	macOnly/figletRandomFont.sh	/^    randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	macOnly/figletRandomFontOnce.sh	/^randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	macOnly/menkeTechRandomFont.sh	/^    randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	macOnly/randomCow.sh	/^    randIndex=$((RANDOM % rangePossibleIndices))$/;"	v
randIndex	zpwr/scripts/eyes.sh	/^    randIndex=$((RANDOM % rangePossibleIndices))$/;"	v
randIndex	zpwr/scripts/macOnly/figletRandomFont.sh	/^    randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^    randIndex=$(($RANDOM % $rangePossibleIndices))$/;"	v
randIndex	zpwr/scripts/macOnly/randomCow.sh	/^    randIndex=$((RANDOM % rangePossibleIndices))$/;"	v
random	zpwr/.vim/colors/xmaslights.vim	/^import random$/;"	m
randomCowsayCowScript	macOnly/combo.sh	/^randomCowsayCowScript="$ZPWR_SCRIPTS\/macOnly\/randomCow.sh"$/;"	v
randomCowsayCowScript	zpwr/scripts/macOnly/combo.sh	/^randomCowsayCowScript="$ZPWR_SCRIPTS\/macOnly\/randomCow.sh"$/;"	v
randomFigletFontScript	macOnly/combo.sh	/^randomFigletFontScript="$ZPWR_SCRIPTS\/macOnly\/figletRandomFontOnce.sh"$/;"	v
randomFigletFontScript	zpwr/scripts/macOnly/combo.sh	/^randomFigletFontScript="$ZPWR_SCRIPTS\/macOnly\/figletRandomFontOnce.sh"$/;"	v
random_color	zpwr/.shell_aliases_functions.sh	/^            random_color=${file_ary[$i]}$/;"	v
randscript	zpwr/.shell_aliases_functions.sh	/^        randscript="print int(rand()*$len)"$/;"	v
range	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	from __builtin__ import xrange as range$/;"	i
rangePossibleIndices	eyes.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	macOnly/figletRandomFont.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	macOnly/figletRandomFontOnce.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	macOnly/menkeTechRandomFont.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	macOnly/randomCow.sh	/^    rangePossibleIndices=${#COW_FILES[@]}$/;"	v
rangePossibleIndices	zpwr/scripts/eyes.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	zpwr/scripts/macOnly/figletRandomFont.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	zpwr/scripts/macOnly/figletRandomFontOnce.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	zpwr/scripts/macOnly/menkeTechRandomFont.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v
rangePossibleIndices	zpwr/scripts/macOnly/randomCow.sh	/^    rangePossibleIndices=${#COW_FILES[@]}$/;"	v
rcmd	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^function s:rcmd(s)$/;"	f
rdio	zpwr/.tmux/powerline/segments/common/players.py	/^rdio = with_docstring(RDIOPlayerSegment(),$/;"	v
re	help2comp.py	/^import re$/;"	i
re	mantozshcomp.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/bindings/config.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lib/vcs/git.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lint/checks.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lint/markedjson/error.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/lint/spec.py	/^	def re(self, regex, msg_func=None):$/;"	m	class:Spec
re	zpwr/.tmux/powerline/lint/spec.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/renderer.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/segments/common/bat.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/segments/common/mail.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/segments/common/net.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/segments/i3wm.py	/^import re$/;"	i
re	zpwr/.tmux/powerline/segments/vim/__init__.py	/^import re$/;"	i
re	zpwr/scripts/help2comp.py	/^import re$/;"	i
re	zpwr/scripts/mantozshcomp.py	/^import re$/;"	i
react_routine	boiler_gen.py	/^def react_routine(name):$/;"	f
react_routine	zpwr/scripts/boiler_gen.py	/^def react_routine(name):$/;"	f
read	zpwr/.tmux/powerline/lib/inotify.py	/^	def read(self, get_name=True):$/;"	m	class:INotify
read_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^					local read_command="fc -R '$history_file'; clear"$/;"	v
read_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^					local read_command="history -r '$history_file'"$/;"	v
read_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local read_command=" $history_r '$(resurrect_history_file "$pane_id" "$pane_command")'"$/;"	v
read_csv	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	def read_csv(l, dialect, fin=next):$/;"	f
read_csv	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	def read_csv(l, dialect, fin=next):$/;"	f	function:detect_text_csv_dialect
read_to_log	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^def read_to_log(pl, client):$/;"	f
readlines	zpwr/.tmux/powerline/lib/shell.py	/^def readlines(cmd, cwd):$/;"	f
readlines	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.shell import readlines$/;"	i
readonly_indicator	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def readonly_indicator(pl, segment_info, text='RO'):$/;"	f
realNum	powerTo.sh	/^realNum=$(tmux list-panes | wc -l)$/;"	v
realNum	zpwr/scripts/powerTo.sh	/^realNum=$(tmux list-panes | wc -l)$/;"	v
realpath	zpwr/.tmux/powerline/lib/path.py	/^def realpath(path):$/;"	f
realpath	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from powerline.lib.path import realpath$/;"	i
realpath	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from powerline.lib.path import realpath$/;"	i
realpath	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from powerline.lib.path import realpath$/;"	i
realpath	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from powerline.lib.path import realpath$/;"	i
recurse	zpwr/.tmux/powerline/lib/debug.py	/^	def recurse(obj, start, all, current_path):$/;"	f	function:print_cycles
red	zpwr/.shell_aliases_functions.sh	/^    red=$(tput setaf 1)$/;"	v
reduce	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	from __builtin__ import reduce$/;"	i
reduce	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	from functools import reduce$/;"	i
reduce_initial	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^	reduce_initial = []$/;"	v	class:IPythonPygmentsRenderer
ref	fzfGitOpts.sh	/^ref=$1$/;"	v
ref	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from weakref import ref$/;"	i
ref	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from weakref import ref$/;"	i
ref	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from weakref import ref$/;"	i
ref	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from weakref import WeakValueDictionary, ref$/;"	i
ref	zpwr/scripts/fzfGitOpts.sh	/^ref=$1$/;"	v
refresh	zpwr/install.sh	/^refresh(){$/;"	f
refreshers	remoteRepoMonitorDaemon.sh	/^refreshers() {$/;"	f
refreshers	zpwr/scripts/remoteRepoMonitorDaemon.sh	/^refreshers() {$/;"	f
regenAllKeybindingsCache	zpwr/.shell_aliases_functions.sh	/^regenAllKeybindingsCache(){$/;"	f
regenPowerlineLink	zpwr/.shell_aliases_functions.sh	/^regenPowerlineLink(){$/;"	f
regex	macOnly/splitReg.sh	/^regex="$1"$/;"	v
regex	splitReg.sh	/^regex="$1"$/;"	v
regex	zpwr/scripts/macOnly/splitReg.sh	/^regex="$1"$/;"	v
regex	zpwr/scripts/splitReg.sh	/^regex="$1"$/;"	v
register	zpwr/.tmux/powerline/lib/config.py	/^	def register(self, function, path):$/;"	m	class:ConfigLoader
register_buffer_cache	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def register_buffer_cache(cachedict):$/;"	f
register_common_name	zpwr/.tmux/powerline/lint/checks.py	/^def register_common_name(name, cmodule, cname):$/;"	f
register_common_names	zpwr/.tmux/powerline/lint/__init__.py	/^def register_common_names():$/;"	f
register_existing_pane	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^register_existing_pane() {$/;"	f
register_missing	zpwr/.tmux/powerline/lib/config.py	/^	def register_missing(self, condition_function, function, key):$/;"	m	class:ConfigLoader
register_strwidth_error	zpwr/.tmux/powerline/lib/unicode.py	/^def register_strwidth_error(strwidth):$/;"	f
register_strwidth_error	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.lib.unicode import unichr, register_strwidth_error$/;"	i
reload	zpwr/.tmux/powerline/__init__.py	/^	def reload(self):$/;"	m	class:Powerline
reload	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def reload():$/;"	f
reload_config	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def reload_config():$/;"	f
reload_tmux_environment	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_utils.sh	/^reload_tmux_environment() {$/;"	f
remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^		local remaining_time="$(echo $status | grep -o '[0-9]\\{1,2\\}:[0-9]\\{1,2\\}')"$/;"	v
remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^		remaining_time=$(upower -i "$battery" | grep -E '(remain|time to empty)')$/;"	v
remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^		remaining_time=$(upower -i "$battery" | grep -E 'time to full')$/;"	v
remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^	local remaining_time="$(convertmins $(apm -m))"$/;"	v
remoteDIR	macOnly/rsyncr.sh	/^remoteDIR="$2"$/;"	v
remoteDIR	zpwr/scripts/macOnly/rsyncr.sh	/^remoteDIR="$2"$/;"	v
removeSpaces	minifySpaces.pl	/^sub removeSpaces {$/;"	s
removeSpaces	zpwr/scripts/minifySpaces.pl	/^sub removeSpaces {$/;"	s
remove_first_char	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^remove_first_char() {$/;"	f
remove_groff_formatting	mantozshcomp.py	/^def remove_groff_formatting(data):$/;"	f
remove_groff_formatting	zpwr/scripts/mantozshcomp.py	/^def remove_groff_formatting(data):$/;"	f
remove_old_backups	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^remove_old_backups() {$/;"	f
remove_possible_simple_key	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def remove_possible_simple_key(self):$/;"	m	class:Scanner
rename	zpwr/.shell_aliases_functions.sh	/^rename(){$/;"	f
render	zpwr/.tmux/powerline/__init__.py	/^	def render(self, *args, **kwargs):$/;"	m	class:Powerline
render	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	def render(reschedule=False):$/;"	f
render	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^	def render(event=None, data=None, sub=None):$/;"	f
render	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^		def render(self, name, color=True, *args, **kwargs):$/;"	m	class:ShutdownHook.PowerlinePromptManager
render	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	def render(reschedule=False):$/;"	f
render	zpwr/.tmux/powerline/lib/threaded.py	/^	def render(self, update_value, update_first, key=None, after_update=False, **kwargs):$/;"	m	class:KwThreadedSegment
render	zpwr/.tmux/powerline/renderer.py	/^	def render(self, mode=None, width=None, side=None, line=0, output_raw=False, output_width=False, segment_info=None, matcher_info=None):$/;"	m	class:Renderer
render	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def render(self, **kwargs):$/;"	m	class:IPythonPre50Renderer
render	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def render(self, is_prompt, *args, **kwargs):$/;"	m	class:RendererProxy
render	zpwr/.tmux/powerline/renderers/lemonbar.py	/^	def render(self, *args, **kwargs):$/;"	m	class:LemonbarRenderer
render	zpwr/.tmux/powerline/renderers/pdb.py	/^	def render(self, **kwargs):$/;"	m	class:PDBRenderer
render	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	def render(self, segment_info, **kwargs):$/;"	m	class:ShellRenderer
render	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^	def render(self, *args, **kwargs):$/;"	m	class:KshPromptRenderer
render	zpwr/.tmux/powerline/renderers/tmux.py	/^	def render(self, width=None, segment_info={}, **kwargs):$/;"	m	class:TmuxRenderer
render	zpwr/.tmux/powerline/renderers/vim.py	/^	def render(self, window=None, window_id=None, winnr=None, is_tabline=False):$/;"	m	class:VimRenderer
render	zpwr/.tmux/powerline/segments/common/net.py	/^	def render(self, ip, **kwargs):$/;"	m	class:ExternalIpSegment
render	zpwr/.tmux/powerline/segments/common/sys.py	/^		def render(cpu_percent, pl, format='{0:.0f}%', **kwargs):$/;"	m	class:.CPULoadPercentSegment
render	zpwr/.tmux/powerline/segments/common/sys.py	/^		def render(self, cpu_percent, format='{0:.0f}%', **kwargs):$/;"	m	class:.CPULoadPercentSegment
render_above_lines	zpwr/.tmux/powerline/__init__.py	/^	def render_above_lines(self, *args, **kwargs):$/;"	m	class:Powerline
render_above_lines	zpwr/.tmux/powerline/renderer.py	/^	def render_above_lines(self, **kwargs):$/;"	m	class:Renderer
render_above_lines	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def render_above_lines(self, *args, **kwargs):$/;"	m	class:RendererProxy
render_one	zpwr/.tmux/powerline/lib/threaded.py	/^	def render_one(update_state, **kwargs):$/;"	m	class:KwThreadedSegment
render_one	zpwr/.tmux/powerline/segments/common/mail.py	/^	def render_one(unread_count, max_msgs=None, **kwargs):$/;"	m	class:EmailIMAPSegment
render_one	zpwr/.tmux/powerline/segments/common/net.py	/^	def render_one(self, idata, recv_format='DL {value:>8}', sent_format='UL {value:>8}', suffix='B\/s', si_prefix=False, **kwargs):$/;"	m	class:NetworkLoadSegment
render_one	zpwr/.tmux/powerline/segments/common/wthr.py	/^	def render_one(self, weather, icons=None, unit='C', temp_format=None, temp_coldest=-30, temp_hottest=40, **kwargs):$/;"	m	class:WeatherSegment
renderer	zpwr/.tmux/powerline/renderers/i3bar.py	/^renderer = I3barRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^renderer = RendererProxy$/;"	v
renderer	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^renderer = IPythonPygmentsRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/lemonbar.py	/^renderer = LemonbarRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/pango_markup.py	/^renderer = PangoMarkupRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/pdb.py	/^renderer = PDBRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^renderer = ShellRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/bash.py	/^renderer = BashPromptRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^renderer = KshPromptRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^renderer = ReadlineRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/readline.py	/^renderer = ReadlineRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^renderer = TcshPromptRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^renderer = ZshPromptRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/tmux.py	/^renderer = TmuxRenderer$/;"	v
renderer	zpwr/.tmux/powerline/renderers/vim.py	/^renderer = VimRenderer$/;"	v
renderer_module	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	renderer_module = '.zsh'$/;"	v	class:Args
repl	zpwr/.tmux/powerline/lint/markedjson/error.py	/^def repl(s):$/;"	f
replace	zpwr/.shell_aliases_functions.sh	/^    replace="$2"$/;"	v
replaceSpecialCharsInArgument	mantozshcomp.py	/^    def replaceSpecialCharsInArgument(self, string):$/;"	m	class:ManParser
replaceSpecialCharsInArgument	zpwr/scripts/mantozshcomp.py	/^    def replaceSpecialCharsInArgument(self, string):$/;"	m	class:ManParser
replace_cb	zpwr/.tmux/powerline/bindings/config.py	/^	def replace_cb(match):$/;"	f	function:tmux_setup
replace_env	zpwr/.tmux/powerline/bindings/config.py	/^	def replace_env(s):$/;"	f	function:tmux_setup
replace_num_pat	zpwr/.tmux/powerline/segments/common/net.py	/^	replace_num_pat = re.compile(r'[a-zA-Z]+')$/;"	v	class:NetworkLoadSegment
replacer	zpwr/.shell_aliases_functions.sh	/^replacer(){$/;"	f
repo	gitRemoteRepoInformation.sh	/^                        repo="$(echo $line | awk -F'\/' '{print $2}' | awk '{print $1}')"$/;"	v
repo	gitRemoteRepoInformation.sh	/^                        repo="$(echo $line | awk -F'\/' '{print $5}' | awk '{print $1}')"$/;"	v
repo	zpwr/.shell_aliases_functions.sh	/^                repo="$(echo $line | awk -F'\/' '{print $2}' |$/;"	v
repo	zpwr/.shell_aliases_functions.sh	/^                repo="$(echo $line | awk -F'\/' '{print $5}' |$/;"	v
repo	zpwr/scripts/gitRemoteRepoInformation.sh	/^                        repo="$(echo $line | awk -F'\/' '{print $2}' | awk '{print $1}')"$/;"	v
repo	zpwr/scripts/gitRemoteRepoInformation.sh	/^                        repo="$(echo $line | awk -F'\/' '{print $5}' | awk '{print $1}')"$/;"	v
repoFile	boiler_gen.py	/^    repoFile = f'{name}Repository.java'$/;"	v
repoFile	zpwr/scripts/boiler_gen.py	/^    repoFile = f'{name}Repository.java'$/;"	v
repo_statuses_str	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	repo_statuses_str = (None, 'D ', ' U', 'DU')$/;"	v	class:Repository
reponame	zpwr/.shell_aliases_functions.sh	/^        reponame="$1"$/;"	v
request_or_macro	mantozshcomp.py	/^    def request_or_macro(self):$/;"	m	class:Deroffer
request_or_macro	zpwr/scripts/mantozshcomp.py	/^    def request_or_macro(self):$/;"	m	class:Deroffer
request_or_macro2	mantozshcomp.py	/^    def request_or_macro2(self):$/;"	m	class:Deroffer
request_or_macro2	zpwr/scripts/mantozshcomp.py	/^    def request_or_macro2(self):$/;"	m	class:Deroffer
required	zpwr/.tmux/powerline/lint/spec.py	/^	def required(self):$/;"	m	class:Spec
required_keys	zpwr/.tmux/powerline/lint/checks.py	/^required_keys = {$/;"	v
requires_filesystem_watcher	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.theme import requires_segment_info, requires_filesystem_watcher$/;"	i
requires_filesystem_watcher	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.theme import requires_segment_info, requires_filesystem_watcher$/;"	i
requires_filesystem_watcher	zpwr/.tmux/powerline/theme.py	/^def requires_filesystem_watcher(func):$/;"	f
requires_segment_info	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/listers/i3wm.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/listers/pdb.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/listers/vim.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/common/env.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.theme import requires_segment_info, requires_filesystem_watcher$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/i3wm.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/ipython.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/pdb.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/shell.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.theme import requires_segment_info, requires_filesystem_watcher$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from powerline.theme import requires_segment_info$/;"	i
requires_segment_info	zpwr/.tmux/powerline/theme.py	/^def requires_segment_info(func):$/;"	f
reraise	zpwr/.tmux/powerline/__init__.py	/^	def reraise(exception):$/;"	f
res	zpwr/.shell_aliases_functions.sh	/^    res=600x400$/;"	v
reset_highlight	zpwr/.tmux/powerline/renderers/vim.py	/^	def reset_highlight(self):$/;"	m	class:VimRenderer
reset_highlight	zpwr/.tmux/powerline/vim.py	/^	def reset_highlight(self):$/;"	m	class:VimPowerline
resize_to_true_full_screen	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^resize_to_true_full_screen() {$/;"	f
resize_to_true_full_screen	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^resize_to_true_full_screen() {$/;"	f
resize_window_to_full_screen	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^resize_window_to_full_screen() {$/;"	f
resize_window_to_full_screen	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^resize_window_to_full_screen() {$/;"	f
resolve	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	def resolve(self, kind, value, implicit, mark=None):$/;"	m	class:BaseResolver
resourceFile	boiler_gen.py	/^    resourceFile = f'{name}Controller.java'$/;"	v
resourceFile	zpwr/scripts/boiler_gen.py	/^    resourceFile = f'{name}Controller.java'$/;"	v
restart	tailZOU.sh	/^    restart=$3$/;"	v
restart	zpwr/.shell_aliases_functions.sh	/^    restart(){$/;"	f
restart	zpwr/scripts/tailZOU.sh	/^    restart=$3$/;"	v
restartZabbixAgent	zpwr/.shell_aliases_functions.sh	/^    restartZabbixAgent(){$/;"	f
restart_br0	pingordieBridge.sh	/^restart_br0() {$/;"	f
restart_br0	pingordieBridgeVPN.sh	/^restart_br0() {$/;"	f
restart_br0	zpwr/scripts/pingordieBridge.sh	/^restart_br0() {$/;"	f
restart_br0	zpwr/scripts/pingordieBridgeVPN.sh	/^restart_br0() {$/;"	f
restart_wlan0	pingordie.sh	/^restart_wlan0() {$/;"	f
restart_wlan0	zpwr/scripts/pingordie.sh	/^restart_wlan0() {$/;"	f
restore_active_and_alternate_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_sessions() {$/;"	f
restore_active_and_alternate_windows	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_windows() {$/;"	f
restore_active_and_alternate_windows_for_grouped_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_windows_for_grouped_sessions() {$/;"	f
restore_active_pane_for_each_window	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_pane_for_each_window() {$/;"	f
restore_all_pane_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_all_pane_processes() {$/;"	f
restore_all_panes	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_all_panes() {$/;"	f
restore_from_scratch_true	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_from_scratch_true() {$/;"	f
restore_grouped_session	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_grouped_session() {$/;"	f
restore_grouped_sessions	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_grouped_sessions() {$/;"	f
restore_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^restore_option="@resurrect-restore"$/;"	v
restore_pane	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane() {$/;"	f
restore_pane_contents_true	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane_contents_true() {$/;"	f
restore_pane_layout_for_each_window	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane_layout_for_each_window() {$/;"	f
restore_pane_process	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^restore_pane_process() {$/;"	f
restore_pane_processes_enabled	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^restore_pane_processes_enabled() {$/;"	f
restore_path_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^restore_path_option="@resurrect-restore-script-path"$/;"	v
restore_process_strategy_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^restore_process_strategy_option="@resurrect-strategy-"$/;"	v
restore_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local restore_processes="$(get_tmux_option "$restore_processes_option" "$restore_processes")"$/;"	v
restore_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^restore_processes=""$/;"	v
restore_processes_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^restore_processes_option="@resurrect-processes"$/;"	v
restore_shell_history	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_shell_history() {$/;"	f
restore_state	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_state() {$/;"	f
restore_tmux_environment_and_save_again	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^restore_tmux_environment_and_save_again() {$/;"	f
restore_zoomed_windows	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_zoomed_windows() {$/;"	f
resurrect_dir	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_dir() {$/;"	f
resurrect_dir_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_dir_option="@resurrect-dir"$/;"	v
resurrect_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local resurrect_file="$(last_resurrect_file)"$/;"	v
resurrect_file_path	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_file_path() {$/;"	f
resurrect_file_path	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local resurrect_file_path="$(resurrect_file_path)"$/;"	v
resurrect_history_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_history_file() {$/;"	f
resurrect_restore_path_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^resurrect_restore_path_option="@resurrect-restore-script-path"$/;"	v
resurrect_restore_script_path	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^	local resurrect_restore_script_path="$(get_tmux_option "$resurrect_restore_path_option" "")"$/;"	v
resurrect_save_path_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^resurrect_save_path_option="@resurrect-save-script-path"$/;"	v
resurrect_save_script_path	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^	local resurrect_save_script_path="$(get_tmux_option "$resurrect_save_path_option" "")"$/;"	v
ret	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	def ret(segment_info, **kwargs):$/;"	f	function:window_cached
return2	zpwr/.shell_aliases_functions.sh	/^return2(){$/;"	f
revarr	picture_finder.sh	/^    local revarr=('|' '\/' '-' '\\')$/;"	v
revarr	secureDelete.sh	/^    local revarr=('|' '\/' '-' '\\')$/;"	v
revarr	zpwr/scripts/picture_finder.sh	/^    local revarr=('|' '\/' '-' '\\')$/;"	v
revarr	zpwr/scripts/secureDelete.sh	/^    local revarr=('|' '\/' '-' '\\')$/;"	v
rgb	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/PaperColor.vim	/^fun s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/antares.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/candyman.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/cobalt2.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/coda.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/desert256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/evening.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/heroku.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/lizard256.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/simple256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/triplejelly.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb	zpwr/.vim/colors/znake.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb_color	zpwr/.vim/colors/candyman.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/cobalt2.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/coda.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/desert256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/jellybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/lizard256.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/simple256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/triplejelly.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/PaperColor.vim	/^fun s:rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/antares.vim	/^  fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/evening.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/heroku.vim	/^  fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	zpwr/.vim/colors/znake.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_level	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/PaperColor.vim	/^fun s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/antares.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/candyman.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/cobalt2.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/coda.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/desert256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/evening.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/heroku.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/jellybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/lizard256.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/simple256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/triplejelly.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_level	zpwr/.vim/colors/znake.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_number	zpwr/.vim/colors/CandyPaper.vim	/^function <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/PaperColor.vim	/^fun s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/Tomorrow.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/antares.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/candyman.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/cobalt2.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/coda.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/desert256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/desert256v2.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/desertink.vim	/^  fun! <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/evening.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/heroku-terminal.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/heroku.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/jelleybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/jellybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/kkruby.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/lizard256.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/mrkn256.vim	/^    function! <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/rakr-light.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/simple256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/summerfruit256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/triplejelly.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/twilight256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/wasabi256.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/wombat256i.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_number	zpwr/.vim/colors/znake.vim	/^	fun <SID>rgb_number(x)$/;"	f
rhythmbox	zpwr/.tmux/powerline/segments/common/players.py	/^rhythmbox = with_docstring(RhythmboxPlayerSegment(),$/;"	v
right	zpwr/.tmux/powerline/lint/__init__.py	/^	right=divside_spec(),$/;"	v
right	zpwr/.tmux/powerline/lint/__init__.py	/^	right=segments_spec().context_message('Error while loading segments from right side (key {key})'),$/;"	v
rm	zpwr/.shell_aliases_functions.sh	/^function rm(){$/;"	f
rpartition	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def rpartition(self, sep):$/;"	m	class:MarkedUnicode
rspace	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	rspace = re.compile(r'(\\s*)$')$/;"	v	class:PowerlinePrompt1
ruby_operators	zpwr/.vim/colors/detailed.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	zpwr/.vim/colors/evolution.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	zpwr/.vim/colors/herald.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	zpwr/.vim/colors/kiss.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	zpwr/.vim/colors/seoul256.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	zpwr/.vim/colors/thor.vim	/^let ruby_operators = 1$/;"	v
ruby_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:ruby_syntax_and_highlights()$/;"	f
run	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from powerline.bindings.wm.awesome import run$/;"	i
run	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^		def run(self):$/;"	m	class:i3_subscribe.I3Thread
run	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^	def run(self):$/;"	m	class:AwesomeThread
run	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^def run(thread_shutdown_event=None, pl_shutdown_event=None, pl_config_loader=None,$/;"	f
run	zpwr/.tmux/powerline/lib/config.py	/^	def run(self):$/;"	m	class:ConfigLoader
run	zpwr/.tmux/powerline/lib/threaded.py	/^	def run(self):$/;"	m	class:ThreadedSegment
run	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def run(self):$/;"	m	class:UvThread
run	zpwr/.tmux/powerline/segments/common/sys.py	/^		def run(self):$/;"	m	class:.CPULoadPercentSegment
run_cmd	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from powerline.lib.shell import run_cmd$/;"	i
run_cmd	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from powerline.lib.shell import run_cmd$/;"	i
run_cmd	zpwr/.tmux/powerline/lib/shell.py	/^def run_cmd(pl, cmd, stdin=None, strip=True):$/;"	f
run_cmd	zpwr/.tmux/powerline/segments/common/bat.py	/^from powerline.lib.shell import run_cmd$/;"	i
run_cmd	zpwr/.tmux/powerline/segments/common/players.py	/^from powerline.lib.shell import asrun, run_cmd$/;"	i
run_tmux_command	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.bindings.tmux import (TmuxVersionInfo, run_tmux_command, set_tmux_environment, get_tmux_version,$/;"	i
run_tmux_command	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def run_tmux_command(*args):$/;"	f
runtime	zpwr/.shell_aliases_functions.sh	/^            runtime=$(((end-start)\/1000000.0))$/;"	v
rustup_bin	rpiSoftwareUpdater.sh	/^rustup_bin="$HOME\/.cargo\/bin\/rustup"$/;"	v
rustup_bin	zpwr/scripts/rpiSoftwareUpdater.sh	/^rustup_bin="$HOME\/.cargo\/bin\/rustup"$/;"	v
s	zpwr/.shell_aliases_functions.sh	/^        s=" B   KiB MiB GiB TiB PiB EiB ZiB YiB"$/;"	v
s	zpwr/.shell_aliases_functions.sh	/^        s=substr(s,1,4)$/;"	v
s	zpwr/.shell_aliases_functions.sh	/^s(){$/;"	f
s10_pid	backgroundMastery.sh	/^s10_pid="$!"$/;"	v
s10_pid	zpwr/scripts/backgroundMastery.sh	/^s10_pid="$!"$/;"	v
s1_pid	backgroundMastery.sh	/^s1_pid="$!"$/;"	v
s1_pid	zpwr/scripts/backgroundMastery.sh	/^s1_pid="$!"$/;"	v
s2_pid	backgroundMastery.sh	/^s2_pid="$!"$/;"	v
s2_pid	zpwr/scripts/backgroundMastery.sh	/^s2_pid="$!"$/;"	v
s3_pid	backgroundMastery.sh	/^s3_pid="$!"$/;"	v
s3_pid	zpwr/scripts/backgroundMastery.sh	/^s3_pid="$!"$/;"	v
s4_pid	backgroundMastery.sh	/^s4_pid="$!"$/;"	v
s4_pid	zpwr/scripts/backgroundMastery.sh	/^s4_pid="$!"$/;"	v
s5_pid	backgroundMastery.sh	/^s5_pid="$!"$/;"	v
s5_pid	zpwr/scripts/backgroundMastery.sh	/^s5_pid="$!"$/;"	v
s6_pid	backgroundMastery.sh	/^s6_pid="$!"$/;"	v
s6_pid	zpwr/scripts/backgroundMastery.sh	/^s6_pid="$!"$/;"	v
s8_pid	backgroundMastery.sh	/^s8_pid="$!"$/;"	v
s8_pid	zpwr/scripts/backgroundMastery.sh	/^s8_pid="$!"$/;"	v
s:Aluminium	zpwr/.vim/colors/two2tango.vim	/^let s:Aluminium		= ['#eeeeec', '#d3d7cf', '#babdb6',$/;"	v
s:BG	zpwr/.vim/colors/primary.vim	/^  let s:BG     = s:BLACK$/;"	v
s:BG	zpwr/.vim/colors/primary.vim	/^  let s:BG     = s:WHITE$/;"	v
s:BLACK	zpwr/.vim/colors/primary.vim	/^    let s:BLACK  = '16'$/;"	v
s:BLACK	zpwr/.vim/colors/primary.vim	/^    let s:BLACK  = 'black'$/;"	v
s:BLACK	zpwr/.vim/colors/primary.vim	/^  let s:BLACK  = '#000000'$/;"	v
s:BLUE	zpwr/.vim/colors/primary.vim	/^    let s:BLUE   = '69'$/;"	v
s:BLUE	zpwr/.vim/colors/primary.vim	/^    let s:BLUE   = 'blue'$/;"	v
s:BLUE	zpwr/.vim/colors/primary.vim	/^  let s:BLUE   = '#4285F4'$/;"	v
s:Background	zpwr/.vim/colors/two2tango.vim	/^let s:Background    = '#212628'$/;"	v
s:Black	zpwr/.vim/colors/3dglasses.vim	/^let s:Black			=	['#000000', '#001621', '#1B3641', '#00222B']$/;"	v
s:BoldStatement	zpwr/.vim/colors/tabula.vim	/^  let s:BoldStatement = g:Tabula_BoldStatement$/;"	v
s:BoldStatement	zpwr/.vim/colors/tabula.vim	/^let s:BoldStatement = 0$/;"	v
s:BooleanBg	zpwr/.vim/colors/otaku.vim	/^let s:BooleanBg = s:NormalBg $/;"	v
s:BooleanFg	zpwr/.vim/colors/otaku.vim	/^let s:BooleanFg = '#1BD1DD'$/;"	v
s:Butter	zpwr/.vim/colors/two2tango.vim	/^let s:Butter		= ['#fce94f', '#edd400', '#c4a000']$/;"	v
s:Chameleon	zpwr/.vim/colors/two2tango.vim	/^let s:Chameleon		= ['#8ae234', '#73d216', '#4e9a06']$/;"	v
s:CharacterBg	zpwr/.vim/colors/otaku.vim	/^let s:CharacterBg = s:NormalBg $/;"	v
s:CharacterFg	zpwr/.vim/colors/otaku.vim	/^let s:CharacterFg = '#8D523D'$/;"	v
s:Chocolate	zpwr/.vim/colors/two2tango.vim	/^let s:Chocolate		= ['#e9b96e', '#c17d11', '#8f5902']$/;"	v
s:ChocolatePapaya_style	zpwr/.vim/colors/ChocolatePapaya.vim	/^let s:ChocolatePapaya_style = &background$/;"	v
s:ColorPre	zpwr/.vim/colors/tabula.vim	/^    let s:ColorPre = g:Tabula_ColorPre$/;"	v
s:ColorPre	zpwr/.vim/colors/tabula.vim	/^let s:ColorPre = "blue"$/;"	v
s:Colors	zpwr/.vim/colors/abra.vim	/^let s:Colors = [$/;"	v
s:Colors	zpwr/.vim/colors/obsidian2.vim	/^let s:Colors = [$/;"	v
s:CommentBg	zpwr/.vim/colors/otaku.vim	/^let s:CommentBg = s:NormalBg $/;"	v
s:CommentFg	zpwr/.vim/colors/otaku.vim	/^let s:CommentFg = '#5766c9'$/;"	v
s:ConcealBg	zpwr/.vim/colors/otaku.vim	/^let s:ConcealBg = s:NormalBg$/;"	v
s:ConcealFg	zpwr/.vim/colors/otaku.vim	/^let s:ConcealFg = s:NormalBg $/;"	v
s:ConstantBg	zpwr/.vim/colors/otaku.vim	/^let s:ConstantBg = s:NormalBg $/;"	v
s:ConstantFg	zpwr/.vim/colors/otaku.vim	/^let s:ConstantFg = '#bf8095'$/;"	v
s:CurColor	zpwr/.vim/colors/tabula.vim	/^  let s:CurColor = g:Tabula_CurColor$/;"	v
s:CurColor	zpwr/.vim/colors/tabula.vim	/^let s:CurColor = "blue"$/;"	v
s:Cursor	zpwr/.vim/colors/otaku.vim	/^let s:Cursor = 'reverse'$/;"	v
s:CursorBg	zpwr/.vim/colors/otaku.vim	/^let s:CursorBg = s:StatementFg$/;"	v
s:CursorFg	zpwr/.vim/colors/otaku.vim	/^let s:CursorFg = s:StringFg $/;"	v
s:CursorLine	zpwr/.vim/colors/otaku.vim	/^let s:CursorLine = 'reverse'$/;"	v
s:CursorLineBg	zpwr/.vim/colors/otaku.vim	/^let s:CursorLineBg = s:StringFg$/;"	v
s:CursorLineFg	zpwr/.vim/colors/otaku.vim	/^let s:CursorLineFg = s:CommentFg $/;"	v
s:DGREY	zpwr/.vim/colors/primary.vim	/^    let s:DGREY  = '241'$/;"	v
s:DGREY	zpwr/.vim/colors/primary.vim	/^    let s:DGREY  = 'grey'$/;"	v
s:DGREY	zpwr/.vim/colors/primary.vim	/^  let s:DGREY  = '#656565'$/;"	v
s:DarkBlue	zpwr/.vim/colors/3dglasses.vim	/^let s:DarkBlue		=	['#00117B', '#0D4CAD', '#01BEF6']$/;"	v
s:DarkError	zpwr/.vim/colors/tabula.vim	/^  let s:DarkError = g:Tabula_DarkError$/;"	v
s:DarkError	zpwr/.vim/colors/tabula.vim	/^let s:DarkError = 0$/;"	v
s:Directory	zpwr/.vim/colors/otaku.vim	/^let s:Directory = 'italic'$/;"	v
s:DirectoryBg	zpwr/.vim/colors/otaku.vim	/^let s:DirectoryBg = s:NormalBg$/;"	v
s:DirectoryFg	zpwr/.vim/colors/otaku.vim	/^let s:DirectoryFg = s:NormalFg $/;"	v
s:Error	zpwr/.vim/colors/otaku.vim	/^let s:Error = 'bold'$/;"	v
s:ErrorBg	zpwr/.vim/colors/otaku.vim	/^let s:ErrorBg = s:OperatorFg$/;"	v
s:ErrorFg	zpwr/.vim/colors/otaku.vim	/^let s:ErrorFg = s:StringFg$/;"	v
s:FlatConstants	zpwr/.vim/colors/tabula.vim	/^  let s:FlatConstants = g:Tabula_FlatConstants$/;"	v
s:FlatConstants	zpwr/.vim/colors/tabula.vim	/^let s:FlatConstants = 1$/;"	v
s:FloatBg	zpwr/.vim/colors/otaku.vim	/^let s:FloatBg = s:NormalBg $/;"	v
s:FloatFg	zpwr/.vim/colors/otaku.vim	/^let s:FloatFg = '#A3CE54'$/;"	v
s:FoldColumn	zpwr/.vim/colors/otaku.vim	/^let s:FoldColumn = 'underline'$/;"	v
s:FoldColumnBg	zpwr/.vim/colors/otaku.vim	/^let s:FoldColumnBg = s:IdentifierFg$/;"	v
s:FoldColumnFg	zpwr/.vim/colors/otaku.vim	/^let s:FoldColumnFg = s:NormalBg$/;"	v
s:Folded	zpwr/.vim/colors/otaku.vim	/^let s:Folded = 'underline'$/;"	v
s:FoldedBg	zpwr/.vim/colors/otaku.vim	/^let s:FoldedBg = s:IdentifierFg$/;"	v
s:FoldedFg	zpwr/.vim/colors/otaku.vim	/^let s:FoldedFg = s:NormalBg$/;"	v
s:Function	zpwr/.vim/colors/otaku.vim	/^let s:Function = 'bold'$/;"	v
s:FunctionBg	zpwr/.vim/colors/otaku.vim	/^let s:FunctionBg = s:NormalBg $/;"	v
s:FunctionFg	zpwr/.vim/colors/otaku.vim	/^let s:FunctionFg = '#6947a1'$/;"	v
s:GREEN	zpwr/.vim/colors/primary.vim	/^    let s:GREEN  = '28'$/;"	v
s:GREEN	zpwr/.vim/colors/primary.vim	/^    let s:GREEN  = 'green'$/;"	v
s:GREEN	zpwr/.vim/colors/primary.vim	/^  let s:GREEN  = '#0F9D58'$/;"	v
s:GREY0	zpwr/.vim/colors/primary.vim	/^  let s:GREY0  = s:BLACK$/;"	v
s:GREY0	zpwr/.vim/colors/primary.vim	/^  let s:GREY0  = s:WHITE$/;"	v
s:GREY1	zpwr/.vim/colors/primary.vim	/^  let s:GREY1  = s:DGREY$/;"	v
s:GREY1	zpwr/.vim/colors/primary.vim	/^  let s:GREY1  = s:LGREY$/;"	v
s:GREY2	zpwr/.vim/colors/primary.vim	/^  let s:GREY2  = s:DGREY$/;"	v
s:GREY2	zpwr/.vim/colors/primary.vim	/^  let s:GREY2  = s:LGREY$/;"	v
s:GREYX	zpwr/.vim/colors/primary.vim	/^    let s:GREYX = s:BLACK$/;"	v
s:GREYX	zpwr/.vim/colors/primary.vim	/^    let s:GREYX = s:GREY1$/;"	v
s:GREYY	zpwr/.vim/colors/primary.vim	/^    let s:GREYY = s:BLACK$/;"	v
s:GREYY	zpwr/.vim/colors/primary.vim	/^    let s:GREYY = s:GREY1$/;"	v
s:I	zpwr/.vim/colors/primary.vim	/^        let s:I = 'italic'$/;"	v
s:I	zpwr/.vim/colors/primary.vim	/^  let s:I = 'none'$/;"	v
s:I	zpwr/.vim/colors/primary.vim	/^  let s:I = s:disable_italic ? 'none' : 'italic'$/;"	v
s:IdentifierBg	zpwr/.vim/colors/otaku.vim	/^let s:IdentifierBg = s:NormalBg$/;"	v
s:IdentifierFg	zpwr/.vim/colors/otaku.vim	/^let s:IdentifierFg = '#9d5abf'$/;"	v
s:InvisibleIgnore	zpwr/.vim/colors/tabula.vim	/^  let s:InvisibleIgnore = g:Tabula_InvisibleIgnore$/;"	v
s:InvisibleIgnore	zpwr/.vim/colors/tabula.vim	/^let s:InvisibleIgnore = 1$/;"	v
s:LGREY	zpwr/.vim/colors/primary.vim	/^    let s:LGREY  = '255'$/;"	v
s:LGREY	zpwr/.vim/colors/primary.vim	/^    let s:LGREY  = 'grey'$/;"	v
s:LGREY	zpwr/.vim/colors/primary.vim	/^  let s:LGREY  = '#EEEEEE'$/;"	v
s:LNumUnderline	zpwr/.vim/colors/tabula.vim	/^  let s:LNumUnderline = g:Tabula_LNumUnderline$/;"	v
s:LNumUnderline	zpwr/.vim/colors/tabula.vim	/^let s:LNumUnderline = 0$/;"	v
s:LightBlue	zpwr/.vim/colors/3dglasses.vim	/^let s:LightBlue		=	['#004455', '#0088AA', '#00CCFF', '#55DDFF', '#80E5FF']$/;"	v
s:LineNr	zpwr/.vim/colors/otaku.vim	/^let s:LineNr = 'bold,underline'$/;"	v
s:LineNrBg	zpwr/.vim/colors/otaku.vim	/^let s:LineNrBg = s:FunctionFg$/;"	v
s:LineNrFg	zpwr/.vim/colors/otaku.vim	/^let s:LineNrFg = s:NormalBg$/;"	v
s:M	zpwr/.vim/colors/primary.vim	/^  let s:M = 'cterm'$/;"	v
s:M	zpwr/.vim/colors/primary.vim	/^  let s:M = 'gui'$/;"	v
s:M	zpwr/.vim/colors/xterm16.vim	/^	let s:M = (s:m + s:h) \/ 2$/;"	v
s:MatchParenBg	zpwr/.vim/colors/otaku.vim	/^let s:MatchParenBg = s:NormalBg$/;"	v
s:MatchParenFg	zpwr/.vim/colors/otaku.vim	/^let s:MatchParenFg = '#ffffff' $/;"	v
s:NonTextBg	zpwr/.vim/colors/otaku.vim	/^let s:NonTextBg = s:NormalBg $/;"	v
s:NonTextFg	zpwr/.vim/colors/otaku.vim	/^let s:NonTextFg = '#414F6C' $/;"	v
s:NormalBg	zpwr/.vim/colors/otaku.vim	/^let s:NormalBg = '#372e85'$/;"	v
s:NormalFg	zpwr/.vim/colors/otaku.vim	/^let s:NormalFg = '#a7a8e8'$/;"	v
s:NumberBg	zpwr/.vim/colors/otaku.vim	/^let s:NumberBg = s:NormalBg $/;"	v
s:NumberFg	zpwr/.vim/colors/otaku.vim	/^let s:NumberFg = '#C6C536'$/;"	v
s:OperatorBg	zpwr/.vim/colors/otaku.vim	/^let s:OperatorBg = s:NormalBg $/;"	v
s:OperatorFg	zpwr/.vim/colors/otaku.vim	/^let s:OperatorFg = '#DC1794'$/;"	v
s:Orange	zpwr/.vim/colors/two2tango.vim	/^let s:Orange		= ['#fcaf3e', '#f57900', '#ce5c00']$/;"	v
s:Plum	zpwr/.vim/colors/two2tango.vim	/^let s:Plum			= ['#ad7fa8', '#75507b', '#5c3566']$/;"	v
s:PreProcBg	zpwr/.vim/colors/otaku.vim	/^let s:PreProcBg = s:NormalBg $/;"	v
s:PreProcFg	zpwr/.vim/colors/otaku.vim	/^let s:PreProcFg = '#b58848'$/;"	v
s:RED	zpwr/.vim/colors/primary.vim	/^    let s:RED    = '124'$/;"	v
s:RED	zpwr/.vim/colors/primary.vim	/^    let s:RED    = 'red'$/;"	v
s:RED	zpwr/.vim/colors/primary.vim	/^  let s:RED    = '#DB4437'$/;"	v
s:Red	zpwr/.vim/colors/3dglasses.vim	/^let s:Red			=	['#2b0000', '#800000', '#AA0000', '#FF0000', '#FF2A2A', '#FF5555']$/;"	v
s:Repeat	zpwr/.vim/colors/otaku.vim	/^let s:Repeat = 'bold'$/;"	v
s:RepeatBg	zpwr/.vim/colors/otaku.vim	/^let s:RepeatBg = s:NormalBg $/;"	v
s:RepeatFg	zpwr/.vim/colors/otaku.vim	/^let s:RepeatFg = '#4a827c'$/;"	v
s:ScarletRed	zpwr/.vim/colors/two2tango.vim	/^let s:ScarletRed	= ['#ef2929', '#cc0000', '#a40000']$/;"	v
s:Search	zpwr/.vim/colors/otaku.vim	/^let s:Search = 'reverse'$/;"	v
s:SearchBg	zpwr/.vim/colors/otaku.vim	/^let s:SearchBg = s:StringFg$/;"	v
s:SearchFg	zpwr/.vim/colors/otaku.vim	/^let s:SearchFg = s:IdentifierFg $/;"	v
s:SearchStandOut	zpwr/.vim/colors/tabula.vim	/^  let s:SearchStandOut = g:Tabula_SearchStandOut$/;"	v
s:SearchStandOut	zpwr/.vim/colors/tabula.vim	/^let s:SearchStandOut=0$/;"	v
s:SkyBlue	zpwr/.vim/colors/two2tango.vim	/^let s:SkyBlue		= ['#729fcf', '#3465a4', '#204a87']$/;"	v
s:SpecialBg	zpwr/.vim/colors/otaku.vim	/^let s:SpecialBg = s:NormalBg$/;"	v
s:SpecialFg	zpwr/.vim/colors/otaku.vim	/^let s:SpecialFg = s:IdentifierFg$/;"	v
s:SpecialKeyBg	zpwr/.vim/colors/otaku.vim	/^let s:SpecialKeyBg = s:NormalBg$/;"	v
s:SpecialKeyFg	zpwr/.vim/colors/otaku.vim	/^let s:SpecialKeyFg = s:IdentifierFg$/;"	v
s:Statement	zpwr/.vim/colors/otaku.vim	/^let s:Statement = 'bold'$/;"	v
s:StatementBg	zpwr/.vim/colors/otaku.vim	/^let s:StatementBg = s:NormalBg $/;"	v
s:StatementFg	zpwr/.vim/colors/otaku.vim	/^let s:StatementFg = '#1C1745'$/;"	v
s:StatusLine	zpwr/.vim/colors/otaku.vim	/^let s:StatusLine = 'reverse,underline' $/;"	v
s:StatusLineBg	zpwr/.vim/colors/otaku.vim	/^let s:StatusLineBg = s:StatementFg$/;"	v
s:StatusLineFg	zpwr/.vim/colors/otaku.vim	/^let s:StatusLineFg = s:FunctionFg $/;"	v
s:StatusLineNC	zpwr/.vim/colors/otaku.vim	/^let s:StatusLineNC = 'reverse,underline' $/;"	v
s:StatusLineNCBg	zpwr/.vim/colors/otaku.vim	/^let s:StatusLineNCBg = s:NormalBg$/;"	v
s:StatusLineNCFg	zpwr/.vim/colors/otaku.vim	/^let s:StatusLineNCFg = s:FunctionFg $/;"	v
s:StringBg	zpwr/.vim/colors/otaku.vim	/^let s:StringBg = s:NormalBg $/;"	v
s:StringFg	zpwr/.vim/colors/otaku.vim	/^let s:StringFg = '#d6d9b6'$/;"	v
s:TODO	zpwr/.vim/colors/otaku.vim	/^let s:TODO = 'bold'$/;"	v
s:TODOBg	zpwr/.vim/colors/otaku.vim	/^let s:TODOBg = '#3F52FF'$/;"	v
s:TODOFg	zpwr/.vim/colors/otaku.vim	/^let s:TODOFg = s:StringFg$/;"	v
s:Title	zpwr/.vim/colors/otaku.vim	/^let s:Title = 'bold'$/;"	v
s:TitleBg	zpwr/.vim/colors/otaku.vim	/^let s:TitleBg = s:NormalBg$/;"	v
s:TitleFg	zpwr/.vim/colors/otaku.vim	/^let s:TitleFg = s:NormalFg $/;"	v
s:Tlist_Skip_Refresh	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:Tlist_Skip_Refresh	zpwr/taglist_46/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TodoUnderline	zpwr/.vim/colors/tabula.vim	/^  let s:TodoUnderline = g:Tabula_TodoUnderline$/;"	v
s:TodoUnderline	zpwr/.vim/colors/tabula.vim	/^let s:TodoUnderline=1$/;"	v
s:Type	zpwr/.vim/colors/otaku.vim	/^let s:Type = 'NONE'$/;"	v
s:TypeBg	zpwr/.vim/colors/otaku.vim	/^let s:TypeBg = s:NormalBg $/;"	v
s:TypeFg	zpwr/.vim/colors/otaku.vim	/^let s:TypeFg = '#778D92'$/;"	v
s:VertSplit	zpwr/.vim/colors/otaku.vim	/^let s:VertSplit = 'reverse,underline' $/;"	v
s:VertSplitBg	zpwr/.vim/colors/otaku.vim	/^let s:VertSplitBg = s:NormalBg$/;"	v
s:VertSplitFg	zpwr/.vim/colors/otaku.vim	/^let s:VertSplitFg = s:FunctionFg $/;"	v
s:VisualBg	zpwr/.vim/colors/otaku.vim	/^let s:VisualBg = s:StatementFg$/;"	v
s:VisualFg	zpwr/.vim/colors/otaku.vim	/^let s:VisualFg = s:ErrorBg $/;"	v
s:WHITE	zpwr/.vim/colors/primary.vim	/^    let s:WHITE  = '231'$/;"	v
s:WHITE	zpwr/.vim/colors/primary.vim	/^    let s:WHITE  = 'white'$/;"	v
s:WHITE	zpwr/.vim/colors/primary.vim	/^  let s:WHITE  = '#FFFFFF'$/;"	v
s:White	zpwr/.vim/colors/3dglasses.vim	/^let s:White			=	['#ffffff', '#dddddd', '#bbbbbb']$/;"	v
s:YELLOW	zpwr/.vim/colors/primary.vim	/^    let s:YELLOW = '178'$/;"	v
s:YELLOW	zpwr/.vim/colors/primary.vim	/^    let s:YELLOW = 'yellow'$/;"	v
s:YELLOW	zpwr/.vim/colors/primary.vim	/^  let s:YELLOW = '#F4B400'$/;"	v
s:_nefertiti_search_highlight_intensity_highlight_map	zpwr/.vim/colors/nefertiti.vim	/^    let s:_nefertiti_search_highlight_intensity_highlight_map = ["333333", "555555", "666660", "aaaa99", "ddddbb", "ffffbb", "ffffff", "ff00ff"]$/;"	v
s:accent	zpwr/.vim/colors/phoenix.vim	/^  let s:accent = ""$/;"	v
s:accent	zpwr/.vim/colors/phoenix.vim	/^  let s:accent = g:phoenix_acc$/;"	v
s:accent1	zpwr/.vim/colors/eva.vim	/^  let s:accent1    = { "gui": "#9FD3E6", "cterm": "152" }$/;"	v
s:accent1	zpwr/.vim/colors/hemisu.vim	/^  let s:accent1    = s:middleDarkBlue$/;"	v
s:accent1	zpwr/.vim/colors/hemisu.vim	/^  let s:accent1    = s:middleLightBlue$/;"	v
s:accent1	zpwr/.vim/colors/scooby.vim	/^  let s:accent1    = { "gui": "#3E3D32", "cterm": "230" }  $/;"	v
s:accent10	zpwr/.vim/colors/eva.vim	/^  let s:accent10   = { "gui": "#5F5F00", "cterm": "000"  }$/;"	v
s:accent11	zpwr/.vim/colors/eva.vim	/^  let s:accent11   = { "gui": "#005F87", "cterm": "024"  }$/;"	v
s:accent12	zpwr/.vim/colors/eva.vim	/^  let s:accent12   = { "gui": "#932b00", "cterm": "088" }$/;"	v
s:accent13	zpwr/.vim/colors/eva.vim	/^  let s:accent13   = { "gui": "#00AA00", "cterm": "034" }$/;"	v
s:accent14	zpwr/.vim/colors/eva.vim	/^  let s:accent14   = { "gui": "#9abf10", "cterm": "000" }$/;"	v
s:accent2	zpwr/.vim/colors/eva.vim	/^  let s:accent2    = { "gui": "#B1D631", "cterm": "149" }$/;"	v
s:accent2	zpwr/.vim/colors/hemisu.vim	/^  let s:accent2    = s:middleDarkGreen$/;"	v
s:accent2	zpwr/.vim/colors/hemisu.vim	/^  let s:accent2    = s:middleLightGreen$/;"	v
s:accent2	zpwr/.vim/colors/scooby.vim	/^  let s:accent2    = { "gui": "#c0fecb", "cterm": "158" }$/;"	v
s:accent3	zpwr/.vim/colors/eva.vim	/^  let s:accent3    = { "gui": "#d09000", "cterm": "172" }$/;"	v
s:accent3	zpwr/.vim/colors/hemisu.vim	/^  let s:accent3    = s:lightGreen$/;"	v
s:accent3	zpwr/.vim/colors/hemisu.vim	/^  let s:accent3    = s:middleDarkPink$/;"	v
s:accent3	zpwr/.vim/colors/scooby.vim	/^  let s:accent3    = { "gui": "#FEC2B1", "cterm": "217" }$/;"	v
s:accent4	zpwr/.vim/colors/eva.vim	/^  let s:accent4    = { "gui": "#ECE1C8", "cterm": "224" }$/;"	v
s:accent4	zpwr/.vim/colors/hemisu.vim	/^  let s:accent4    = s:darkTan$/;"	v
s:accent4	zpwr/.vim/colors/hemisu.vim	/^  let s:accent4    = s:lightTan$/;"	v
s:accent4	zpwr/.vim/colors/scooby.vim	/^  let s:accent4    = { "gui": "#8080ff", "cterm": "105" }  $/;"	v
s:accent5	zpwr/.vim/colors/eva.vim	/^  let s:accent5    = { "gui": "#2E4D0F", "cterm": "022"  }$/;"	v
s:accent6	zpwr/.vim/colors/eva.vim	/^  let s:accent6    = { "gui": "#63001C", "cterm": "052"  }  $/;"	v
s:accent7	zpwr/.vim/colors/eva.vim	/^  let s:accent7    = { "gui": "#D65E76", "cterm": "168" }$/;"	v
s:accent8	zpwr/.vim/colors/eva.vim	/^  let s:accent8    = { "gui": "#B1D631", "cterm": "149" }$/;"	v
s:accent9	zpwr/.vim/colors/eva.vim	/^  let s:accent9    = { "gui": "#9FD3E6", "cterm": "152" }$/;"	v
s:activeline	zpwr/.vim/colors/antares.vim	/^let s:activeline       = "252525"$/;"	v
s:activeline	zpwr/.vim/colors/evening.vim	/^let s:activeline      = "353535"$/;"	v
s:actual_white	zpwr/.vim/colors/flatcolor.vim	/^let s:actual_white    = { "gui": "#FFFFFF", "cterm": "231", "cterm16" : "231" }$/;"	v
s:actual_white	zpwr/.vim/colors/pencil.vim	/^let s:actual_white    = { "gui": "#FFFFFF", "cterm": "231" }$/;"	v
s:addbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:addbg      = "#d7ffd7"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:addbg      = "194"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_material.vim	/^    let s:addbg      = "10"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:addbg      = "#5F875F"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:addbg      = "65"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:addbg      = "10"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:addbg      = "#5F875F"$/;"	v
s:addbg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:addbg      = "65"$/;"	v
s:addbg	zpwr/.vim/colors/last256.vim	/^  let s:addbg      = "#5f875f"$/;"	v
s:addbg	zpwr/.vim/colors/last256.vim	/^  let s:addbg      = "65"$/;"	v
s:addfg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:addfg      = "193"$/;"	v
s:addfg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:addfg      = "193"$/;"	v
s:addfg	zpwr/.vim/colors/last256.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	zpwr/.vim/colors/last256.vim	/^  let s:addfg      = "193"$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin = {}$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Abyss       = [ '000000', 16  ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Dawnstar    = [ '5f8787', 66  ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Durnehviir  = [ '875f5f', 95  ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Falkreath   = [ '8787af', 103 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Ivarstead   = [ '262626', 235 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Ivory       = [ 'eeeeee', 255 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Krosulhah   = [ '5f0000', 52  ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Kruziikrel  = [ 'af8787', 138 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Markarth    = [ '87ffaf', 121 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Mirmulnir   = [ '87afaf', 109 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Morthal     = [ '5f5f87', 60  ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Nightingale = [ '585858', 240 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Oblivion    = [ '080808', 232 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Odahviing   = [ 'af5f00', 130 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Paarthurnax = [ 'ffdf87', 222 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Relonikiv   = [ '878787', 102 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Riften      = [ '303030', 236 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Riverwood   = [ 'afd7d7', 152 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Rorikstead  = [ '3a3a3a', 237 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Sahloknir   = [ 'af0000', 124 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Sahrotaar   = [ 'dfaf87', 180 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Skyrim      = [ '1c1c1c', 234 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Solitude    = [ '121212', 233 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Viinturuth  = [ 'af875f', 137 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Whiterun    = [ 'dfdfaf', 187 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Windhelm    = [ 'af5f5f', 131 ]$/;"	v
s:alduin	zpwr/.vim/colors/alduin.vim	/^let s:alduin.Winterhold  = [ '87875f', 101 ]$/;"	v
s:alizarin	zpwr/.vim/colors/flatui.vim	/^let s:alizarin=       { "gui": "#e74c3c", "cterm": "196"  }$/;"	v
s:almostBlack	zpwr/.vim/colors/hemisu.vim	/^let s:almostBlack      = { "gui": "#111111", "cterm": "233" }$/;"	v
s:almostWhite	zpwr/.vim/colors/hemisu.vim	/^let s:almostWhite      = { "gui": "#EEEEEE", "cterm": "255" }$/;"	v
s:alternative_bold_items	zpwr/.vim/colors/lucius.vim	/^let s:alternative_bold_items = ["Identifier", "PreProc", "Statement",$/;"	v
s:amethyst	zpwr/.vim/colors/flatui.vim	/^let s:amethyst=       { "gui": "#9b59b6", "cterm": "133" }$/;"	v
s:aqua	zpwr/.vim/colors/CandyPaper.vim	/^let s:aqua         = "#6fd5de" "Keyword$/;"	v
s:aqua	zpwr/.vim/colors/PaperColor.vim	/^  let s:aqua    = ['#3e999f', '31'] "Operator\/Delimiter$/;"	v
s:aqua	zpwr/.vim/colors/PaperColor.vim	/^  let s:aqua    = ['#5fafdf', '74'] "Operator\/Delimiter$/;"	v
s:aqua	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:aqua = "99ffff"$/;"	v
s:aqua	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:aqua = "70c0b1"$/;"	v
s:aqua	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:aqua = "66cccc"$/;"	v
s:aqua	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:aqua = "8abeb7"$/;"	v
s:aqua	zpwr/.vim/colors/Tomorrow.vim	/^let s:aqua = "3e999f"$/;"	v
s:aqua	zpwr/.vim/colors/antares.vim	/^let s:aqua             = "4ae5e8"$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-material.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/evening.vim	/^let s:aqua            = "20af75"$/;"	v
s:aqua	zpwr/.vim/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	zpwr/.vim/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/heroku-terminal.vim	/^let s:aqua = "b4f5fe"$/;"	v
s:aqua	zpwr/.vim/colors/heroku.vim	/^let s:aqua = "b4f5fe"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid-light.vim	/^  let s:aqua       = "#005f5f"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid-light.vim	/^  let s:aqua       = "23"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_material.vim	/^    let s:aqua       = "109"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_material.vim	/^    let s:aqua       = "14"   " LightCyan$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_material.vim	/^    let s:aqua       = "6"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_material.vim	/^  let s:aqua       = "#8abeb7"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:aqua       = "109"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:aqua       = "14"   " LightCyan$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:aqua       = "6"$/;"	v
s:aqua	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:aqua       = "#8abeb7"$/;"	v
s:aqua	zpwr/.vim/colors/kkruby.vim	/^let s:aqua         = "53ccc2"$/;"	v
s:aqua	zpwr/.vim/colors/last256.vim	/^  let s:aqua       = "#5fafd7"$/;"	v
s:aqua	zpwr/.vim/colors/last256.vim	/^  let s:aqua       = "111"$/;"	v
s:aqua	zpwr/.vim/colors/materialbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	zpwr/.vim/colors/materialbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	zpwr/.vim/colors/materialbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:aqua	zpwr/.vim/colors/saturn.vim	/^let s:aqua =             [s:hsl2color(180, 20, 65), 65 ]$/;"	v
s:asbestos	zpwr/.vim/colors/flatui.vim	/^let s:asbestos=       { "gui": "#7f8c8d", "cterm": "245" }$/;"	v
s:asphalt	zpwr/.vim/colors/flatcolor.vim	/^let s:asphalt = { "gui": "#1d1f36", "cterm": "235", "cterm16": "NONE"}$/;"	v
s:asphalt_subtle	zpwr/.vim/colors/flatcolor.vim	/^let s:asphalt_subtle= { "gui": "#101428", "cterm": "236", "cterm16": "8"}$/;"	v
s:auburn	zpwr/.vim/colors/harlequin.vim	/^let s:auburn = ['#7C0A02', 88]$/;"	v
s:b	zpwr/.vim/colors/hybrid-light.vim	/^let s:b      = ",bold"$/;"	v
s:b	zpwr/.vim/colors/hybrid.vim	/^let s:b      = ",bold"$/;"	v
s:b	zpwr/.vim/colors/hybrid_material.vim	/^let s:b      = ",bold"$/;"	v
s:b	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:b      = ",bold"$/;"	v
s:b	zpwr/.vim/colors/last256.vim	/^let s:b      = ",bold"$/;"	v
s:b	zpwr/.vim/colors/parsec.vim	/^let s:b           = ",bold"$/;"	v
s:b	zpwr/.vim/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	zpwr/.vim/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:b_blue	zpwr/.vim/colors/mdark.vim	/^let s:b_blue = "#2D69FF" $/;"	v
s:b_cyan	zpwr/.vim/colors/mdark.vim	/^let s:b_cyan = "#33CCCC"$/;"	v
s:b_green	zpwr/.vim/colors/mdark.vim	/^let s:b_green = "#5AB578"$/;"	v
s:b_red	zpwr/.vim/colors/mdark.vim	/^let s:b_red = "#990000"$/;"	v
s:b_yellow	zpwr/.vim/colors/mdark.vim	/^let s:b_yellow = "#FFFF00"$/;"	v
s:back	zpwr/.vim/colors/parsec.vim	/^let s:back = s:base03$/;"	v
s:back	zpwr/.vim/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	zpwr/.vim/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	zpwr/.vim/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	zpwr/.vim/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	zpwr/.vim/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:background	zpwr/.vim/colors/CandyPaper.vim	/^let s:background   = "#050505"$/;"	v
s:background	zpwr/.vim/colors/PaperColor.vim	/^  let s:background   = ['#262626', '234']$/;"	v
s:background	zpwr/.vim/colors/PaperColor.vim	/^  let s:background   = ['#F5F5F5', '255']$/;"	v
s:background	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:background = "002451"$/;"	v
s:background	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:background = "000000"$/;"	v
s:background	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:background = "2d2d2d"$/;"	v
s:background	zpwr/.vim/colors/Tomorrow-Night.vim	/^	let s:background = "303030"$/;"	v
s:background	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:background = "1d1f21"$/;"	v
s:background	zpwr/.vim/colors/Tomorrow.vim	/^let s:background = "ffffff"$/;"	v
s:background	zpwr/.vim/colors/antares.vim	/^	let s:background  = "151515"$/;"	v
s:background	zpwr/.vim/colors/antares.vim	/^let s:background       = "151515"$/;"	v
s:background	zpwr/.vim/colors/evening.vim	/^	let s:background  = "252525"$/;"	v
s:background	zpwr/.vim/colors/evening.vim	/^let s:background      = "252525"$/;"	v
s:background	zpwr/.vim/colors/gotham.vim	/^let s:background = 'base0'$/;"	v
s:background	zpwr/.vim/colors/gotham256.vim	/^let s:background = 'base0'$/;"	v
s:background	zpwr/.vim/colors/heroku-terminal.vim	/^let s:background = "1b1b24"$/;"	v
s:background	zpwr/.vim/colors/heroku.vim	/^let s:background = "1b1b24"$/;"	v
s:background	zpwr/.vim/colors/hybrid-light.vim	/^  let s:background = "#e4e4e4"$/;"	v
s:background	zpwr/.vim/colors/hybrid-light.vim	/^  let s:background = "254"$/;"	v
s:background	zpwr/.vim/colors/hybrid_material.vim	/^    let s:background = "8"$/;"	v
s:background	zpwr/.vim/colors/hybrid_material.vim	/^  let s:background = "#263238"$/;"	v
s:background	zpwr/.vim/colors/hybrid_material.vim	/^  let s:background = "234"$/;"	v
s:background	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:background = "8"$/;"	v
s:background	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:background = "#1d1f21"$/;"	v
s:background	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:background = "234"$/;"	v
s:background	zpwr/.vim/colors/kkruby.vim	/^let s:background   = "101010"$/;"	v
s:background	zpwr/.vim/colors/last256.vim	/^	let s:background = "#002b30"$/;"	v
s:background	zpwr/.vim/colors/last256.vim	/^  let s:background = "16"$/;"	v
s:background	zpwr/.vim/colors/phoenix.vim	/^  let s:background = ""$/;"	v
s:background	zpwr/.vim/colors/phoenix.vim	/^  let s:background = g:phoenix_bg$/;"	v
s:background	zpwr/.vim/colors/seoul256.vim	/^let s:background  = &background$/;"	v
s:backup	zpwr/.vim/colors/seoul256-light.vim	/^      let s:backup = g:seoul256_background$/;"	v
s:base	zpwr/.vim/colors/fx.vim	/^    let s:base      = s:palette['base'][0]$/;"	v
s:base	zpwr/.vim/colors/fx.vim	/^    let s:base      = s:palette['base'][1]$/;"	v
s:base0	zpwr/.vim/colors/parsec.vim	/^  let s:base0       = "#ebe4d3"$/;"	v
s:base0	zpwr/.vim/colors/parsec.vim	/^  let s:base0       = "12"$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	zpwr/.vim/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	zpwr/.vim/colors/bluedrake.vim	/^        let s:base00  = "0"$/;"	v
s:base00	zpwr/.vim/colors/bluedrake.vim	/^        let s:base00  = "235"$/;"	v
s:base00	zpwr/.vim/colors/bluedrake.vim	/^    let s:base00 = "002d49"$/;"	v
s:base00	zpwr/.vim/colors/parsec.vim	/^  let s:base00      = "#cccccc"$/;"	v
s:base00	zpwr/.vim/colors/parsec.vim	/^  let s:base00      = "11"$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	zpwr/.vim/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	zpwr/.vim/colors/bluedrake.vim	/^        let s:base01  = "236"$/;"	v
s:base01	zpwr/.vim/colors/bluedrake.vim	/^        let s:base01  = "8"$/;"	v
s:base01	zpwr/.vim/colors/bluedrake.vim	/^    let s:base01 = "003951" $/;"	v
s:base01	zpwr/.vim/colors/parsec.vim	/^  let s:base01      = "#999999"$/;"	v
s:base01	zpwr/.vim/colors/parsec.vim	/^  let s:base01      = "10"$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	zpwr/.vim/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	zpwr/.vim/colors/parsec.vim	/^  let s:base02      = "#393939"$/;"	v
s:base02	zpwr/.vim/colors/parsec.vim	/^  let s:base02      = "0"$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	zpwr/.vim/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	zpwr/.vim/colors/parsec.vim	/^  let s:base03      = "#2d2d2d"$/;"	v
s:base03	zpwr/.vim/colors/parsec.vim	/^  let s:base03      = "8"$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	zpwr/.vim/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	zpwr/.vim/colors/parsec.vim	/^  let s:base1       = "#93a1a1"$/;"	v
s:base1	zpwr/.vim/colors/parsec.vim	/^  let s:base1       = "14"$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	zpwr/.vim/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base10	zpwr/.vim/colors/bluedrake.vim	/^        let s:base10  = "11"$/;"	v
s:base10	zpwr/.vim/colors/bluedrake.vim	/^        let s:base10  = "24"$/;"	v
s:base10	zpwr/.vim/colors/bluedrake.vim	/^    let s:base10 = "2f5468"$/;"	v
s:base11	zpwr/.vim/colors/bluedrake.vim	/^        let s:base11  = "110"$/;"	v
s:base11	zpwr/.vim/colors/bluedrake.vim	/^        let s:base11  = "12"$/;"	v
s:base11	zpwr/.vim/colors/bluedrake.vim	/^    let s:base11 = "b4c3cf"$/;"	v
s:base2	zpwr/.vim/colors/fx.vim	/^    let s:base2     = s:palette['base2'][0]$/;"	v
s:base2	zpwr/.vim/colors/fx.vim	/^    let s:base2     = s:palette['base2'][1]$/;"	v
s:base2	zpwr/.vim/colors/parsec.vim	/^  let s:base2       = "#eee8d5"$/;"	v
s:base2	zpwr/.vim/colors/parsec.vim	/^  let s:base2       = "7"$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	zpwr/.vim/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base20	zpwr/.vim/colors/bluedrake.vim	/^        let s:base20  = "242"$/;"	v
s:base20	zpwr/.vim/colors/bluedrake.vim	/^        let s:base20  = "9"$/;"	v
s:base20	zpwr/.vim/colors/bluedrake.vim	/^    let s:base20 = "577284"$/;"	v
s:base21	zpwr/.vim/colors/bluedrake.vim	/^        let s:base21  = "14"$/;"	v
s:base21	zpwr/.vim/colors/bluedrake.vim	/^        let s:base21  = "247"$/;"	v
s:base21	zpwr/.vim/colors/bluedrake.vim	/^    let s:base21 = "8ea2b0"$/;"	v
s:base2L	zpwr/.vim/colors/fx.vim	/^    let s:base2L    = s:palette['base2L'][0]$/;"	v
s:base2L	zpwr/.vim/colors/fx.vim	/^    let s:base2L    = s:palette['base2L'][1]$/;"	v
s:base3	zpwr/.vim/colors/fx.vim	/^    let s:base3     = s:palette['base3'][0]$/;"	v
s:base3	zpwr/.vim/colors/fx.vim	/^    let s:base3     = s:palette['base3'][1]$/;"	v
s:base3	zpwr/.vim/colors/parsec.vim	/^  let s:base3       = "#fdf6e3"$/;"	v
s:base3	zpwr/.vim/colors/parsec.vim	/^  let s:base3       = "15"$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	zpwr/.vim/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:base30	zpwr/.vim/colors/bluedrake.vim	/^        let s:base30  = "253"$/;"	v
s:base30	zpwr/.vim/colors/bluedrake.vim	/^        let s:base30  = "7"$/;"	v
s:base30	zpwr/.vim/colors/bluedrake.vim	/^    let s:base30 = "dae6f0"$/;"	v
s:base31	zpwr/.vim/colors/bluedrake.vim	/^        let s:base31  = "15"$/;"	v
s:base31	zpwr/.vim/colors/bluedrake.vim	/^        let s:base31  = "254"$/;"	v
s:base31	zpwr/.vim/colors/bluedrake.vim	/^    let s:base31 = "edf8ff"$/;"	v
s:baseback0	zpwr/.vim/colors/bluedrake.vim	/^        let s:baseback0  = s:base00$/;"	v
s:baseback0	zpwr/.vim/colors/bluedrake.vim	/^        let s:baseback0  = s:base31$/;"	v
s:baseback1	zpwr/.vim/colors/bluedrake.vim	/^        let s:baseback1  = s:base01$/;"	v
s:baseback1	zpwr/.vim/colors/bluedrake.vim	/^        let s:baseback1  = s:base30$/;"	v
s:basecolor0	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor0 = s:base10$/;"	v
s:basecolor0	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor0 = s:base11$/;"	v
s:basecolor1	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor1 = s:base10$/;"	v
s:basecolor1	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor1 = s:base11$/;"	v
s:basecolor2	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor2 = s:base20$/;"	v
s:basecolor2	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor2 = s:base21$/;"	v
s:basecolor3	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor3 = s:base20$/;"	v
s:basecolor3	zpwr/.vim/colors/bluedrake.vim	/^        let s:basecolor3 = s:base21$/;"	v
s:basefore0	zpwr/.vim/colors/bluedrake.vim	/^        let s:basefore0  = s:base00$/;"	v
s:basefore0	zpwr/.vim/colors/bluedrake.vim	/^        let s:basefore0  = s:base30$/;"	v
s:basefore1	zpwr/.vim/colors/bluedrake.vim	/^        let s:basefore1  = s:base01$/;"	v
s:basefore1	zpwr/.vim/colors/bluedrake.vim	/^        let s:basefore1  = s:base31$/;"	v
s:bb	zpwr/.vim/colors/parsec.vim	/^let s:bb          = ""$/;"	v
s:bb	zpwr/.vim/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	zpwr/.vim/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:beige	zpwr/.vim/colors/twilight.vim	/^let s:beige = '#ceb67f'$/;"	v
s:belizeHole	zpwr/.vim/colors/flatui.vim	/^let s:belizeHole=     { "gui": "#2980b9", "cterm": "26"  }$/;"	v
s:bg	zpwr/.vim/colors/elda.vim	/^let s:bg = 233 "|234$/;"	v
s:bg	zpwr/.vim/colors/eva.vim	/^  let s:bg         = { "gui": "#280000", "cterm": "016"  }$/;"	v
s:bg	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg              = s:asphalt$/;"	v
s:bg	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg              = s:clouds$/;"	v
s:bg	zpwr/.vim/colors/flatui.vim	/^  let s:bg=s:clouds$/;"	v
s:bg	zpwr/.vim/colors/flatui.vim	/^  let s:bg=s:midnightBlue$/;"	v
s:bg	zpwr/.vim/colors/grey2.vim	/^    let s:bg = !!g:grey2_text_bg$/;"	v
s:bg	zpwr/.vim/colors/grey2.vim	/^    let s:bg = 1$/;"	v
s:bg	zpwr/.vim/colors/hemisu.vim	/^  let s:bg         = s:black$/;"	v
s:bg	zpwr/.vim/colors/hemisu.vim	/^  let s:bg         = s:white$/;"	v
s:bg	zpwr/.vim/colors/mdark.vim	/^let s:bg = "#1E2426"$/;"	v
s:bg	zpwr/.vim/colors/pencil.vim	/^  let s:bg              = s:black$/;"	v
s:bg	zpwr/.vim/colors/pencil.vim	/^  let s:bg              = s:white$/;"	v
s:bg	zpwr/.vim/colors/phd.vim	/^let s:bg = '#061229'$/;"	v
s:bg	zpwr/.vim/colors/scooby.vim	/^  let s:bg         = { "gui": "#000020", "cterm": "016" }$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	zpwr/.vim/colors/materialbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg1	zpwr/.vim/colors/kkruby.vim	/^let s:bg1   = "111111"$/;"	v
s:bg1	zpwr/.vim/colors/materialbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	zpwr/.vim/colors/materialbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg2	zpwr/.vim/colors/kkruby.vim	/^let s:bg2   = "050505"$/;"	v
s:bg2	zpwr/.vim/colors/kkruby.vim	/^let s:bg2   = "0f0f0f"$/;"	v
s:bg2	zpwr/.vim/colors/materialbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	zpwr/.vim/colors/materialbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg3	zpwr/.vim/colors/kkruby.vim	/^let s:bg3   = "171717"$/;"	v
s:bg3	zpwr/.vim/colors/materialbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	zpwr/.vim/colors/materialbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bg4	zpwr/.vim/colors/kkruby.vim	/^let s:bg4   = "1f1f1f"$/;"	v
s:bg4	zpwr/.vim/colors/materialbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	zpwr/.vim/colors/materialbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bg5	zpwr/.vim/colors/kkruby.vim	/^let s:bg5   = "272727"$/;"	v
s:bg6	zpwr/.vim/colors/kkruby.vim	/^let s:bg6   = "2f272f"$/;"	v
s:bg7	zpwr/.vim/colors/kkruby.vim	/^let s:bg7   = "372737"$/;"	v
s:bgNone	zpwr/.vim/colors/fx.vim	/^    let s:bgNone    = " ctermbg=NONE"$/;"	v
s:bgNone	zpwr/.vim/colors/fx.vim	/^    let s:bgNone    = " guibg=NONE"$/;"	v
s:bg_dark	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg_dark         = s:dark_asphalt$/;"	v
s:bg_dark	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg_dark  = s:clouds_subtle$/;"	v
s:bg_hl	zpwr/.vim/colors/phd.vim	/^let s:bg_hl = '#324454'$/;"	v
s:bg_hl_soft	zpwr/.vim/colors/phd.vim	/^let s:bg_hl_soft = '#1e293e'$/;"	v
s:bg_minor	zpwr/.vim/colors/phd.vim	/^let s:bg_minor = '#030a17'$/;"	v
s:bg_none	zpwr/.vim/colors/hybrid.vim	/^let s:bg_none = ' guibg=NONE ctermbg=NONE'$/;"	v
s:bg_normal	zpwr/.vim/colors/hybrid.vim	/^  let s:bg_normal = s:bg_background$/;"	v
s:bg_normal	zpwr/.vim/colors/hybrid.vim	/^  let s:bg_normal = s:bg_none$/;"	v
s:bg_subtle	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg_subtle       = s:asphalt_subtle$/;"	v
s:bg_subtle	zpwr/.vim/colors/flatcolor.vim	/^  let s:bg_subtle       = s:dark_clouds$/;"	v
s:bg_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:bg_subtle       = s:light_black$/;"	v
s:bg_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:bg_subtle       = s:light_gray$/;"	v
s:bg_very_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:bg_very_subtle  = s:lighter_gray$/;"	v
s:bg_very_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:bg_very_subtle  = s:subtle_black$/;"	v
s:black	zpwr/.vim/colors/ansi_blows.vim	/^let s:black='#000000'$/;"	v
s:black	zpwr/.vim/colors/astronaut.vim	/^ let s:black   = "black"$/;"	v
s:black	zpwr/.vim/colors/flatcolor.vim	/^let s:black           = { "gui": "#212121", "cterm": "0", "cterm16" : "0" }$/;"	v
s:black	zpwr/.vim/colors/fx.vim	/^    let s:black     = s:palette['black'][0]$/;"	v
s:black	zpwr/.vim/colors/fx.vim	/^    let s:black     = s:palette['black'][1]$/;"	v
s:black	zpwr/.vim/colors/harlequin.vim	/^let s:black = ['#000000', 0]$/;"	v
s:black	zpwr/.vim/colors/hemisu.vim	/^let s:black            = { "gui": "#000000", "cterm": "16"  }$/;"	v
s:black	zpwr/.vim/colors/literal_tango.vim	/^let s:black        = "#2e3436"$/;"	v
s:black	zpwr/.vim/colors/mdark.vim	/^let s:black = "#000000"$/;"	v
s:black	zpwr/.vim/colors/onedark.vim	/^let s:black = { "gui": "#282C34", "cterm": "235", "cterm16": "0" }$/;"	v
s:black	zpwr/.vim/colors/pencil.vim	/^let s:black           = { "gui": "#212121", "cterm": "0"   }$/;"	v
s:black	zpwr/.vim/colors/znake.vim	/^let s:black      = "000000"$/;"	v
s:blue	zpwr/.vim/colors/CandyPaper.vim	/^let s:blue         = "#6fb5de" "Operator\/Delimiter$/;"	v
s:blue	zpwr/.vim/colors/PaperColor.vim	/^  let s:blue    = ['#00afaf', '37'] "Keyword$/;"	v
s:blue	zpwr/.vim/colors/PaperColor.vim	/^  let s:blue    = ['#4271ae', '25'] "Keyword$/;"	v
s:blue	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:blue = "bbdaff"$/;"	v
s:blue	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:blue = "7aa6da"$/;"	v
s:blue	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:blue = "6699cc"$/;"	v
s:blue	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:blue = "81a2be"$/;"	v
s:blue	zpwr/.vim/colors/Tomorrow.vim	/^let s:blue = "4271ae"$/;"	v
s:blue	zpwr/.vim/colors/abbott.vim	/^let s:blue="#3f91f1"$/;"	v
s:blue	zpwr/.vim/colors/ansi_blows.vim	/^let s:blue='#1d28d2'$/;"	v
s:blue	zpwr/.vim/colors/antares.vim	/^let s:blue             = "7fc6f0"$/;"	v
s:blue	zpwr/.vim/colors/astronaut.vim	/^ let s:blue    = "blue"$/;"	v
s:blue	zpwr/.vim/colors/astronaut.vim	/^ let s:blue    = "darkblue"$/;"	v
s:blue	zpwr/.vim/colors/bluedrake.vim	/^        let s:blue    = "32"$/;"	v
s:blue	zpwr/.vim/colors/bluedrake.vim	/^        let s:blue    = "4"$/;"	v
s:blue	zpwr/.vim/colors/bluedrake.vim	/^    let s:blue    = "0094d4"$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-material.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/evening.vim	/^let s:blue            = "6ad6e5"$/;"	v
s:blue	zpwr/.vim/colors/flatcolor.vim	/^let s:blue = { "gui": "#91ddff", "cterm": "159", "cterm16": "4"}$/;"	v
s:blue	zpwr/.vim/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	zpwr/.vim/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/heroku-terminal.vim	/^let s:blue = "09afed"$/;"	v
s:blue	zpwr/.vim/colors/heroku.vim	/^let s:blue = "09afed"$/;"	v
s:blue	zpwr/.vim/colors/hybrid-light.vim	/^  let s:blue       = "#00005f"$/;"	v
s:blue	zpwr/.vim/colors/hybrid-light.vim	/^  let s:blue       = "17"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_material.vim	/^    let s:blue       = "110"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_material.vim	/^    let s:blue       = "12"   " LightBlue$/;"	v
s:blue	zpwr/.vim/colors/hybrid_material.vim	/^    let s:blue       = "4"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_material.vim	/^  let s:blue       = "#81a2be"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:blue       = "110"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:blue       = "12"   " LightBlue$/;"	v
s:blue	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:blue       = "4"$/;"	v
s:blue	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:blue       = "#81a2be"$/;"	v
s:blue	zpwr/.vim/colors/kkruby.vim	/^let s:blue         = "aa46c8"$/;"	v
s:blue	zpwr/.vim/colors/last256.vim	/^  let s:blue       = "#5f87ff"$/;"	v
s:blue	zpwr/.vim/colors/last256.vim	/^  let s:blue       = "69"$/;"	v
s:blue	zpwr/.vim/colors/lumberjack.vim	/^let s:blue   = { 'gui': '#9bcbeb', 'cterm': '4'  }$/;"	v
s:blue	zpwr/.vim/colors/materialbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	zpwr/.vim/colors/materialbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	zpwr/.vim/colors/materialbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	zpwr/.vim/colors/mdark.vim	/^let s:blue = "#3B6BBD"$/;"	v
s:blue	zpwr/.vim/colors/onedark.vim	/^let s:blue = { "gui": "#61AFEF", "cterm": "39", "cterm16": "4" } " Alternate cterm: 75$/;"	v
s:blue	zpwr/.vim/colors/parsec.vim	/^  let s:blue        = "#99cccc"$/;"	v
s:blue	zpwr/.vim/colors/parsec.vim	/^  let s:blue        = "4"$/;"	v
s:blue	zpwr/.vim/colors/pencil.vim	/^let s:blue            = { "gui": "#20BBFC", "cterm": "12"  }$/;"	v
s:blue	zpwr/.vim/colors/phd.vim	/^let s:blue = '#5299bf'$/;"	v
s:blue	zpwr/.vim/colors/saturn.vim	/^let s:blue =             [s:hsl2color(215, 20, 60), 60 ]$/;"	v
s:blue	zpwr/.vim/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	zpwr/.vim/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	zpwr/.vim/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	zpwr/.vim/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	zpwr/.vim/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:blue	zpwr/.vim/colors/znake.vim	/^let s:blue       = "6d9cbe"$/;"	v
s:blue_lav	zpwr/.vim/colors/mdark.vim	/^let s:blue_lav = "#393CC3"$/;"	v
s:blue_light	zpwr/.vim/colors/saturn.vim	/^let s:blue_light =       [s:hsl2color(210, 25, 65), 60 ]$/;"	v
s:bold	zpwr/.vim/colors/astronaut.vim	/^ let s:bold=""$/;"	v
s:bold	zpwr/.vim/colors/astronaut.vim	/^ let s:bold=",bold"$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-material.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/fx.vim	/^    let s:bold      = " cterm=BOLD"$/;"	v
s:bold	zpwr/.vim/colors/fx.vim	/^    let s:bold      = " gui=BOLD"$/;"	v
s:bold	zpwr/.vim/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:bold	zpwr/.vim/colors/materialbox.vim	/^  let s:bold = ''$/;"	v
s:bold	zpwr/.vim/colors/materialbox.vim	/^let s:bold = 'bold,'$/;"	v
s:boldBlack	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldBlack='#555555'$/;"	v
s:boldBlue	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldBlue='#5050ff'$/;"	v
s:boldCyan	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldCyan='#44ffff'$/;"	v
s:boldGreen	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldGreen='#44ff44'$/;"	v
s:boldMagenta	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldMagenta='#ff44ff'$/;"	v
s:boldRed	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldRed='#dc3244'$/;"	v
s:boldWhite	zpwr/.vim/colors/ansi_blows.vim	/^let s:boldWhite='#ffffff'$/;"	v
s:bold_items	zpwr/.vim/colors/lucius.vim	/^let s:bold_items = [$/;"	v
s:bold_opt	zpwr/.vim/colors/marklar.vim	/^    let s:bold_opt = 0$/;"	v
s:border1_bg	zpwr/.vim/colors/phd.vim	/^let s:border1_bg = s:bg_hl$/;"	v
s:border1_fg	zpwr/.vim/colors/phd.vim	/^let s:border1_fg = s:text_minor$/;"	v
s:brick	zpwr/.vim/colors/harlequin.vim	/^let s:brick = ['#CB4154', 167]$/;"	v
s:brick	zpwr/.vim/colors/mdark.vim	/^let s:brick = "#993333"$/;"	v
s:bright	zpwr/.vim/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:brown	zpwr/.vim/colors/abbott.vim	/^let s:brown="#1f1912"$/;"	v
s:brown	zpwr/.vim/colors/ansi_blows.vim	/^let s:brown='#aa5500'$/;"	v
s:brown	zpwr/.vim/colors/last256.vim	/^  let s:brown      = "#87875f"$/;"	v
s:brown	zpwr/.vim/colors/last256.vim	/^  let s:brown      = "101"$/;"	v
s:brown	zpwr/.vim/colors/literal_tango.vim	/^let s:brown        = "#c4a000"$/;"	v
s:brown	zpwr/.vim/colors/znake.vim	/^let s:brown      = "cc7833"$/;"	v
s:brown1	zpwr/.vim/colors/lumberjack.vim	/^let s:brown1 = { 'gui': '#b56124', 'cterm': '5'  }$/;"	v
s:brown2	zpwr/.vim/colors/lumberjack.vim	/^let s:brown2 = { 'gui': '#947463', 'cterm': '3'  }$/;"	v
s:brown3	zpwr/.vim/colors/lumberjack.vim	/^let s:brown3 = { 'gui': '#c76440', 'cterm': '9'  }$/;"	v
s:brown_orange	zpwr/.vim/colors/mdark.vim	/^let s:brown_orange = "#CC6633"$/;"	v
s:bufnr_save	zpwr/.vim/sessions/Scripting.vim	/^let s:bufnr_save = bufnr("%")$/;"	v
s:burnt_orange	zpwr/.vim/colors/abbott.vim	/^let s:burnt_orange="#f63f05"$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc = {}$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.blackestgravel = ['141413', 232]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.brightgravel   = ['d9cec3', 252]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.coal = ['000000', 16]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.coffee    = ['c7915b', 173]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.dalespale = ['fade3e', 221]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.darkgravel     = ['242321', 235]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.darkroast = ['88633f', 95]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.deepergravel   = ['35322d', 236]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.deepgravel     = ['45413b', 238]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.dirtyblonde = ['f4cf86', 222]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.dress = ['ff9eb8', 211]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.gravel         = ['857f78', 243]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.lightgravel    = ['998f84', 245]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.lime = ['aeee00', 154]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.mediumgravel   = ['666462', 241]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.orange = ['ffa724', 214]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.plain = ['f8f6f2', 15]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.saltwatertaffy = ['8cffba', 121]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.snow = ['ffffff', 15]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.taffy = ['ff2c4b', 196]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.tardis = ['0a9dff', 39]$/;"	v
s:bwc	zpwr/.vim/colors/badwolf.vim	/^let s:bwc.toffee = ['b88853', 137]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc = {}$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.blackestgravel = ['141413', 232]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.brightgravel   = ['d9cec3', 252]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.coal = ['000000', 16]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.coffee    = ['c7915b', 173]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.dalespale = ['fade3e', 221]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.darkgravel     = ['242321', 235]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.darkroast = ['88633f', 95]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.deepergravel   = ['35322d', 236]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.deepgravel     = ['45413b', 238]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.dirtyblonde = ['f4cf86', 222]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.dress = ['ff9eb8', 211]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.gravel         = ['857f78', 243]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.lightgravel    = ['998f84', 245]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.lime = ['aeee00', 154]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.mediumgravel   = ['666462', 241]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.orange = ['ffa724', 214]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.plain = ['f8f6f2', 15]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.saltwatertaffy = ['8cffba', 121]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.snow = ['ffffff', 15]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.taffy = ['0000ff',21]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.tardis = ['0a9dff', 39]$/;"	v
s:bwc	zpwr/.vim/colors/bluewolf.vim	/^let s:bwc.toffee = ['b88853', 137]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc = {}$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.blackestgravel = ['141413', 232]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.brightgravel   = ['d9cec3', 252]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.coal = ['000000', 16]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.coffee    = ['c7915b', 173]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.dalespale = ['fade3e', 221]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.darkgravel     = ['242321', 235]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.darkroast = ['88633f', 95]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.deepergravel   = ['35322d', 236]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.deepgravel     = ['45413b', 238]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.dirtyblonde = ['f4cf86', 222]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.dress = ['ff9eb8', 211]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.gravel         = ['857f78', 243]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.lightgravel    = ['998f84', 245]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.lime = ['aeee00', 154]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.mediumgravel   = ['666462', 241]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.orange = ['ffa724', 214]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.plain = ['f8f6f2', 15]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.saltwatertaffy = ['8cffba', 121]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.snow = ['ffffff', 15]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.taffy = ['ff2c4b', 196]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.tardis = ['0a9dff', 39]$/;"	v
s:bwc	zpwr/.vim/colors/goodwolf.vim	/^let s:bwc.toffee = ['b88853', 137]$/;"	v
s:c	zpwr/.vim/colors/detailed.vim	/^let s:c = {$/;"	v
s:c	zpwr/.vim/colors/hybrid-light.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/hybrid.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/hybrid_material.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/last256.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/parsec.vim	/^let s:c               = ",undercurl"$/;"	v
s:c	zpwr/.vim/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:can_replace_pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:can_replace_pyeval = !exists('g:powerline_pyeval')$/;"	v
s:carrot	zpwr/.vim/colors/flatui.vim	/^let s:carrot=         { "gui": "#e67e22", "cterm": "172"  }$/;"	v
s:ccube	zpwr/.vim/colors/xterm16.vim	/^	let s:ccube = "002a557faad4"$/;"	v
s:ccube	zpwr/.vim/colors/xterm16.vim	/^	let s:ccube = g:xterm16_ccube$/;"	v
s:ccube	zpwr/.vim/colors/xterm16.vim	/^	let s:ccube ="005f87afd7ff"$/;"	v
s:cerise	zpwr/.vim/colors/harlequin.vim	/^let s:cerise = ['#FF0033', 197]$/;"	v
s:changebg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:changebg   = "#d7d7ff"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:changebg   = "189"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_material.vim	/^    let s:changebg   = "12"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:changebg   = "#5F5F87"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:changebg   = "60"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:changebg   = "12"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:changebg   = "#5F5F87"$/;"	v
s:changebg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:changebg   = "60"$/;"	v
s:changebg	zpwr/.vim/colors/last256.vim	/^  let s:changebg   = "#5f5f87"$/;"	v
s:changebg	zpwr/.vim/colors/last256.vim	/^  let s:changebg   = "60"$/;"	v
s:changefg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:changefg   = "189"$/;"	v
s:changefg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:changefg   = "189"$/;"	v
s:changefg	zpwr/.vim/colors/last256.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	zpwr/.vim/colors/last256.vim	/^  let s:changefg   = "189"$/;"	v
s:cinterval	zpwr/.vim/colors/xterm16.vim	/^	let s:cinterval = s:cinterval . s:tohex( (('0x'.s:lower) + ('0x'.s:upper))\/2 )$/;"	v
s:cinterval	zpwr/.vim/colors/xterm16.vim	/^    let s:cinterval = ""$/;"	v
s:clouds	zpwr/.vim/colors/flatcolor.vim	/^let s:clouds = { "gui": "#fbfcfc", "cterm": "254", "cterm16": "NONE"}$/;"	v
s:clouds	zpwr/.vim/colors/flatui.vim	/^let s:clouds=         { "gui": "#ecf0f1", "cterm": "255" }$/;"	v
s:clouds_subtle	zpwr/.vim/colors/flatcolor.vim	/^let s:clouds_subtle = { "gui": "#cbe3e7", "cterm": "253", "cterm16": "7"}$/;"	v
s:cmap	zpwr/.vim/colors/calmar256-light.vim	/^    let s:cmap =   [ $/;"	v
s:cmap	zpwr/.vim/colors/pink.vim	/^    let s:cmap = [$/;"	v
s:code_bg	zpwr/.vim/colors/pencil.vim	/^  let s:code_bg        = s:bg$/;"	v
s:code_bg	zpwr/.vim/colors/pencil.vim	/^  let s:code_bg        = s:bg_very_subtle$/;"	v
s:col	zpwr/.vim/colors/calmar256-light.vim	/^            let s:col[i] = "NONE"$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-material.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:color_column = get(s:gb, g:colorsbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_column	zpwr/.vim/colors/materialbox.vim	/^  let s:color_column = get(s:gb, g:materialbox_color_column)$/;"	v
s:color_column	zpwr/.vim/colors/materialbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_indices	zpwr/.vim/colors/sprinkles.vim	/^let s:color_indices = [$/;"	v
s:color_map	zpwr/.vim/colors/lucius.vim	/^let s:color_map = {$/;"	v
s:colorcolumn	zpwr/.vim/colors/CandyPaper.vim	/^let s:colorcolumn  = "#800000"$/;"	v
s:colormap	zpwr/.vim/colors/xterm16.vim	/^	let s:colormap = 'allblue'$/;"	v
s:colormap	zpwr/.vim/colors/xterm16.vim	/^	let s:colormap = 'standard'$/;"	v
s:colormap	zpwr/.vim/colors/xterm16.vim	/^	let s:colormap = g:xterm16_colormap$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors = {}$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base0 = { 'gui': '#0c1014', 'cterm': 0 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base1 = { 'gui': '#11151c', 'cterm': 8 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base2 = { 'gui': '#091f2e', 'cterm': 10 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base3 = { 'gui': '#0a3749', 'cterm': 12 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base4 = { 'gui': '#245361', 'cterm': 11 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base5 = { 'gui': '#599cab', 'cterm': 14 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base6 = { 'gui': '#99d1ce', 'cterm': 7 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.base7 = { 'gui': '#d3ebe9', 'cterm': 15 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.blue    = { 'gui': '#195466', 'cterm': 4  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.cyan    = { 'gui': '#33859E', 'cterm': 6  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.green   = { 'gui': '#2aa889', 'cterm': 2  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.magenta = { 'gui': '#888ca6', 'cterm': 13 }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.orange  = { 'gui': '#d26937', 'cterm': 9  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.red     = { 'gui': '#c23127', 'cterm': 1  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.violet  = { 'gui': '#4e5166', 'cterm': 5  }$/;"	v
s:colors	zpwr/.vim/colors/gotham.vim	/^let s:colors.yellow  = { 'gui': '#edb443', 'cterm': 3  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors = {}$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base0 = { 'gui': '#0c1014', 'cterm': 232 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base1 = { 'gui': '#11151c', 'cterm': 233 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base2 = { 'gui': '#091f2e', 'cterm': 17  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base3 = { 'gui': '#0a3749', 'cterm': 18  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base4 = { 'gui': '#245361', 'cterm': 24  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base5 = { 'gui': '#599cab', 'cterm': 81  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base6 = { 'gui': '#99d1ce', 'cterm': 122 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.base7 = { 'gui': '#d3ebe9', 'cterm': 194 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.blue    = { 'gui': '#195466', 'cterm': 24  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.cyan    = { 'gui': '#33859E', 'cterm': 44  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.green   = { 'gui': '#2aa889', 'cterm': 78  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.magenta = { 'gui': '#888ca6', 'cterm': 67  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.orange  = { 'gui': '#d26937', 'cterm': 166 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.red     = { 'gui': '#c23127', 'cterm': 124 }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.violet  = { 'gui': '#4e5166', 'cterm': 60  }$/;"	v
s:colors	zpwr/.vim/colors/gotham256.vim	/^let s:colors.yellow  = { 'gui': '#edb443', 'cterm': 214 }$/;"	v
s:colors256	zpwr/.vim/colors/calmar256-light.vim	/^let s:colors256 = [$/;"	v
s:colors256	zpwr/.vim/colors/pink.vim	/^let s:colors256 = [$/;"	v
s:colors_name	zpwr/.vim/colors/seoul256.vim	/^let s:colors_name = get(g:, 'colors_name', '')$/;"	v
s:colorscheme_list	zpwr/.vim/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:colorvim7	zpwr/.vim/colors/calmar256-light.vim	/^let s:colorvim7 = [$/;"	v
s:colorvim7	zpwr/.vim/colors/pink.vim	/^let s:colorvim7 = [$/;"	v
s:comment	zpwr/.vim/colors/CandyPaper.vim	/^let s:comment      = "#5a805a"$/;"	v
s:comment	zpwr/.vim/colors/PaperColor.vim	/^  let s:comment      = ['#878787', '102']$/;"	v
s:comment	zpwr/.vim/colors/PaperColor.vim	/^  let s:comment      = ['#8a8a8a', '244']$/;"	v
s:comment	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:comment = "7285b7"$/;"	v
s:comment	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:comment = "969896"$/;"	v
s:comment	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:comment = "999999"$/;"	v
s:comment	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:comment = "969896"$/;"	v
s:comment	zpwr/.vim/colors/Tomorrow.vim	/^let s:comment = "8e908c"$/;"	v
s:comment	zpwr/.vim/colors/antares.vim	/^let s:comment          = "757575"$/;"	v
s:comment	zpwr/.vim/colors/eva.vim	/^  let s:comment    = { "gui": "#601000", "cterm": "052" }$/;"	v
s:comment	zpwr/.vim/colors/evening.vim	/^let s:comment         = "757575"$/;"	v
s:comment	zpwr/.vim/colors/hemisu.vim	/^  let s:comment    = s:middleDarkGrey$/;"	v
s:comment	zpwr/.vim/colors/hemisu.vim	/^  let s:comment    = s:middleLightGrey$/;"	v
s:comment	zpwr/.vim/colors/heroku-terminal.vim	/^let s:comment = "62548b"$/;"	v
s:comment	zpwr/.vim/colors/heroku.vim	/^let s:comment = "62548b"$/;"	v
s:comment	zpwr/.vim/colors/hybrid-light.vim	/^  let s:comment    = "#5f5f5f"$/;"	v
s:comment	zpwr/.vim/colors/hybrid-light.vim	/^  let s:comment    = "59"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_material.vim	/^    let s:comment    = "243"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_material.vim	/^    let s:comment    = "7"    " LightGrey$/;"	v
s:comment	zpwr/.vim/colors/hybrid_material.vim	/^    let s:comment    = "7"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_material.vim	/^  let s:comment    = "#707880"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:comment    = "243"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:comment    = "7"    " LightGrey$/;"	v
s:comment	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:comment    = "7"$/;"	v
s:comment	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:comment    = "#707880"$/;"	v
s:comment	zpwr/.vim/colors/kkruby.vim	/^let s:comment      = "ad6b1d"$/;"	v
s:comment	zpwr/.vim/colors/last256.vim	/^  let s:comment    = "#585858"$/;"	v
s:comment	zpwr/.vim/colors/last256.vim	/^  let s:comment    = "240"$/;"	v
s:comment	zpwr/.vim/colors/scooby.vim	/^  let s:comment    = { "gui": "#6272a4", "cterm": "061" }$/;"	v
s:comment	zpwr/.vim/colors/znake.vim	/^let s:comment    = "2a5680"$/;"	v
s:comment_grey	zpwr/.vim/colors/onedark.vim	/^let s:comment_grey = { "gui": "#5C6670", "cterm": "59", "cterm16": "15" }$/;"	v
s:concrete	zpwr/.vim/colors/flatui.vim	/^let s:concrete=       { "gui": "#95a5a6", "cterm": "247" }$/;"	v
s:cond	zpwr/.vim/colors/kkruby.vim	/^let s:cond         = "ee829D"$/;"	v
s:const	zpwr/.vim/colors/elda.vim	/^let s:const = 35$/;"	v
s:constant1	zpwr/.vim/colors/phd.vim	/^let s:constant1 = '#c08040'$/;"	v
s:constant2	zpwr/.vim/colors/phd.vim	/^let s:constant2 = '#d2852b'$/;"	v
s:constant3	zpwr/.vim/colors/phd.vim	/^let s:constant3 = '#f2a54b'$/;"	v
s:contrast	zpwr/.vim/colors/lucius.vim	/^    let s:contrast = "normal"$/;"	v
s:contrast	zpwr/.vim/colors/lucius.vim	/^    let s:contrast = g:lucius_contrast$/;"	v
s:contrast_bg	zpwr/.vim/colors/lucius.vim	/^    let s:contrast_bg = "normal"$/;"	v
s:contrast_bg	zpwr/.vim/colors/lucius.vim	/^    let s:contrast_bg = g:lucius_contrast_bg$/;"	v
s:control1	zpwr/.vim/colors/phd.vim	/^let s:control1 = '#f9f7a4'$/;"	v
s:control2	zpwr/.vim/colors/phd.vim	/^let s:control2 = '#c9b794'$/;"	v
s:cpo_save	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	zpwr/.vim/colors/xterm16.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	zpwr/taglist_46/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cterm00	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm00 = "00" "{{{$/;"	v
s:cterm00	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/material-theme.vim	/^let s:cterm00 = "00"$/;"	v
s:cterm00	zpwr/.vim/colors/mod8.vim	/^let s:cterm00 = "00"        " unused$/;"	v
s:cterm01	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm01 = "238"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm01 = "10"$/;"	v
s:cterm01	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	zpwr/.vim/colors/mod8.vim	/^let s:cterm01 = "00"$/;"	v
s:cterm02	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm02 = "239"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm02 = "11"$/;"	v
s:cterm02	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	zpwr/.vim/colors/mod8.vim	/^let s:cterm02 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm03 = "59"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/material-theme.vim	/^let s:cterm03 = "08"$/;"	v
s:cterm03	zpwr/.vim/colors/mod8.vim	/^let s:cterm03 = "07"$/;"	v
s:cterm04	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm04 = "12"$/;"	v
s:cterm04	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	zpwr/.vim/colors/mod8.vim	/^let s:cterm04 = "15"$/;"	v
s:cterm05	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/material-theme.vim	/^let s:cterm05 = "07"$/;"	v
s:cterm05	zpwr/.vim/colors/mod8.vim	/^let s:cterm05 = "07"        " unused$/;"	v
s:cterm06	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm06 = "13"$/;"	v
s:cterm06	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	zpwr/.vim/colors/mod8.vim	/^let s:cterm06 = "13"        " unused$/;"	v
s:cterm07	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/material-theme.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	zpwr/.vim/colors/mod8.vim	/^let s:cterm07 = "15"        " unused$/;"	v
s:cterm08	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm08 = "203"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/material-theme.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm08	zpwr/.vim/colors/mod8.vim	/^let s:cterm08 = "01"$/;"	v
s:cterm09	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm09 = "09"$/;"	v
s:cterm09	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	zpwr/.vim/colors/mod8.vim	/^let s:cterm09 = "09"$/;"	v
s:cterm0A	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/material-theme.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0A	zpwr/.vim/colors/mod8.vim	/^let s:cterm0A = "03"$/;"	v
s:cterm0B	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0B = "114"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/material-theme.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0B	zpwr/.vim/colors/mod8.vim	/^let s:cterm0B = "02"$/;"	v
s:cterm0C	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/material-theme.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0C	zpwr/.vim/colors/mod8.vim	/^let s:cterm0C = "06"$/;"	v
s:cterm0D	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0D = "68"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/material-theme.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	zpwr/.vim/colors/mod8.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0E	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/base16-railscasts.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-dark.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darklake.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darksea.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/material-theme.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0E	zpwr/.vim/colors/mod8.vim	/^let s:cterm0E = "05"$/;"	v
s:cterm0F	zpwr/.vim/colors/OceanicNext.vim	/^let s:cterm0F = "137"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliercave.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierdune.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierestuary.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierforest.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierheath.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierlakeside.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierplateau.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliersavanna.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-atelierseaside.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/base16-railscasts.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-dark.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkcave.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkdesert.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkearth.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkforest.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkheath.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darklake.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkmeadow.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkpark.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkpool.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darksea.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/duotone-darkspace.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm0F = "14"$/;"	v
s:cterm0F	zpwr/.vim/colors/material-theme.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	zpwr/.vim/colors/mod8.vim	/^let s:cterm0F = "14"$/;"	v
s:ctermWhite	zpwr/.vim/colors/OceanicNext.vim	/^let s:ctermWhite = "15" "}}}$/;"	v
s:cterm_aqua	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_aqua       = "109"$/;"	v
s:cterm_aqua	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_aqua       = "14"  " LightCyan$/;"	v
s:cterm_blue	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_blue       = "110"$/;"	v
s:cterm_blue	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_blue       = "12"  " LightBlue$/;"	v
s:cterm_comment	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_comment    = "243"$/;"	v
s:cterm_comment	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_comment    = "7"   " LightGrey$/;"	v
s:cterm_delbg	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_delbg      = "167"$/;"	v
s:cterm_delbg	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_delbg      = "9"   " LightRed$/;"	v
s:cterm_foreground	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_foreground = "15"  " White$/;"	v
s:cterm_foreground	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_foreground = "250"$/;"	v
s:cterm_green	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_green      = "10"  " LightGreen$/;"	v
s:cterm_green	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_green      = "143"$/;"	v
s:cterm_gui_map	zpwr/.vim/colors/detailed.vim	/^let s:cterm_gui_map = {$/;"	v
s:cterm_line	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_line       = "0"   " Black$/;"	v
s:cterm_line	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_line       = "235"$/;"	v
s:cterm_none	zpwr/.vim/colors/xterm16.vim	/^    let s:cterm_none = 'NONE'$/;"	v
s:cterm_orange	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_orange     = "173"$/;"	v
s:cterm_orange	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_orange     = "3"   " DarkYellow$/;"	v
s:cterm_purple	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_purple     = "13"  " LightMagenta$/;"	v
s:cterm_purple	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_purple     = "139"$/;"	v
s:cterm_red	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_red        = "167"$/;"	v
s:cterm_red	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_red        = "9"   " LightRed$/;"	v
s:cterm_selection	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_selection  = "237"$/;"	v
s:cterm_selection	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_selection  = "8"   " DarkGrey$/;"	v
s:cterm_yellow	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_yellow     = "11"  " LightYellow$/;"	v
s:cterm_yellow	zpwr/.vim/colors/hybrid.vim	/^  let s:cterm_yellow     = "221"$/;"	v
s:ctype	zpwr/.vim/colors/xterm16.vim	/^    let s:ctype = has('gui_running') ? 'gui' : 'cterm'$/;"	v
s:cursor_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursor_bg    = "#dede9b"$/;"	v
s:cursor_bg	zpwr/.vim/colors/antares.vim	/^let s:cursor_bg        = "555555"$/;"	v
s:cursor_bg	zpwr/.vim/colors/evening.vim	/^let s:cursor_bg       = "555555"$/;"	v
s:cursor_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursor_fg    = "#050505"$/;"	v
s:cursor_grey	zpwr/.vim/colors/onedark.vim	/^let s:cursor_grey =  { "gui": "#2C323B", "cterm": "236", "cterm16": "8" }$/;"	v
s:cursor_im_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursor_im_bg = "#9b9bde"$/;"	v
s:cursor_im_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursor_im_fg = "#050505"$/;"	v
s:cursorcolumn	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursorcolumn = "#262626"$/;"	v
s:cursorcolumn	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorcolumn = ['#303030', '235']$/;"	v
s:cursorcolumn	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorcolumn = ['#e4e4e4', '254']$/;"	v
s:cursorline	zpwr/.vim/colors/CandyPaper.vim	/^let s:cursorline   = "#262626"$/;"	v
s:cursorline	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorline   = ['#303030', '235']$/;"	v
s:cursorline	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorline   = ['#e4e4e4', '254']$/;"	v
s:cursorline	zpwr/.vim/colors/kkruby.vim	/^let s:cursorline   = "2F393C"$/;"	v
s:cursorlinenr	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorlinenr = ['#af0000', '124']$/;"	v
s:cursorlinenr	zpwr/.vim/colors/PaperColor.vim	/^  let s:cursorlinenr = ['#ffff00', '226']$/;"	v
s:custom_bg	zpwr/.vim/colors/seoul256-light.vim	/^let s:custom_bg = get(g:, 'seoul256_light_background', get(g:, 'seoul256_background', 253))$/;"	v
s:cwd_save	zpwr/.vim/sessions/Scripting.vim	/^let s:cwd_save = getcwd()$/;"	v
s:cyan	zpwr/.vim/colors/ansi_blows.vim	/^let s:cyan='#00aaaa'$/;"	v
s:cyan	zpwr/.vim/colors/astronaut.vim	/^ let s:cyan    = "cyan"$/;"	v
s:cyan	zpwr/.vim/colors/astronaut.vim	/^ let s:cyan    = "darkcyan"$/;"	v
s:cyan	zpwr/.vim/colors/bluedrake.vim	/^        let s:cyan    = "37"$/;"	v
s:cyan	zpwr/.vim/colors/bluedrake.vim	/^        let s:cyan    = "6"$/;"	v
s:cyan	zpwr/.vim/colors/bluedrake.vim	/^    let s:cyan    = "00a39a"$/;"	v
s:cyan	zpwr/.vim/colors/flatcolor.vim	/^  let s:cyan            = s:cyan$/;"	v
s:cyan	zpwr/.vim/colors/flatcolor.vim	/^  let s:cyan            = s:dark_cyan$/;"	v
s:cyan	zpwr/.vim/colors/flatcolor.vim	/^let s:cyan = { "gui": "#aaffe4", "cterm": "122", "cterm16": "6"}$/;"	v
s:cyan	zpwr/.vim/colors/mdark.vim	/^let s:cyan = "#66CCCC"$/;"	v
s:cyan	zpwr/.vim/colors/onedark.vim	/^let s:cyan = { "gui": "#56B6C2", "cterm": "38", "cterm16": "6" } " Alternate cterm: 73$/;"	v
s:cyan	zpwr/.vim/colors/parsec.vim	/^  let s:cyan        = "#d2fdfe"$/;"	v
s:cyan	zpwr/.vim/colors/parsec.vim	/^  let s:cyan        = "6"$/;"	v
s:cyan	zpwr/.vim/colors/pencil.vim	/^  let s:cyan            = s:dark_cyan$/;"	v
s:cyan	zpwr/.vim/colors/pencil.vim	/^  let s:cyan            = s:light_cyan$/;"	v
s:cyan	zpwr/.vim/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	zpwr/.vim/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	zpwr/.vim/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	zpwr/.vim/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	zpwr/.vim/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:cyan	zpwr/.vim/colors/twilight.vim	/^let s:cyan = '#74dad9'$/;"	v
s:d_cyan	zpwr/.vim/colors/mdark.vim	/^let s:d_cyan = "#006666"$/;"	v
s:d_dusty_blue	zpwr/.vim/colors/mdark.vim	/^let s:d_dusty_blue = "#535E95"$/;"	v
s:d_gray	zpwr/.vim/colors/mdark.vim	/^let s:d_gray   = "#2E3436"$/;"	v
s:d_green	zpwr/.vim/colors/mdark.vim	/^let s:d_green = "#447864"$/;"	v
s:d_orange	zpwr/.vim/colors/mdark.vim	/^let s:d_orange = "#E1593D"$/;"	v
s:d_pink	zpwr/.vim/colors/mdark.vim	/^let s:d_pink = "#D15F7A"$/;"	v
s:d_red	zpwr/.vim/colors/mdark.vim	/^let s:d_red = "#871019"$/;"	v
s:darkAccent1	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent1=s:greenSea$/;"	v
s:darkAccent1	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent1=s:turquoise$/;"	v
s:darkAccent2	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent2=s:emerald$/;"	v
s:darkAccent2	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent2=s:nephritis$/;"	v
s:darkAccent3	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent3=s:belizeHole$/;"	v
s:darkAccent3	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent3=s:peterRiver$/;"	v
s:darkAccent4	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent4=s:amethyst$/;"	v
s:darkAccent4	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent4=s:wisteria$/;"	v
s:darkAccent5	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent5=s:orange$/;"	v
s:darkAccent5	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent5=s:sunFlower$/;"	v
s:darkAccent6	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent6=s:carrot$/;"	v
s:darkAccent6	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent6=s:pumpkin$/;"	v
s:darkAccent7	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent7=s:alizarin$/;"	v
s:darkAccent7	zpwr/.vim/colors/flatui.vim	/^  let s:darkAccent7=s:pomegranate$/;"	v
s:darkBlue	zpwr/.vim/colors/hemisu.vim	/^let s:darkBlue         = { "gui": "#005F87", "cterm": "24"  }$/;"	v
s:darkGreen	zpwr/.vim/colors/hemisu.vim	/^let s:darkGreen        = { "gui": "#5F5F00", "cterm": "58"  }$/;"	v
s:darkGrey	zpwr/.vim/colors/hemisu.vim	/^let s:darkGrey         = { "gui": "#444444", "cterm": "238" }$/;"	v
s:darkPink	zpwr/.vim/colors/hemisu.vim	/^let s:darkPink         = { "gui": "#63001C", "cterm": "88"  }$/;"	v
s:darkTan	zpwr/.vim/colors/hemisu.vim	/^let s:darkTan          = { "gui": "#503D15", "cterm": "52"  }$/;"	v
s:dark_asphalt	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_asphalt = { "gui": "#4e536b", "cterm": "234", "cterm16": "0"}$/;"	v
s:dark_bg	zpwr/.vim/colors/seoul256.vim	/^  let s:dark_bg  = 237$/;"	v
s:dark_bg	zpwr/.vim/colors/seoul256.vim	/^  let s:dark_bg  = get(s:, 'seoul256_background', 237)$/;"	v
s:dark_bg_2	zpwr/.vim/colors/seoul256.vim	/^let s:dark_bg_2 = s:dark_bg > 233 ? s:dark_bg - 2 : 16$/;"	v
s:dark_blue	zpwr/.vim/colors/1989.vim	/^let s:dark_blue = [31, "#0087af"]$/;"	v
s:dark_blue	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_blue = { "gui": "#65b2ff", "cterm": "75", "cterm16": "12"}$/;"	v
s:dark_blue	zpwr/.vim/colors/kkruby.vim	/^let s:dark_blue    = "4E778E"$/;"	v
s:dark_blue	zpwr/.vim/colors/pencil.vim	/^let s:dark_blue       = { "gui": "#008EC4", "cterm": "4"   }$/;"	v
s:dark_brown	zpwr/.vim/colors/abbott.vim	/^let s:dark_brown="#0a0806"$/;"	v
s:dark_clouds	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_clouds = { "gui": "#a6b3cc", "cterm": "252", "cterm16": "15"}$/;"	v
s:dark_cyan	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_cyan = { "gui": "#63f2f1", "cterm": "121", "cterm16": "14"}$/;"	v
s:dark_cyan	zpwr/.vim/colors/pencil.vim	/^let s:dark_cyan       = { "gui": "#20A5BA", "cterm": "6"   }$/;"	v
s:dark_fg	zpwr/.vim/colors/seoul256.vim	/^let s:dark_fg = 252$/;"	v
s:dark_gray	zpwr/.vim/colors/1989.vim	/^let s:dark_gray = [236, "#303030"]$/;"	v
s:dark_green	zpwr/.vim/colors/1989.vim	/^let s:dark_green = [29, "#00875f"]$/;"	v
s:dark_green	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_green = { "gui": "#62d196", "cterm": "119", "cterm16": "10"}$/;"	v
s:dark_green	zpwr/.vim/colors/pencil.vim	/^let s:dark_green      = { "gui": "#10A778", "cterm": "2"   }$/;"	v
s:dark_grey_blue	zpwr/.vim/colors/twilight.vim	/^let s:dark_grey_blue = '#34383c'$/;"	v
s:dark_pink	zpwr/.vim/colors/1989.vim	/^let s:dark_pink = [197, "#ff005f"]$/;"	v
s:dark_purple	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_purple = { "gui": "#906cff", "cterm": "135", "cterm16": "13"}$/;"	v
s:dark_purple	zpwr/.vim/colors/pencil.vim	/^let s:dark_purple     = { "gui": "#523C79", "cterm": "5"   }$/;"	v
s:dark_red	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_red = { "gui": "#ff5458", "cterm": "203", "cterm16": "9"}$/;"	v
s:dark_red	zpwr/.vim/colors/pencil.vim	/^let s:dark_red        = { "gui": "#C30771", "cterm": "1"   }$/;"	v
s:dark_yellow	zpwr/.vim/colors/flatcolor.vim	/^let s:dark_yellow = { "gui": "#ffb378", "cterm": "215", "cterm16": "11"}$/;"	v
s:dark_yellow	zpwr/.vim/colors/onedark.vim	/^let s:dark_yellow = { "gui": "#D19A66", "cterm": "173", "cterm16": "11" }$/;"	v
s:dark_yellow	zpwr/.vim/colors/pencil.vim	/^let s:dark_yellow     = { "gui": "#A89C14", "cterm": "3"   }$/;"	v
s:darkblue	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkblue   = "#00005f"$/;"	v
s:darkblue	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkblue   = "17"$/;"	v
s:darkblue	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkblue   = "#00005f"$/;"	v
s:darkblue	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkblue   = "17"$/;"	v
s:darkblue	zpwr/.vim/colors/literal_tango.vim	/^let s:darkblue     = "#3465a4"$/;"	v
s:darkblue	zpwr/.vim/colors/phd.vim	/^let s:darkblue = '#32698f'$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid-light.vim	/^  let s:darkcolumn = "#808080"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid-light.vim	/^  let s:darkcolumn = "244"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_material.vim	/^    let s:darkcolumn = "11"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:darkcolumn = "11"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcolumn	zpwr/.vim/colors/last256.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	zpwr/.vim/colors/last256.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcyan	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkcyan   = "#005f5f"$/;"	v
s:darkcyan	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkcyan   = "24"$/;"	v
s:darkcyan	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkcyan   = "#005f5f"$/;"	v
s:darkcyan	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkcyan   = "24"$/;"	v
s:darkcyan	zpwr/.vim/colors/literal_tango.vim	/^let s:darkcyan     = "#06989a"$/;"	v
s:darker_blue	zpwr/.vim/colors/pencil.vim	/^let s:darker_blue     = { "gui": "#005F87", "cterm": "18"  }$/;"	v
s:darkgreen	zpwr/.vim/colors/literal_tango.vim	/^let s:darkgreen    = "#4e9a06"$/;"	v
s:darkgreen	zpwr/.vim/colors/phd.vim	/^let s:darkgreen = '#80a050'$/;"	v
s:darkgreen	zpwr/.vim/colors/znake.vim	/^let s:darkgreen  = "519f50"$/;"	v
s:darkgrey	zpwr/.vim/colors/literal_tango.vim	/^let s:darkgrey     = "#555753"$/;"	v
s:darkgrey	zpwr/.vim/colors/twilight.vim	/^let s:darkgrey = '#1a1a1a'$/;"	v
s:darkgrey	zpwr/.vim/colors/znake.vim	/^let s:darkgrey   = "0b0b0b"$/;"	v
s:darkmagenta	zpwr/.vim/colors/literal_tango.vim	/^let s:darkmagenta  = "#75507b"$/;"	v
s:darkpink	zpwr/.vim/colors/znake.vim	/^let s:darkpink   = "6f0037"$/;"	v
s:darkpurple	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkpurple = "#5f005f"$/;"	v
s:darkpurple	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkpurple = "53"$/;"	v
s:darkpurple	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkpurple = "#5f005f"$/;"	v
s:darkpurple	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkpurple = "53"$/;"	v
s:darkred	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkred    = "#5f0000"$/;"	v
s:darkred	zpwr/.vim/colors/hybrid_material.vim	/^  let s:darkred    = "52"$/;"	v
s:darkred	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkred    = "#5f0000"$/;"	v
s:darkred	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:darkred    = "52"$/;"	v
s:darkred	zpwr/.vim/colors/literal_tango.vim	/^let s:darkred      = "#cc0000"$/;"	v
s:darkred	zpwr/.vim/colors/znake.vim	/^let s:darkred    = "2a0014"$/;"	v
s:default_dark	zpwr/.vim/colors/sprinkles.vim	/^let s:default_dark = {$/;"	v
s:default_light	zpwr/.vim/colors/sprinkles.vim	/^let s:default_light = {$/;"	v
s:default_white	zpwr/.vim/colors/1989.vim	/^let s:default_white = [231, "#FFFFFF"]$/;"	v
s:defaults_list	zpwr/.vim/colors/parsec.vim	/^let s:defaults_list=[$/;"	v
s:defaults_list	zpwr/.vim/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:delbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:delbg      = "#ffd7d7"$/;"	v
s:delbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:delbg      = "224"$/;"	v
s:dg_dusty_blue	zpwr/.vim/colors/mdark.vim	/^let s:dg_dusty_blue = "#406371"$/;"	v
s:diff	zpwr/.vim/colors/elda.vim	/^let s:diff = 202$/;"	v
s:diff_bg	zpwr/.vim/colors/elda.vim	/^let s:diff_bg = 233$/;"	v
s:diff_blue	zpwr/.vim/colors/kkruby.vim	/^let s:diff_blue    = "2E4754"$/;"	v
s:diff_fmt	zpwr/.vim/colors/parsec.vim	/^  let s:diff_fmt = s:fmt_bold$/;"	v
s:diff_fmt	zpwr/.vim/colors/parsec.vim	/^let s:diff_fmt = s:fmt_none$/;"	v
s:diff_green	zpwr/.vim/colors/kkruby.vim	/^let s:diff_green   = "3E5443"$/;"	v
s:diff_orange	zpwr/.vim/colors/kkruby.vim	/^let s:diff_orange  = "574133"$/;"	v
s:diff_red	zpwr/.vim/colors/kkruby.vim	/^let s:diff_red     = "542D32"$/;"	v
s:diffadd_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:diffadd_bg   = "#264d26"$/;"	v
s:diffadd_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffadd_bg    = ['#5faf00', '70']$/;"	v
s:diffadd_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffadd_bg    = ['#afffaf', '157']$/;"	v
s:diffadd_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffadd_fg    = ['#000000', '16']$/;"	v
s:diffadd_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffadd_fg    = []$/;"	v
s:diffbackground	zpwr/.vim/colors/antares.vim	/^  let s:diffbackground = "494e56"$/;"	v
s:diffbackground	zpwr/.vim/colors/evening.vim	/^  let s:diffbackground = "494e56"$/;"	v
s:diffchange	zpwr/.vim/colors/znake.vim	/^let s:diffchange = "19344e"$/;"	v
s:diffchange_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffchange_bg = ['#dfaf00', '178']$/;"	v
s:diffchange_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffchange_bg = ['#ffffaf', '229']$/;"	v
s:diffchange_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffchange_fg = ['#000000', '16']$/;"	v
s:diffchange_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffchange_fg = []$/;"	v
s:diffdel_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:diffdel_bg   = "#4d0000"$/;"	v
s:diffdelete_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffdelete_bg = ['#5f0000', '52']$/;"	v
s:diffdelete_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffdelete_bg = ['#ffdfff', '225']$/;"	v
s:diffdelete_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffdelete_fg = ['#000000', '16']$/;"	v
s:diffdelete_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:diffdelete_fg = []$/;"	v
s:diffgreen	zpwr/.vim/colors/znake.vim	/^let s:diffgreen  = "033108"$/;"	v
s:diffmod_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:diffmod_bg   = "#4d264d"$/;"	v
s:diffred	zpwr/.vim/colors/znake.vim	/^let s:diffred    = "5e0a06"$/;"	v
s:difftext	zpwr/.vim/colors/znake.vim	/^let s:difftext   = "5b3616"$/;"	v
s:difftext_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:difftext_bg  = "#cbb766"$/;"	v
s:difftext_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:difftext_bg   = ['#ffdf5f', '221']$/;"	v
s:difftext_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:difftext_bg   = ['#ffffdf', '230']$/;"	v
s:difftext_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:difftext_fg   = ['#000000', '16']$/;"	v
s:difftext_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:difftext_fg   = []$/;"	v
s:dimmed	zpwr/.vim/colors/eva.vim	/^  let s:dimmed     = { "gui": "#1A921C", "cterm": "028" }$/;"	v
s:dimmed	zpwr/.vim/colors/hemisu.vim	/^  let s:dimmed     = s:middleDarkGrey$/;"	v
s:dimmed	zpwr/.vim/colors/hemisu.vim	/^  let s:dimmed     = s:middleLightGrey$/;"	v
s:dimmed	zpwr/.vim/colors/scooby.vim	/^  let s:dimmed     = { "gui": "#0abdaa", "cterm": "037" }$/;"	v
s:disable_italic	zpwr/.vim/colors/primary.vim	/^let s:disable_italic = get(g:,'colorscheme_primary_disable_italic', 0)$/;"	v
s:divider	zpwr/.vim/colors/CandyPaper.vim	/^let s:divider      = "#ccc9ae"$/;"	v
s:divider	zpwr/.vim/colors/PaperColor.vim	/^  let s:divider      = ['#5f8787', '66']$/;"	v
s:divider	zpwr/.vim/colors/PaperColor.vim	/^  let s:divider      = s:navy$/;"	v
s:done_bundles	zpwr/.vim/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:dusty_blue	zpwr/.vim/colors/mdark.vim	/^let s:dusty_blue = "#7993BD"$/;"	v
s:earth_cterm	zpwr/.vim/colors/sky.vim	/^let s:earth_cterm = [95, 145]$/;"	v
s:earth_gui	zpwr/.vim/colors/sky.vim	/^let s:earth_gui = ["#8D6E63", "#BCAAA4"]$/;"	v
s:emerald	zpwr/.vim/colors/flatui.vim	/^let s:emerald=        { "gui": "#2ecc71", "cterm": "41" }$/;"	v
s:enable_italic	zpwr/.vim/colors/jellyx.vim	/^let s:enable_italic = exists('g:jellyx_italic') ? g:jellyx_italic == 1 : 1$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma = {}$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.adobe = 59$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.ash = 245$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.aurora = 67$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.coral = 174$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.dusk = 239$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.eclipse = 234$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.gold = 226$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.lacquer = 232$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.lava = 167$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.mist = 67$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.moss = 66$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.ocean = 24$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.orange = 180 "145$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.purple = 140$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.sea = 25$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.smoke = 235$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.sun = 138$/;"	v
s:enigma	zpwr/.vim/colors/enigma.vim	/^let s:enigma.white = 250$/;"	v
s:error	zpwr/.vim/colors/CandyPaper.vim	/^let s:error        = "#de0000"$/;"	v
s:error	zpwr/.vim/colors/PaperColor.vim	/^  let s:error        = ['#5f0000', '52']$/;"	v
s:error	zpwr/.vim/colors/PaperColor.vim	/^  let s:error        = ['#ffafdf', '218']$/;"	v
s:faint	zpwr/.vim/colors/eva.vim	/^  let s:faint      = { "gui": "#DA6606", "cterm": "166" }$/;"	v
s:faint	zpwr/.vim/colors/hemisu.vim	/^  let s:faint      = s:almostBlack$/;"	v
s:faint	zpwr/.vim/colors/hemisu.vim	/^  let s:faint      = s:almostWhite$/;"	v
s:faint	zpwr/.vim/colors/scooby.vim	/^  let s:faint      = { "gui": "#3B3A32", "cterm": "059" }$/;"	v
s:faintBlue	zpwr/.vim/colors/hemisu.vim	/^  let s:faintBlue  = s:darkBlue$/;"	v
s:faintBlue	zpwr/.vim/colors/hemisu.vim	/^  let s:faintBlue  = s:lightBlue$/;"	v
s:faintGreen	zpwr/.vim/colors/hemisu.vim	/^  let s:faintGreen = s:darkGreen$/;"	v
s:faintGreen	zpwr/.vim/colors/hemisu.vim	/^  let s:faintGreen = s:lightGreen$/;"	v
s:faintRed	zpwr/.vim/colors/hemisu.vim	/^  let s:faintRed   = s:darkPink$/;"	v
s:faintRed	zpwr/.vim/colors/hemisu.vim	/^  let s:faintRed   = s:lightPink$/;"	v
s:fg	zpwr/.vim/colors/elda.vim	/^let s:fg = 38$/;"	v
s:fg	zpwr/.vim/colors/mdark.vim	/^let s:fg = "#BABDB6"$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg0	zpwr/.vim/colors/materialbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	zpwr/.vim/colors/materialbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg1	zpwr/.vim/colors/materialbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	zpwr/.vim/colors/materialbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	zpwr/.vim/colors/materialbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg2	zpwr/.vim/colors/materialbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	zpwr/.vim/colors/materialbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg3	zpwr/.vim/colors/materialbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	zpwr/.vim/colors/materialbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4	zpwr/.vim/colors/materialbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	zpwr/.vim/colors/materialbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	zpwr/.vim/colors/materialbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-material.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/materialbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	zpwr/.vim/colors/materialbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:fg_bold	zpwr/.vim/colors/hybrid_material.vim	/^    let s:fg_bold = s:fmt_bold$/;"	v
s:fg_bold	zpwr/.vim/colors/hybrid_material.vim	/^    let s:fg_bold = s:fmt_none$/;"	v
s:fg_bold	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:fg_bold = s:fmt_bold$/;"	v
s:fg_bold	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:fg_bold = s:fmt_none$/;"	v
s:fg_none	zpwr/.vim/colors/hybrid.vim	/^let s:fg_none = ' guifg=NONE ctermfg=NONE'$/;"	v
s:fg_pdef	zpwr/.vim/colors/parsec.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_pdef	zpwr/.vim/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	zpwr/.vim/colors/parsec.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_phead	zpwr/.vim/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	zpwr/.vim/colors/parsec.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:fg_ptable	zpwr/.vim/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:folded_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:folded_bg    = "#414d41"$/;"	v
s:folded_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:folded_bg = ['#444444', '237']$/;"	v
s:folded_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:folded_bg = ['#afdfff', '153']$/;"	v
s:folded_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:folded_fg    = "#dddddd"$/;"	v
s:folded_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:folded_fg = ['#afdf00', '148']$/;"	v
s:folded_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:folded_fg = s:navy$/;"	v
s:foreground	zpwr/.vim/colors/CandyPaper.vim	/^let s:foreground   = "#dddddd"$/;"	v
s:foreground	zpwr/.vim/colors/PaperColor.vim	/^  let s:foreground   = ['#444444', '238']$/;"	v
s:foreground	zpwr/.vim/colors/PaperColor.vim	/^  let s:foreground   = ['#d0d0d0', '251']$/;"	v
s:foreground	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:foreground = "ffffff"$/;"	v
s:foreground	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:foreground = "eaeaea"$/;"	v
s:foreground	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:foreground = "cccccc"$/;"	v
s:foreground	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:foreground = "c5c8c6"$/;"	v
s:foreground	zpwr/.vim/colors/Tomorrow.vim	/^let s:foreground = "4d4d4c"$/;"	v
s:foreground	zpwr/.vim/colors/antares.vim	/^let s:foreground       = "bbbbbb"$/;"	v
s:foreground	zpwr/.vim/colors/evening.vim	/^let s:foreground      = "bbbbbb"$/;"	v
s:foreground	zpwr/.vim/colors/heroku-terminal.vim	/^let s:foreground = "8584ae"$/;"	v
s:foreground	zpwr/.vim/colors/heroku.vim	/^let s:foreground = "8584ae"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid-light.vim	/^  let s:foreground = "#000000"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid-light.vim	/^  let s:foreground = "16"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_material.vim	/^    let s:foreground = "15"   " White$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_material.vim	/^    let s:foreground = "15"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_material.vim	/^    let s:foreground = "250"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_material.vim	/^  let s:foreground = "#c5c8c6"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:foreground = "15"   " White$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:foreground = "15"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:foreground = "250"$/;"	v
s:foreground	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:foreground = "#c5c8c6"$/;"	v
s:foreground	zpwr/.vim/colors/kkruby.vim	/^let s:foreground   = "c0bfbf"$/;"	v
s:foreground	zpwr/.vim/colors/last256.vim	/^  let s:foreground = "#808080"$/;"	v
s:foreground	zpwr/.vim/colors/last256.vim	/^  let s:foreground = "244"$/;"	v
s:frost	zpwr/.vim/colors/harlequin.vim	/^let s:frost = ['#2C89C7', 68] $/;"	v
s:func	zpwr/.vim/colors/elda.vim	/^let s:func = 33$/;"	v
s:func	zpwr/.vim/colors/phd.vim	/^let s:func = '#96b2cc'$/;"	v
s:g_cyan	zpwr/.vim/colors/mdark.vim	/^let s:g_cyan = "#B6E3FF"$/;"	v
s:g_green	zpwr/.vim/colors/mdark.vim	/^let s:g_green = "#406A5C"$/;"	v
s:g_lavender	zpwr/.vim/colors/mdark.vim	/^let s:g_lavender = "#363243"$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_aqua    = ['#483d8d', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_blue    = ['#1002cd', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_green   = ['#006400', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_orange  = ['#de935f', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_purple  = ['#9010b0', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_red     = ['#bb0000', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.bright_yellow  = ['#b57614', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark0       = ['#cdcdc1', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark0_hard  = ['#cdcdc1', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark0_soft  = ['#cdcdc1', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark1       = ['#b3b3a8', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark2       = ['#999990', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark3       = ['#808078', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark4       = ['#666660', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.dark4_256   = ['#666660', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.gray_245    = ['#4d4d48', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light0      = ['#000000', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light0_hard = ['#000000', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light0_soft = ['#000000', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light1      = ['#1a1a18', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light2      = ['#4d4d48', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light3      = ['#666660', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light4      = ['#808078', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.light4_256  = ['#808078', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_aqua    = ['#007099', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_blue    = ['#002499', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_green   = ['#1E8000', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_orange  = ['#804800', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_purple  = ['#8C008F', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_red     = ['#990000', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.bright_yellow  = ['#807700', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark0       = ['#BBC4A2', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark0_hard  = ['#BBC4A2', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark0_soft  = ['#BBC4A2', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark1       = ['#C6CEB1', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark2       = ['#D1D7C1', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark3       = ['#DDE1D0', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark4       = ['#E8EBE0', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.dark4_256   = ['#E8EBE0', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.gray_245    = ['#717D4F', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light0      = ['#2A2F1E', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light0_hard = ['#2A2F1E', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light0_soft = ['#2A2F1E', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light1      = ['#464E31', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light2      = ['#555E3B', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light3      = ['#636D45', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light4      = ['#717D4F', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.light4_256  = ['#717D4F', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_aqua    = ['#C5CAE9', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_blue    = ['#64b5f6', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_green   = ['#81c784', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_orange  = ['#ffb74d', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_purple  = ['#CE93D8', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_red     = ['#e57373', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.bright_yellow  = ['#FFF176', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark0       = ['#263238', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark0_hard  = ['#1d272b', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark0_soft  = ['#2f3d45', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark1       = ['#37474F', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark2       = ['#455a64', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark3       = ['#546e7a', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark4       = ['#607d8b', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.dark4_256   = ['#607d8b', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.gray_245    = ['#90A4AE', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light0      = ['#eceff1', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light0_hard = ['#fafdff', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light0_soft = ['#e1e4e6', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light1      = ['#cfd8dc', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light2      = ['#b0bec5', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light3      = ['#90a4ae', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light4      = ['#78909c', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.light4_256  = ['#78909c', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_aqua    = ['#99ffff', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_blue    = ['#bbdaff', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_green   = ['#d1f1a9', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_orange  = ['#ffc58f', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_purple  = ['#ebbbff', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_red     = ['#ff9da4', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.bright_yellow  = ['#ffeead', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark0       = ['#002451', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark0_hard  = ['#001f45', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark0_soft  = ['#002a5e', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark1       = ['#00306b', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark2       = ['#003b85', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark3       = ['#00469e', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark4       = ['#0052b8', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.dark4_256   = ['#0052b8', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.gray_245    = ['#a0c1eb', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light0      = ['#ffffff', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light0_hard = ['#ffffff', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light0_soft = ['#ffffff', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light1      = ['#cedbeb', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light2      = ['#b7ceeb', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light3      = ['#a0c1eb', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light4      = ['#88b4eb', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.light4_256  = ['#88b4eb', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_aqua    = ['#70c0b1', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_blue    = ['#7aa6da', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_green   = ['#b9ca4a', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_orange  = ['#e78c45', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_purple  = ['#c397d8', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_red     = ['#d54e53', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.bright_yellow  = ['#e7c547', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark0       = ['#121314', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark0_hard  = ['#070708', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark0_soft  = ['#1e1f21', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark1       = ['#292c2e', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark2       = ['#404447', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark3       = ['#575c61', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark4       = ['#6e747a', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.dark4_256   = ['#6e747a', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.gray_245    = ['#9ea19f', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light0      = ['#eaedeb', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light0_hard = ['#eaedeb', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light0_soft = ['#eaedeb', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light1      = ['#d1d4d2', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light2      = ['#b8bab8', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light3      = ['#9ea19f', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light4      = ['#858786', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.light4_256  = ['#858786', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_aqua    = ['#66cccc', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_blue    = ['#6699cc', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_green   = ['#99cc99', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_orange  = ['#f99157', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_purple  = ['#cc99cc', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_red     = ['#f2777a', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.bright_yellow  = ['#ffcc66', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark0       = ['#2d2d2d', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark0_hard  = ['#212121', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark0_soft  = ['#3b3b3b', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark1       = ['#474747', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark2       = ['#616161', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark3       = ['#7a7a7a', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark4       = ['#949494', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.dark4_256   = ['#949494', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.gray_245    = ['#808080', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light0      = ['#cccccc', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light0_hard = ['#cccccc', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light0_soft = ['#cccccc', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light1      = ['#b3b3b3', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light2      = ['#999999', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light3      = ['#808080', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light4      = ['#666666', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.light4_256  = ['#666666', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_aqua    = ['#8abeb7', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_blue    = ['#81a2be', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_green   = ['#b5bd68', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_orange  = ['#de935f', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_purple  = ['#81a2be', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_red     = ['#cc6666', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.bright_yellow  = ['#f0c674', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark0       = ['#1d1f21', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark0_hard  = ['#121314', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark0_soft  = ['#282b2e', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark1       = ['#34373b', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark2       = ['#4a4f54', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark3       = ['#60676e', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark4       = ['#777f87', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.dark4_256   = ['#777f87', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.gray_245    = ['#929493', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light0      = ['#dde0de', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light0_hard = ['#dde0de', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light0_soft = ['#dde0de', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light1      = ['#c4c7c5', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light2      = ['#abadac', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light3      = ['#929493', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light4      = ['#797a79', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.light4_256  = ['#797a79', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light0      = ['#fdf4c1', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb = {}$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_aqua    = ['#C5CAE9', 108]     " 142-192-124$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_blue    = ['#64b5f6', 109]     " 131-165-152$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_green   = ['#81c784', 142]     " 184-187-38$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_orange  = ['#ffb74d', 208]     " 254-128-25$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_purple  = ['#CE93D8', 175]     " 211-134-155$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_red     = ['#e57373', 167]     " 251-73-52$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.bright_yellow  = ['#FFF176', 214]     " 250-189-47$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark0       = ['#263238', 235]     " 40-40-40$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark0_hard  = ['#1d272b', 234]     " 29-32-33$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark0_soft  = ['#2f3d45', 236]     " 50-48-47$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark1       = ['#37474F', 237]     " 60-56-54$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark2       = ['#455a64', 239]     " 80-73-69$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark3       = ['#546e7a', 241]     " 102-92-84$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark4       = ['#607d8b', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.dark4_256   = ['#607d8b', 243]     " 124-111-100$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_aqua     = ['#303F9F', 66]      " 66-123-88$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_blue     = ['#1565c0', 24]      " 7-102-120$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_green    = ['#2e7d32', 100]     " 121-116-14$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_orange   = ['#E65100', 130]     " 175-58-3$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_purple   = ['#6a1b9a', 96]      " 143-63-113$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_red      = ['#c62828', 88]      " 157-0-6 light$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.faded_yellow   = ['#FFA000', 136]     " 181-118-20$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.gray_244    = ['#546E7A', 244]     " 146-131-116 light$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.gray_245    = ['#90A4AE', 245]     " 146-131-116 dark$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light0      = ['#eceff1', 229]     " 253-244-193$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light0_hard = ['#fafdff', 230]     " 249-245-215 dark$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light0_soft = ['#e1e4e6', 228]     " 242-229-188$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light1      = ['#cfd8dc', 223]     " 235-219-178$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light2      = ['#b0bec5', 250]     " 213-196-161$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light3      = ['#90a4ae', 248]     " 189-174-147$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light4      = ['#78909c', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.light4_256  = ['#78909c', 246]     " 168-153-132$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_aqua   = ['#3949AB', 72]      " 104-157-106$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_blue   = ['#1e88e5', 66]      " 69-133-136$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_green  = ['#43a047', 106]     " 152-151-26$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_orange = ['#fb8c00', 166]     " 214-93-14$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_purple = ['#8e24aa', 132]     " 177-98-134$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_red    = ['#e53935', 124]     " 204-36-29$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.neutral_yellow = ['#FDD835', 172]     " 215-153-33$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	zpwr/.vim/colors/materialbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gold	zpwr/.vim/colors/harlequin.vim	/^let s:gold = ['#FFB829', 214]$/;"	v
s:gold	zpwr/.vim/colors/saturn.vim	/^let s:gold =             [s:hsl2color(50,  90, 85), 221]$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-material.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/fx.vim	/^    let s:gray      = s:palette['gray'][0]$/;"	v
s:gray	zpwr/.vim/colors/fx.vim	/^    let s:gray      = s:palette['gray'][1]$/;"	v
s:gray	zpwr/.vim/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	zpwr/.vim/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	zpwr/.vim/colors/materialbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	zpwr/.vim/colors/materialbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	zpwr/.vim/colors/materialbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray_purple	zpwr/.vim/colors/1989.vim	/^let s:gray_purple = [146, "#afafd7"]$/;"	v
s:green	zpwr/.vim/colors/CandyPaper.vim	/^let s:green        = "#6fde7c" "Type$/;"	v
s:green	zpwr/.vim/colors/PaperColor.vim	/^  let s:green   = ['#008700', '28'] "Boolean\/Special$/;"	v
s:green	zpwr/.vim/colors/PaperColor.vim	/^  let s:green   = ['#dfaf00', '178'] "Boolean\/Special$/;"	v
s:green	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:green = "d1f1a9"$/;"	v
s:green	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:green = "b9ca4a"$/;"	v
s:green	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:green = "99cc99"$/;"	v
s:green	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:green = "b5bd68"$/;"	v
s:green	zpwr/.vim/colors/Tomorrow.vim	/^let s:green = "718c00"$/;"	v
s:green	zpwr/.vim/colors/abbott.vim	/^let s:green="#76bc20"$/;"	v
s:green	zpwr/.vim/colors/ansi_blows.vim	/^let s:green='#00aa00'$/;"	v
s:green	zpwr/.vim/colors/antares.vim	/^let s:green            = "00b853"$/;"	v
s:green	zpwr/.vim/colors/astronaut.vim	/^ let s:green   = "darkgreen"$/;"	v
s:green	zpwr/.vim/colors/astronaut.vim	/^ let s:green   = "green"$/;"	v
s:green	zpwr/.vim/colors/bluedrake.vim	/^        let s:green   = "2"$/;"	v
s:green	zpwr/.vim/colors/bluedrake.vim	/^        let s:green   = "28"$/;"	v
s:green	zpwr/.vim/colors/bluedrake.vim	/^    let s:green   = "009e3c"$/;"	v
s:green	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-material.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/evening.vim	/^let s:green           = "95bf68"$/;"	v
s:green	zpwr/.vim/colors/flatcolor.vim	/^  let s:green           = s:dark_green$/;"	v
s:green	zpwr/.vim/colors/flatcolor.vim	/^  let s:green           = s:green$/;"	v
s:green	zpwr/.vim/colors/flatcolor.vim	/^let s:green = { "gui": "#95ffa4", "cterm": "120", "cterm16": "2"}$/;"	v
s:green	zpwr/.vim/colors/fx.vim	/^    let s:green     = s:palette['green'][0]$/;"	v
s:green	zpwr/.vim/colors/fx.vim	/^    let s:green     = s:palette['green'][1]$/;"	v
s:green	zpwr/.vim/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	zpwr/.vim/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/heroku-terminal.vim	/^let s:green = "6dba09"$/;"	v
s:green	zpwr/.vim/colors/heroku.vim	/^let s:green = "6dba09"$/;"	v
s:green	zpwr/.vim/colors/hybrid-light.vim	/^  let s:green      = "#005f00"$/;"	v
s:green	zpwr/.vim/colors/hybrid-light.vim	/^  let s:green      = "22"$/;"	v
s:green	zpwr/.vim/colors/hybrid_material.vim	/^    let s:green      = "10"   " LightGreen$/;"	v
s:green	zpwr/.vim/colors/hybrid_material.vim	/^    let s:green      = "143"$/;"	v
s:green	zpwr/.vim/colors/hybrid_material.vim	/^    let s:green      = "2"$/;"	v
s:green	zpwr/.vim/colors/hybrid_material.vim	/^  let s:green      = "#b5bd68"$/;"	v
s:green	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:green      = "10"   " LightGreen$/;"	v
s:green	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:green      = "143"$/;"	v
s:green	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:green      = "2"$/;"	v
s:green	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:green      = "#b5bd68"$/;"	v
s:green	zpwr/.vim/colors/kkruby.vim	/^let s:green        = "93C79F"$/;"	v
s:green	zpwr/.vim/colors/last256.vim	/^  let s:green      = "#5faf5f"$/;"	v
s:green	zpwr/.vim/colors/last256.vim	/^  let s:green      = "71"$/;"	v
s:green	zpwr/.vim/colors/materialbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	zpwr/.vim/colors/materialbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	zpwr/.vim/colors/materialbox.vim	/^  let s:green[1]  = 10$/;"	v
s:green	zpwr/.vim/colors/mdark.vim	/^let s:green = "#66CC66"$/;"	v
s:green	zpwr/.vim/colors/onedark.vim	/^let s:green = { "gui": "#98C379", "cterm": "114", "cterm16": "2" }$/;"	v
s:green	zpwr/.vim/colors/parsec.vim	/^  let s:green       = "#99cc99"$/;"	v
s:green	zpwr/.vim/colors/parsec.vim	/^  let s:green       = "2"$/;"	v
s:green	zpwr/.vim/colors/pencil.vim	/^  let s:green           = s:dark_green$/;"	v
s:green	zpwr/.vim/colors/pencil.vim	/^  let s:green           = s:light_green$/;"	v
s:green	zpwr/.vim/colors/phd.vim	/^let s:green = '#99bf52'$/;"	v
s:green	zpwr/.vim/colors/saturn.vim	/^let s:green =            [s:hsl2color(90,  30, 65), 107]$/;"	v
s:green	zpwr/.vim/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	zpwr/.vim/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	zpwr/.vim/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	zpwr/.vim/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	zpwr/.vim/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:green	zpwr/.vim/colors/twilight.vim	/^let s:green = '#a2a96f'$/;"	v
s:green	zpwr/.vim/colors/znake.vim	/^let s:green      = "a5c261"$/;"	v
s:green1	zpwr/.vim/colors/lumberjack.vim	/^let s:green1 = { 'gui': '#5d875d', 'cterm': '2'  }$/;"	v
s:green2	zpwr/.vim/colors/lumberjack.vim	/^let s:green2 = { 'gui': '#9acd32', 'cterm': '10' }$/;"	v
s:greenSea	zpwr/.vim/colors/flatui.vim	/^let s:greenSea=       { "gui": "#16a085", "cterm": "29" }$/;"	v
s:grey	zpwr/.vim/colors/phd.vim	/^let s:grey = '#808080'$/;"	v
s:grey	zpwr/.vim/colors/saturn.vim	/^let s:grey =             [s:hsl2color(220, 10, 70), 244]$/;"	v
s:grey	zpwr/.vim/colors/twilight.vim	/^let s:grey = '#303030'$/;"	v
s:grey1	zpwr/.vim/colors/lumberjack.vim	/^let s:grey1  = { 'gui': '#1a1a1a', 'cterm': '0'  }$/;"	v
s:grey1	zpwr/.vim/colors/znake.vim	/^let s:grey1      = "535353"$/;"	v
s:grey2	zpwr/.vim/colors/lumberjack.vim	/^let s:grey2  = { 'gui': '#212121', 'cterm': '8'  }$/;"	v
s:grey2	zpwr/.vim/colors/znake.vim	/^let s:grey2      = "191919"$/;"	v
s:grey3	zpwr/.vim/colors/lumberjack.vim	/^let s:grey3  = { 'gui': '#2e2e2e', 'cterm': '6'  }$/;"	v
s:grey3	zpwr/.vim/colors/znake.vim	/^let s:grey3      = "868686"$/;"	v
s:grey4	zpwr/.vim/colors/lumberjack.vim	/^let s:grey4  = { 'gui': '#303030', 'cterm': '13' }$/;"	v
s:grey5	zpwr/.vim/colors/lumberjack.vim	/^let s:grey5  = { 'gui': '#757475', 'cterm': '14' }$/;"	v
s:grey6	zpwr/.vim/colors/lumberjack.vim	/^let s:grey6  = { 'gui': '#858585', 'cterm': '12' }$/;"	v
s:grey_blue	zpwr/.vim/colors/twilight.vim	/^let s:grey_blue = '#8a9597'$/;"	v
s:grey_dark	zpwr/.vim/colors/saturn.vim	/^let s:grey_dark =        [s:hsl2color(220, 10, 55), 242]$/;"	v
s:grey_light	zpwr/.vim/colors/saturn.vim	/^let s:grey_light =       [s:hsl2color(220, 20, 90), 252]$/;"	v
s:grey_very_dark	zpwr/.vim/colors/saturn.vim	/^let s:grey_very_dark =   [s:hsl2color(220, 10, 45), 239]$/;"	v
s:grey_very_light	zpwr/.vim/colors/saturn.vim	/^let s:grey_very_light =  [s:hsl2color(220, 30, 97), 255]$/;"	v
s:greyed	zpwr/.vim/colors/phd.vim	/^let s:greyed = '#687898'$/;"	v
s:greys	zpwr/.vim/colors/harlequin.vim	/^let s:greys = [['#BEBEBE', 250], ['#808080', 244], ['#696969', 242], ['#545454', 240], ['#343434', 236], ['#080808', 232]]$/;"	v
s:gui	zpwr/.vim/colors/seoul256.vim	/^let s:gui = has('gui_running')$/;"	v
s:gui00	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui00 = '141e23' "{{{$/;"	v
s:gui00	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui00 = "19171c"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui00 = "20201d"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui00 = "22221b"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui00 = "1b1918"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui00 = "1b181b"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui00 = "161b1d"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui00 = "1b1818"$/;"	v
s:gui00	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui00 = "171c19"$/;"	v
s:gui00	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui00 = "131513"$/;"	v
s:gui00	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui00 = "202746"$/;"	v
s:gui00	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui00 = "2b2b2b"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui00 = "2a2734"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui00 = "222021"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui00 = "292824"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui00 = "322d29"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui00 = "2a2d2a"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui00 = "222022"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui00 = "182234"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui00 = "1c2626"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui00 = "1c2624"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui00 = "1e2138"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui00 = "1d262f"$/;"	v
s:gui00	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui00 = "24242e"$/;"	v
s:gui00	zpwr/.vim/colors/material-theme.vim	/^let s:gui00 = "263238"$/;"	v
s:gui00	zpwr/.vim/colors/mod8.vim	/^let s:gui00 = "2b303b"$/;"	v
s:gui01	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui01 = '343d46'$/;"	v
s:gui01	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui01 = "26232a"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui01 = "292824"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui01 = "302f27"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui01 = "2c2421"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui01 = "292329"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui01 = "1f292e"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui01 = "292424"$/;"	v
s:gui01	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui01 = "232a25"$/;"	v
s:gui01	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui01 = "242924"$/;"	v
s:gui01	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui01 = "293256"$/;"	v
s:gui01	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui01 = "272935"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui01 = "363442"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui01 = "2f2d2d"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui01 = "3d3a34"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui01 = "3f3a37"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui01 = "353b35"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui01 = "2f2d2f"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui01 = "222d44"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui01 = "273434"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui01 = "273431"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui01 = "292c47"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui01 = "27323f"$/;"	v
s:gui01	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui01 = "2f2f3c"$/;"	v
s:gui01	zpwr/.vim/colors/material-theme.vim	/^let s:gui01 = "37474F"$/;"	v
s:gui01	zpwr/.vim/colors/mod8.vim	/^let s:gui01 = "343d46"$/;"	v
s:gui02	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui02 = '4f5b66'$/;"	v
s:gui02	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui02 = "585260"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui02 = "6e6b5e"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui02 = "5f5e4e"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui02 = "68615e"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui02 = "695d69"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui02 = "516d7b"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui02 = "585050"$/;"	v
s:gui02	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui02 = "526057"$/;"	v
s:gui02	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui02 = "5e6e5e"$/;"	v
s:gui02	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui02 = "5e6687"$/;"	v
s:gui02	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui02 = "3a4055"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui02 = "545167"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui02 = "585153"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui02 = "615e51"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui02 = "5b534d"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui02 = "485148"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui02 = "575158"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui02 = "3a4b6e"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui02 = "495e5f"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui02 = "495f5a"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui02 = "44486f"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui02 = "405368"$/;"	v
s:gui02	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui02 = "515167"$/;"	v
s:gui02	zpwr/.vim/colors/material-theme.vim	/^let s:gui02 = "546E7A"$/;"	v
s:gui02	zpwr/.vim/colors/mod8.vim	/^let s:gui02 = "4f5b66"$/;"	v
s:gui03	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui03 = '65737e'$/;"	v
s:gui03	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui03 = "655f6d"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui03 = "7d7a68"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui03 = "6c6b5a"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui03 = "766e6b"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui03 = "776977"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui03 = "5a7b8c"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui03 = "655d5d"$/;"	v
s:gui03	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui03 = "5f6d64"$/;"	v
s:gui03	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui03 = "687d68"$/;"	v
s:gui03	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui03 = "6b7394"$/;"	v
s:gui03	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui03 = "5a647e"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui03 = "6c6783"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui03 = "665c5f"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui03 = "7e7967"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui03 = "6a5f58"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui03 = "535f53"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui03 = "655c66"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui03 = "46587c"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui03 = "556c6d"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui03 = "556d67"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui03 = "51557b"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui03 = "4a5f78"$/;"	v
s:gui03	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui03 = "5b5b76"$/;"	v
s:gui03	zpwr/.vim/colors/material-theme.vim	/^let s:gui03 = "5C7E8C"$/;"	v
s:gui03	zpwr/.vim/colors/mod8.vim	/^let s:gui03 = "65737e"$/;"	v
s:gui04	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui04 = 'a7adba'$/;"	v
s:gui04	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui04 = "7e7887"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui04 = "999580"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui04 = "878573"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui04 = "9c9491"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui04 = "9e8f9e"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui04 = "7195a8"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui04 = "7e7777"$/;"	v
s:gui04	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui04 = "78877d"$/;"	v
s:gui04	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui04 = "809980"$/;"	v
s:gui04	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui04 = "898ea4"$/;"	v
s:gui04	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui04 = "d4cfc9"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui04 = "7e75a9"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui04 = "74676c"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui04 = "67604c"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui04 = "796b63"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui04 = "5e6e5e"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui04 = "736774"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui04 = "526589"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui04 = "62797a"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui04 = "627a74"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui04 = "5e6287"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui04 = "536c88"$/;"	v
s:gui04	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui04 = "646487"$/;"	v
s:gui04	zpwr/.vim/colors/material-theme.vim	/^let s:gui04 = "80CBC4"$/;"	v
s:gui04	zpwr/.vim/colors/mod8.vim	/^let s:gui04 = "a7adba"$/;"	v
s:gui05	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui05 = 'c0c5ce'$/;"	v
s:gui05	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui05 = "8b8792"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui05 = "a6a28c"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui05 = "929181"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui05 = "a8a19f"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui05 = "ab9bab"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui05 = "7ea2b4"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui05 = "8a8585"$/;"	v
s:gui05	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui05 = "87928a"$/;"	v
s:gui05	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui05 = "8ca68c"$/;"	v
s:gui05	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui05 = "979db4"$/;"	v
s:gui05	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui05 = "e6e1dc"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui05 = "9b87fd"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui05 = "9b7d88"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui05 = "af9f6a"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui05 = "88786d"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui05 = "687d68"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui05 = "997d9b"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui05 = "4e72bc"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui05 = "528c8e"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui05 = "5c8a7e"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui05 = "6771c5"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui05 = "57718e"$/;"	v
s:gui05	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui05 = "767693"$/;"	v
s:gui05	zpwr/.vim/colors/material-theme.vim	/^let s:gui05 = "C792EA"$/;"	v
s:gui05	zpwr/.vim/colors/mod8.vim	/^let s:gui05 = "c0c5ce"$/;"	v
s:gui06	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui06 = 'cdd3de'$/;"	v
s:gui06	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui06 = "e2dfe7"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui06 = "e8e4cf"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui06 = "e7e6df"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui06 = "e6e2e0"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui06 = "d8cad8"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui06 = "c1e4f6"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui06 = "e7dfdf"$/;"	v
s:gui06	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui06 = "dfe7e2"$/;"	v
s:gui06	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui06 = "cfe8cf"$/;"	v
s:gui06	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui06 = "dfe2f1"$/;"	v
s:gui06	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui06 = "f4f1ed"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui06 = "c4b8fe"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui06 = "dbbdc7"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui06 = "e6d499"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui06 = "a48774"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui06 = "b3d6b3"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui06 = "d9bddb"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui06 = "a5c2fe"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui06 = "83f3f6"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui06 = "4dffd2"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui06 = "a5adfe"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui06 = "7eb6f6"$/;"	v
s:gui06	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui06 = "9d9dc8"$/;"	v
s:gui06	zpwr/.vim/colors/material-theme.vim	/^let s:gui06 = "7986CB"$/;"	v
s:gui06	zpwr/.vim/colors/mod8.vim	/^let s:gui06 = "dfe1e8"$/;"	v
s:gui07	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui07 = 'd8dee9'$/;"	v
s:gui07	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui07 = "efecf4"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui07 = "fefbec"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui07 = "f4f3ec"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui07 = "f1efee"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui07 = "f7f3f7"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui07 = "ebf8ff"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui07 = "f4ecec"$/;"	v
s:gui07	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui07 = "ecf4ee"$/;"	v
s:gui07	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui07 = "f4fbf4"$/;"	v
s:gui07	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui07 = "f5f7ff"$/;"	v
s:gui07	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui07 = "f9f7f3"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui07 = "eeebff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui07 = "ffebf2"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui07 = "faf5e5"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui07 = "fff3eb"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui07 = "f0fff0"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui07 = "fdebff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui07 = "e1ebff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui07 = "e0feff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui07 = "ebfffa"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui07 = "e1e4ff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui07 = "ebf4ff"$/;"	v
s:gui07	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui07 = "ebebff"$/;"	v
s:gui07	zpwr/.vim/colors/material-theme.vim	/^let s:gui07 = "82B1FF"$/;"	v
s:gui07	zpwr/.vim/colors/mod8.vim	/^let s:gui07 = "eff1f5"$/;"	v
s:gui08	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui08 = 'ec5f67'$/;"	v
s:gui08	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui08 = "be4678"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui08 = "d73737"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui08 = "ba6236"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui08 = "f22c40"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui08 = "ca402b"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui08 = "d22d72"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui08 = "ca4949"$/;"	v
s:gui08	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui08 = "b16139"$/;"	v
s:gui08	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui08 = "e6193c"$/;"	v
s:gui08	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui08 = "c94922"$/;"	v
s:gui08	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui08 = "da4939"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui08 = "6a51e6"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui08 = "ab2151"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui08 = "7a7152"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui08 = "da8952"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui08 = "45a145"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui08 = "a021ab"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui08 = "295cc2"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui08 = "207174"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui08 = "008060"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui08 = "2d3dd2"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui08 = "298dff"$/;"	v
s:gui08	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui08 = "5151e6"$/;"	v
s:gui08	zpwr/.vim/colors/material-theme.vim	/^let s:gui08 = "8BD649"$/;"	v
s:gui08	zpwr/.vim/colors/mod8.vim	/^let s:gui08 = "bf616a"$/;"	v
s:gui09	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui09 = 'f99157'$/;"	v
s:gui09	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui09 = "aa573c"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui09 = "b65611"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui09 = "ae7313"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui09 = "df5320"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui09 = "a65926"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui09 = "935c25"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui09 = "b45a3c"$/;"	v
s:gui09	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui09 = "9f713c"$/;"	v
s:gui09	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui09 = "87711d"$/;"	v
s:gui09	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui09 = "c76b29"$/;"	v
s:gui09	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui09 = "cc7833"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui09 = "e09142"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui09 = "d2bc4b"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui09 = "dd7c3c"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui09 = "bfa05a"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui09 = "a2b34d"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui09 = "d29a4b"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui09 = "f075b5"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui09 = "5cb82e"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui09 = "0fa0bd"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui09 = "ed5e87"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui09 = "24cc94"$/;"	v
s:gui09	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui09 = "dd672c"$/;"	v
s:gui09	zpwr/.vim/colors/material-theme.vim	/^let s:gui09 = "C3E88D"$/;"	v
s:gui09	zpwr/.vim/colors/mod8.vim	/^let s:gui09 = "d08770"$/;"	v
s:gui0A	zpwr/.vim/colors/OceanicNext.vim	/^  let s:gui0A = "9C8201"$/;"	v
s:gui0A	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0A = 'fac863'$/;"	v
s:gui0A	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0A = "a06e3b"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0A = "ae9513"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0A = "a5980d"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0A = "c38418"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0A = "bb8a35"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0A = "8a8a0f"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0A = "a06e3b"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0A = "a07e3b"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0A = "98981b"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0A = "c08b30"$/;"	v
s:gui0A	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0A = "ffc66d"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0A = "ffa852"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0A = "e5cf61"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0A = "ed975e"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0A = "ccad66"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0A = "afc059"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0A = "e5ae61"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0A = "f584bf"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0A = "71dd3c"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0A = "0dccf2"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0A = "f4769a"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0A = "29e0a3"$/;"	v
s:gui0A	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0A = "f36e2b"$/;"	v
s:gui0A	zpwr/.vim/colors/material-theme.vim	/^let s:gui0A = "CDD3DE"$/;"	v
s:gui0A	zpwr/.vim/colors/mod8.vim	/^let s:gui0A = "ebcb8b"$/;"	v
s:gui0B	zpwr/.vim/colors/OceanicNext.vim	/^  let s:gui0B = "70916C"$/;"	v
s:gui0B	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0B = '99c794'$/;"	v
s:gui0B	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0B = "2a9292"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0B = "60ac39"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0B = "7d9726"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0B = "7b9726"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0B = "918b3b"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0B = "568c3b"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0B = "4b8b8b"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0B = "489963"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0B = "29a329"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0B = "ac9739"$/;"	v
s:gui0B	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0B = "a5c261"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0B = "7c756e"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0B = "c6be95"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0B = "c49a7e"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0B = "a89771"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0B = "919966"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0B = "b9a17e"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0B = "ba97a9"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0B = "85987c"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0B = "5796a2"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0B = "ad8590"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0B = "708f85"$/;"	v
s:gui0B	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0B = "6a574d"$/;"	v
s:gui0B	zpwr/.vim/colors/material-theme.vim	/^let s:gui0B = "EC5F67"$/;"	v
s:gui0B	zpwr/.vim/colors/mod8.vim	/^let s:gui0B = "a3be8c"$/;"	v
s:gui0C	zpwr/.vim/colors/OceanicNext.vim	/^  let s:gui0C = "458282"$/;"	v
s:gui0C	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0C = '5fb3b3'$/;"	v
s:gui0C	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0C = "398bc6"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0C = "1fad83"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0C = "5b9d48"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0C = "3d97b8"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0C = "159393"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0C = "2d8f6f"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0C = "5485b6"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0C = "1c9aa0"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0C = "1999b3"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0C = "22a2c9"$/;"	v
s:gui0C	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0C = "519f50"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0C = "ffcc99"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0C = "ffee99"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0C = "ffb380"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0C = "fcc440"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0C = "e5fb79"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0C = "ffd599"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0C = "ffa3d3"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0C = "acf986"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0C = "66e6ff"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0C = "ffa8c1"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0C = "5cffc9"$/;"	v
s:gui0C	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0C = "fe8c52"$/;"	v
s:gui0C	zpwr/.vim/colors/material-theme.vim	/^let s:gui0C = "F1E655"$/;"	v
s:gui0C	zpwr/.vim/colors/mod8.vim	/^let s:gui0C = "96b5b4"$/;"	v
s:gui0D	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0D = '6699cc'$/;"	v
s:gui0D	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0D = "576ddb"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0D = "6684e1"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0D = "36a166"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0D = "407ee7"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0D = "516aec"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0D = "257fad"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0D = "7272ca"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0D = "478c90"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0D = "3d62f5"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0D = "3d8fd1"$/;"	v
s:gui0D	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0D = "6d9cbe"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0D = "ffba76"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0D = "f4e07c"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0D = "f7a56e"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0D = "d7b975"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0D = "bed161"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0D = "f4c27c"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0D = "f994c9"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0D = "8eed5e"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0D = "38dafa"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0D = "f990ad"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0D = "47ebb4"$/;"	v
s:gui0D	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0D = "f97c3e"$/;"	v
s:gui0D	zpwr/.vim/colors/material-theme.vim	/^let s:gui0D = "F77669"$/;"	v
s:gui0D	zpwr/.vim/colors/mod8.vim	/^let s:gui0D = "8fa1b3"$/;"	v
s:gui0E	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0E = 'c594c5'$/;"	v
s:gui0E	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0E = "955ae7"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0E = "b854d4"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0E = "5f9182"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0E = "6666ea"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0E = "7b59c0"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0E = "6b6bb8"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0E = "8464c4"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0E = "55859b"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0E = "ad2bee"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0E = "6679cc"$/;"	v
s:gui0E	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0E = "b6b3eb"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0E = "8b76f4"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0E = "e21d62"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0E = "9f9160"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0E = "eba475"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0E = "53c653"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0E = "d11de2"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0E = "406abf"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0E = "3f8688"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0E = "309179"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0E = "5762c7"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0E = "5ca8ff"$/;"	v
s:gui0E	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0E = "7676f4"$/;"	v
s:gui0E	zpwr/.vim/colors/material-theme.vim	/^let s:gui0E = "F8E71C"$/;"	v
s:gui0E	zpwr/.vim/colors/mod8.vim	/^let s:gui0E = "b48ead"$/;"	v
s:gui0F	zpwr/.vim/colors/OceanicNext.vim	/^let s:gui0F = 'ab7967'$/;"	v
s:gui0F	zpwr/.vim/colors/base16-ateliercave.vim	/^let s:gui0F = "bf40bf"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierdune.vim	/^let s:gui0F = "d43552"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierestuary.vim	/^let s:gui0F = "9d6c7c"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierforest.vim	/^let s:gui0F = "c33ff3"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierheath.vim	/^let s:gui0F = "cc33cc"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierlakeside.vim	/^let s:gui0F = "b72dd2"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierplateau.vim	/^let s:gui0F = "bd5187"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-ateliersavanna.vim	/^let s:gui0F = "867469"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-atelierseaside.vim	/^let s:gui0F = "e619c3"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-ateliersulphurpool.vim	/^let s:gui0F = "9c637a"$/;"	v
s:gui0F	zpwr/.vim/colors/base16-railscasts.vim	/^let s:gui0F = "bc9458"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-dark.vim	/^let s:gui0F = "7a63ee"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkcave.vim	/^let s:gui0F = "c5205a"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkdesert.vim	/^let s:gui0F = "8a7f5c"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkearth.vim	/^let s:gui0F = "e39663"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkforest.vim	/^let s:gui0F = "46b946"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkheath.vim	/^let s:gui0F = "b820c5"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darklake.vim	/^let s:gui0F = "3264c8"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkmeadow.vim	/^let s:gui0F = "2e7d7f"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkpark.vim	/^let s:gui0F = "18866b"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkpool.vim	/^let s:gui0F = "3f4ecf"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darksea.vim	/^let s:gui0F = "6bb0ff"$/;"	v
s:gui0F	zpwr/.vim/colors/duotone-darkspace.vim	/^let s:gui0F = "6363ee"$/;"	v
s:gui0F	zpwr/.vim/colors/material-theme.vim	/^let s:gui0F = "FFFFFF"$/;"	v
s:gui0F	zpwr/.vim/colors/mod8.vim	/^let s:gui0F = "ab7967"$/;"	v
s:guiWhite	zpwr/.vim/colors/OceanicNext.vim	/^let s:guiWhite = 'ffffff' "}}}$/;"	v
s:gui_background	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_background = "#1d1f21"$/;"	v
s:gui_background	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_background = "#232c31"$/;"	v
s:gui_comment	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_comment    = "#6c7a80"$/;"	v
s:gui_comment	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_comment    = "#707880"$/;"	v
s:gui_line	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_line       = "#282a2e"$/;"	v
s:gui_line	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_line       = "#2d3c46"$/;"	v
s:gui_none	zpwr/.vim/colors/xterm16.vim	/^    let s:gui_none = 'NONE'$/;"	v
s:gui_selection	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_selection  = "#373b41"$/;"	v
s:gui_selection	zpwr/.vim/colors/hybrid.vim	/^  let s:gui_selection  = "#425059"$/;"	v
s:gutter	zpwr/.vim/colors/badwolf.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	zpwr/.vim/colors/badwolf.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:gutter	zpwr/.vim/colors/bluewolf.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	zpwr/.vim/colors/bluewolf.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:gutter	zpwr/.vim/colors/goodwolf.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	zpwr/.vim/colors/goodwolf.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:gutter	zpwr/.vim/colors/laederon.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	zpwr/.vim/colors/laederon.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:gutter	zpwr/.vim/colors/ubaryd.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	zpwr/.vim/colors/ubaryd.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:gutter_bg_grey	zpwr/.vim/colors/onedark.vim	/^let s:gutter_bg_grey = { "gui": "#2C313A", "cterm": "NONE", "cterm16": "NONE" }$/;"	v
s:gutter_fg_grey	zpwr/.vim/colors/onedark.vim	/^let s:gutter_fg_grey = { "gui": "#636D83", "cterm": "238", "cterm16": "15" }$/;"	v
s:h	zpwr/.vim/colors/xterm16.vim	/^    let s:h = s:c3$/;"	v
s:has_python	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:has_python = 1$/;"	v
s:has_python	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:has_python = has('python')$/;"	v
s:has_python	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:has_python = has('python3')$/;"	v
s:has_python	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:has_python = 0$/;"	v
s:has_python	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:has_python = 1$/;"	v
s:head_a	zpwr/.vim/colors/flatcolor.vim	/^let s:head_a         = s:dark_blue$/;"	v
s:head_a	zpwr/.vim/colors/pencil.vim	/^  let s:head_a         = s:dark_blue$/;"	v
s:head_a	zpwr/.vim/colors/pencil.vim	/^  let s:head_a         = s:norm$/;"	v
s:head_b	zpwr/.vim/colors/flatcolor.vim	/^let s:head_b         = s:blue$/;"	v
s:head_b	zpwr/.vim/colors/pencil.vim	/^  let s:head_b         = s:blue$/;"	v
s:head_b	zpwr/.vim/colors/pencil.vim	/^  let s:head_b         = s:norm$/;"	v
s:head_c	zpwr/.vim/colors/flatcolor.vim	/^let s:head_c         = s:dark_cyan$/;"	v
s:head_c	zpwr/.vim/colors/pencil.vim	/^  let s:head_c         = s:dark_cyan$/;"	v
s:head_c	zpwr/.vim/colors/pencil.vim	/^  let s:head_c         = s:norm$/;"	v
s:hex	zpwr/.vim/colors/xterm16.vim	/^let s:hex = '0123456789abcdef'$/;"	v
s:hilite	zpwr/.vim/colors/scooby.vim	/^  let s:hilite     = { "gui": "#49583E", "cterm": "059" }$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-material.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:hls_cursor = get(s:gb, g:colorsbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hls_cursor	zpwr/.vim/colors/materialbox.vim	/^  let s:hls_cursor = get(s:gb, g:materialbox_hls_cursor)$/;"	v
s:hls_cursor	zpwr/.vim/colors/materialbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:htmlTagNameBg	zpwr/.vim/colors/otaku.vim	/^let s:htmlTagNameBg = s:NormalBg $/;"	v
s:htmlTagNameFg	zpwr/.vim/colors/otaku.vim	/^let s:htmlTagNameFg = '#6c5ebf'$/;"	v
s:i	zpwr/.vim/colors/hybrid-light.vim	/^let s:i      = ",italic"$/;"	v
s:i	zpwr/.vim/colors/hybrid.vim	/^let s:i      = ",italic"$/;"	v
s:i	zpwr/.vim/colors/hybrid_material.vim	/^let s:i      = ",italic"$/;"	v
s:i	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:i      = ",italic"$/;"	v
s:i	zpwr/.vim/colors/last256.vim	/^let s:i      = ",italic"$/;"	v
s:i	zpwr/.vim/colors/parsec.vim	/^  let s:i           = ""$/;"	v
s:i	zpwr/.vim/colors/parsec.vim	/^  let s:i           = ",italic"$/;"	v
s:i	zpwr/.vim/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	zpwr/.vim/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:i	zpwr/.vim/colors/xterm16.vim	/^	let s:i = s:i + 1$/;"	v
s:i	zpwr/.vim/colors/xterm16.vim	/^    let s:i = 1$/;"	v
s:ignore_opt	zpwr/.vim/colors/marklar.vim	/^    let s:ignore_opt = 1$/;"	v
s:import_cmd	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^let s:import_cmd = 'from powerline.vim import VimPowerline'$/;"	v
s:incsearch_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:incsearch_bg = "#dec837"$/;"	v
s:incsearch_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:incsearch_fg = "#050505"$/;"	v
s:instance	zpwr/.vim/colors/znake.vim	/^let s:instance   = "D0D0FF"$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-material.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:inverse	zpwr/.vim/colors/materialbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	zpwr/.vim/colors/materialbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-material.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_selection	zpwr/.vim/colors/materialbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	zpwr/.vim/colors/materialbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-material.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_signs	zpwr/.vim/colors/materialbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	zpwr/.vim/colors/materialbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-material.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:invert_tabline	zpwr/.vim/colors/materialbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	zpwr/.vim/colors/materialbox.vim	/^let s:invert_tabline = ''$/;"	v
s:is_dark	zpwr/.vim/colors/PaperColor.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-material.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dark	zpwr/.vim/colors/materialbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:italic	zpwr/.vim/colors/astronaut.vim	/^ let s:italic= ""$/;"	v
s:italic	zpwr/.vim/colors/astronaut.vim	/^ let s:italic= ",italic"$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-material.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/fx.vim	/^    let s:italic    = " cterm=ITALIC"$/;"	v
s:italic	zpwr/.vim/colors/fx.vim	/^    let s:italic    = " gui=ITALIC"$/;"	v
s:italic	zpwr/.vim/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italic	zpwr/.vim/colors/materialbox.vim	/^  let s:italic = ''$/;"	v
s:italic	zpwr/.vim/colors/materialbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-material.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	zpwr/.vim/colors/materialbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	zpwr/.vim/colors/materialbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-material.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:italicize_strings	zpwr/.vim/colors/materialbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	zpwr/.vim/colors/materialbox.vim	/^let s:italicize_strings = ''$/;"	v
s:l	zpwr/.vim/colors/xterm16.vim	/^    let s:l = s:c1$/;"	v
s:l	zpwr/.vim/sessions/Scripting.vim	/^let s:l = 16 - ((15 * winheight(0) + 35) \/ 71)$/;"	v
s:l	zpwr/.vim/sessions/aliases.vim	/^let s:l = 39 - ((8 * winheight(0) + 35) \/ 71)$/;"	v
s:l	zpwr/.vim/sessions/default.vim	/^let s:l = 300 - ((82 * winheight(0) + 39) \/ 78)$/;"	v
s:l	zpwr/.vim/sessions/script1.vim	/^let s:l = 14 - ((13 * winheight(0) + 11) \/ 23)$/;"	v
s:l	zpwr/.vim/sessions/script2.vim	/^let s:l = 71 - ((13 * winheight(0) + 12) \/ 25)$/;"	v
s:l	zpwr/.vim/sessions/script3.vim	/^let s:l = 7 - ((6 * winheight(0) + 16) \/ 32)$/;"	v
s:l	zpwr/.vim/sessions/script4.vim	/^let s:l = 21 - ((5 * winheight(0) + 23) \/ 46)$/;"	v
s:l	zpwr/.vim/sessions/script5.vim	/^let s:l = 26 - ((11 * winheight(0) + 14) \/ 28)$/;"	v
s:l	zpwr/.vim/sessions/script6.vim	/^let s:l = 7 - ((6 * winheight(0) + 9) \/ 19)$/;"	v
s:l	zpwr/.vim/sessions/test.vim	/^let s:l = 7 - ((6 * winheight(0) + 26) \/ 52)$/;"	v
s:l	zpwr/.vim/sessions/text1.vim	/^let s:l = 7 - ((6 * winheight(0) + 15) \/ 30)$/;"	v
s:l	zpwr/.vim/sessions/text2.vim	/^let s:l = 48 - ((32 * winheight(0) + 18) \/ 36)$/;"	v
s:l	zpwr/.vim/sessions/tor.vim	/^let s:l = 1 - ((0 * winheight(0) + 26) \/ 53)$/;"	v
s:l	zpwr/.vim/sessions/trc.vim	/^let s:l = 29 - ((27 * winheight(0) + 37) \/ 74)$/;"	v
s:l	zpwr/.vim/sessions/vimtricks.vim	/^let s:l = 13 - ((12 * winheight(0) + 15) \/ 30)$/;"	v
s:l	zpwr/.vim/sessions/vrc.vim	/^let s:l = 197 - ((11 * winheight(0) + 35) \/ 71)$/;"	v
s:l	zpwr/.vim/sessions/zshrc.vim	/^let s:l = 87 - ((86 * winheight(0) + 37) \/ 74)$/;"	v
s:l_blue	zpwr/.vim/colors/mdark.vim	/^let s:l_blue = "#848FB1"$/;"	v
s:l_cyan	zpwr/.vim/colors/mdark.vim	/^let s:l_cyan = "#99CCCC"$/;"	v
s:l_dusty_blue	zpwr/.vim/colors/mdark.vim	/^let s:l_dusty_blue = "#729FCF"$/;"	v
s:l_green	zpwr/.vim/colors/mdark.vim	/^let s:l_green = "#8BA692"$/;"	v
s:l_lavender	zpwr/.vim/colors/mdark.vim	/^let s:l_lavender = "#ADA5CB"$/;"	v
s:l_orange	zpwr/.vim/colors/mdark.vim	/^let s:l_orange = "#FCAF3E"$/;"	v
s:l_pink	zpwr/.vim/colors/mdark.vim	/^let s:l_pink = "#D4A0A0"$/;"	v
s:l_purple	zpwr/.vim/colors/mdark.vim	/^let s:l_purple = "#CB9DCD"$/;"	v
s:l_red	zpwr/.vim/colors/mdark.vim	/^let s:l_red = "#FB4453"$/;"	v
s:l_yellow	zpwr/.vim/colors/mdark.vim	/^let s:l_yellow = "#FFFF82"$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac = {}$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.blackestgravel	= ['1a1a18', 232]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.blackgravel		= ['201f1d', 233]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.coal = ['000000', 16]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.coldair			= ['405173', 241]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.coldsky = ['081c8c', 18]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.crystallake = ['1693a5', 62]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.darkbark = ['402924', 52]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.darkestnight = ['2f3a78', 19]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.darkgravel		= ['2e2d2a', 235]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.deepergravel		= ['35322d', 236]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.deepgravel		= ['44403a', 238]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.deeplake = ['003b7f', 20]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.dilutedpaint = ['90a680', 64]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.gravel			= ['777470', 240]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.lichen = ['515744', 101]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.oakleaf = ['233e09', 22]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.plain = ['f8f6f2', 15]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.raspberry = ['ab3e5b', 161]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.snow = ['ffffff', 15]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.stainonsnow = ['403131', 88]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.trunk = ['594512', 94]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.tundrariver = ['325a73', 24]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.wetcoldterrain	= ['8c7f77', 245]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.winterterrain		= ['908571', 252]$/;"	v
s:lac	zpwr/.vim/colors/laederon.vim	/^let s:lac.wintrygray = ['354d4f', 59]$/;"	v
s:launched	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:launched = 1$/;"	v
s:lavender	zpwr/.vim/colors/1989.vim	/^let s:lavender = [183, "#dfafff"]$/;"	v
s:lavender	zpwr/.vim/colors/abbott.vim	/^let s:lavender="#e6a2f3"$/;"	v
s:lavender	zpwr/.vim/colors/mdark.vim	/^let s:lavender = "#9B8BD4"$/;"	v
s:lazycat_list	zpwr/.vim/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lg_dusty_blue	zpwr/.vim/colors/mdark.vim	/^let s:lg_dusty_blue = "#8389A3"$/;"	v
s:light	zpwr/.vim/colors/seoul256-light.vim	/^let s:light     = s:custom_bg >= 252 && s:custom_bg <= 256$/;"	v
s:lightAccent1	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent1=s:greenSea$/;"	v
s:lightAccent1	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent1=s:turquoise$/;"	v
s:lightAccent2	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent2=s:emerald$/;"	v
s:lightAccent2	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent2=s:nephritis$/;"	v
s:lightAccent3	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent3=s:belizeHole$/;"	v
s:lightAccent3	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent3=s:peterRiver$/;"	v
s:lightAccent4	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent4=s:amethyst$/;"	v
s:lightAccent4	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent4=s:wisteria$/;"	v
s:lightAccent5	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent5=s:orange$/;"	v
s:lightAccent5	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent5=s:sunFlower$/;"	v
s:lightAccent6	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent6=s:carrot$/;"	v
s:lightAccent6	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent6=s:pumpkin$/;"	v
s:lightAccent7	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent7=s:alizarin$/;"	v
s:lightAccent7	zpwr/.vim/colors/flatui.vim	/^  let s:lightAccent7=s:pomegranate$/;"	v
s:lightBg	zpwr/.vim/colors/flatui.vim	/^  let s:lightBg=s:silver$/;"	v
s:lightBg	zpwr/.vim/colors/flatui.vim	/^  let s:lightBg=s:wetAsphalt$/;"	v
s:lightBlue	zpwr/.vim/colors/hemisu.vim	/^let s:lightBlue        = { "gui": "#CBE4EE", "cterm": "195" }$/;"	v
s:lightGreen	zpwr/.vim/colors/hemisu.vim	/^let s:lightGreen       = { "gui": "#BBFFAA", "cterm": "157" }$/;"	v
s:lightGrey	zpwr/.vim/colors/hemisu.vim	/^let s:lightGrey        = { "gui": "#BBBBBB", "cterm": "249" }$/;"	v
s:lightNorm	zpwr/.vim/colors/flatui.vim	/^  let s:lightNorm=s:silver$/;"	v
s:lightNorm	zpwr/.vim/colors/flatui.vim	/^  let s:lightNorm=s:wetAsphalt$/;"	v
s:lightPink	zpwr/.vim/colors/hemisu.vim	/^let s:lightPink        = { "gui": "#FFAFAF", "cterm": "217" }$/;"	v
s:lightTan	zpwr/.vim/colors/hemisu.vim	/^let s:lightTan         = { "gui": "#ECE1C8", "cterm": "230" }$/;"	v
s:light_bg	zpwr/.vim/colors/seoul256.vim	/^  let s:light_bg = 253$/;"	v
s:light_bg	zpwr/.vim/colors/seoul256.vim	/^  let s:light_bg = get(s:, 'seoul256_background', 253)$/;"	v
s:light_bg_1	zpwr/.vim/colors/seoul256.vim	/^let s:light_bg_1 = min([s:light_bg + 1, 256])$/;"	v
s:light_bg_2	zpwr/.vim/colors/seoul256.vim	/^let s:light_bg_2 = min([s:light_bg + 2, 256])$/;"	v
s:light_black	zpwr/.vim/colors/flatcolor.vim	/^let s:light_black     = { "gui": "#424242", "cterm": "8", "cterm16" : "8" }$/;"	v
s:light_black	zpwr/.vim/colors/pencil.vim	/^let s:light_black     = { "gui": "#424242", "cterm": "8"   }$/;"	v
s:light_blue	zpwr/.vim/colors/1989.vim	/^let s:light_blue = [159, "#afffff"]$/;"	v
s:light_blue	zpwr/.vim/colors/pencil.vim	/^let s:light_blue      = { "gui": "#b6d6fd", "cterm": "153" }$/;"	v
s:light_brown	zpwr/.vim/colors/abbott.vim	/^let s:light_brown="#816749"$/;"	v
s:light_cyan	zpwr/.vim/colors/pencil.vim	/^let s:light_cyan      = { "gui": "#4FB8CC", "cterm": "14"  }$/;"	v
s:light_fg	zpwr/.vim/colors/seoul256.vim	/^let s:light_fg = 239$/;"	v
s:light_gray	zpwr/.vim/colors/flatcolor.vim	/^let s:light_gray    = { "gui": "#B2B2B2", "cterm": "249", "cterm16" : "249" }$/;"	v
s:light_gray	zpwr/.vim/colors/pencil.vim	/^  let s:light_gray    = { "gui": "#B2B2B2", "cterm": "249" }$/;"	v
s:light_gray	zpwr/.vim/colors/pencil.vim	/^  let s:light_gray    = { "gui": "#D9D9D9", "cterm": "253" }$/;"	v
s:light_green	zpwr/.vim/colors/pencil.vim	/^let s:light_green     = { "gui": "#5FD7A7", "cterm": "10"  }$/;"	v
s:light_grey_blue	zpwr/.vim/colors/twilight.vim	/^let s:light_grey_blue = '#a0a8b0'$/;"	v
s:light_orange	zpwr/.vim/colors/phd.vim	/^let s:light_orange = '#fbd461'$/;"	v
s:light_orange	zpwr/.vim/colors/twilight.vim	/^let s:light_orange = '#ebc471'$/;"	v
s:light_purple	zpwr/.vim/colors/1989.vim	/^let s:light_purple = [225, "#ffdfff"]$/;"	v
s:light_purple	zpwr/.vim/colors/pencil.vim	/^let s:light_purple    = { "gui": "#6855DE", "cterm": "13"  }$/;"	v
s:light_red	zpwr/.vim/colors/pencil.vim	/^let s:light_red       = { "gui": "#E32791", "cterm": "1"   }$/;"	v
s:light_var_found	zpwr/.vim/colors/seoul256-light.vim	/^let s:light_var_found = exists('g:seoul256_light_background')$/;"	v
s:light_violet	zpwr/.vim/colors/phd.vim	/^let s:light_violet = '#a989ac'$/;"	v
s:light_yellow	zpwr/.vim/colors/1989.vim	/^let s:light_yellow = [229, "#ffffaf"]$/;"	v
s:lightblue	zpwr/.vim/colors/antares.vim	/^let s:lightblue        = "90d0f0"$/;"	v
s:lightblue	zpwr/.vim/colors/evening.vim	/^let s:lightblue       = "65aaca"$/;"	v
s:lightblue	zpwr/.vim/colors/literal_tango.vim	/^let s:lightblue    = "#729fcf"$/;"	v
s:lightblue	zpwr/.vim/colors/phd.vim	/^let s:lightblue = '#72b9bf'$/;"	v
s:lightcyan	zpwr/.vim/colors/literal_tango.vim	/^let s:lightcyan    = "#34e2e2"$/;"	v
s:lighter_black	zpwr/.vim/colors/flatcolor.vim	/^let s:lighter_black   = { "gui": "#545454", "cterm": "240", "cterm16" : "240" }$/;"	v
s:lighter_black	zpwr/.vim/colors/pencil.vim	/^let s:lighter_black   = { "gui": "#545454", "cterm": "240" }$/;"	v
s:lighter_gray	zpwr/.vim/colors/flatcolor.vim	/^let s:lighter_gray  = { "gui": "#C6C6C6", "cterm": "251", "cterm16" : "251" }$/;"	v
s:lighter_gray	zpwr/.vim/colors/pencil.vim	/^  let s:lighter_gray  = { "gui": "#C6C6C6", "cterm": "251" }$/;"	v
s:lighter_gray	zpwr/.vim/colors/pencil.vim	/^  let s:lighter_gray  = { "gui": "#E5E6E6", "cterm": "254" }$/;"	v
s:lightgreen	zpwr/.vim/colors/literal_tango.vim	/^let s:lightgreen   = "#8ae234"$/;"	v
s:lightgreen	zpwr/.vim/colors/phd.vim	/^let s:lightgreen = '#e2e9af'$/;"	v
s:lightgreen	zpwr/.vim/colors/twilight.vim	/^let s:lightgreen = '#c2c98f'$/;"	v
s:lightgrey	zpwr/.vim/colors/literal_tango.vim	/^let s:lightgrey    = "#d3d7cf"$/;"	v
s:lightgrey	zpwr/.vim/colors/twilight.vim	/^let s:lightgrey = '#605958'$/;"	v
s:lightmagenta	zpwr/.vim/colors/literal_tango.vim	/^let s:lightmagenta = "#ad7fa8"$/;"	v
s:lightred	zpwr/.vim/colors/literal_tango.vim	/^let s:lightred     = "#ef2929"$/;"	v
s:lilac	zpwr/.vim/colors/harlequin.vim	/^let s:lilac = ['#AE81FF', 141]$/;"	v
s:lime	zpwr/.vim/colors/harlequin.vim	/^let s:lime = ['#AEEE00', 154]$/;"	v
s:lime_green	zpwr/.vim/colors/abbott.vim	/^let s:lime_green="#94d900"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:line = "00346e"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:line = "2a2a2a"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:line = "393939"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow-Night.vim	/^	let s:line = "3a3a3a"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:line = "282a2e"$/;"	v
s:line	zpwr/.vim/colors/Tomorrow.vim	/^let s:line = "efefef"$/;"	v
s:line	zpwr/.vim/colors/antares.vim	/^	let s:line        = "151515"$/;"	v
s:line	zpwr/.vim/colors/antares.vim	/^let s:line             = "151515"$/;"	v
s:line	zpwr/.vim/colors/evening.vim	/^	let s:line        = "252525"$/;"	v
s:line	zpwr/.vim/colors/evening.vim	/^let s:line            = "252525"$/;"	v
s:line	zpwr/.vim/colors/heroku-terminal.vim	/^let s:line = "262633"$/;"	v
s:line	zpwr/.vim/colors/heroku.vim	/^let s:line = "262633"$/;"	v
s:line	zpwr/.vim/colors/hybrid-light.vim	/^  let s:line       = "#d0d0d0"$/;"	v
s:line	zpwr/.vim/colors/hybrid-light.vim	/^  let s:line       = "252"$/;"	v
s:line	zpwr/.vim/colors/hybrid_material.vim	/^    let s:line       = "0"    " Black$/;"	v
s:line	zpwr/.vim/colors/hybrid_material.vim	/^    let s:line       = "0"$/;"	v
s:line	zpwr/.vim/colors/hybrid_material.vim	/^    let s:line       = "235"$/;"	v
s:line	zpwr/.vim/colors/hybrid_material.vim	/^  let s:line       = "#212D32"$/;"	v
s:line	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:line       = "0"    " Black$/;"	v
s:line	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:line       = "0"$/;"	v
s:line	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:line       = "235"$/;"	v
s:line	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:line       = "#282a2e"$/;"	v
s:line	zpwr/.vim/colors/kkruby.vim	/^let s:line         = "81869A"$/;"	v
s:line	zpwr/.vim/colors/last256.vim	/^  let s:line       = "#204444"$/;"	v
s:line	zpwr/.vim/colors/last256.vim	/^  let s:line       = "236"$/;"	v
s:line_col	zpwr/.vim/colors/mdark.vim	/^let s:line_col = "#283033"$/;"	v
s:line_nr	zpwr/.vim/colors/mdark.vim	/^let s:line_nr = "#49646A"$/;"	v
s:linecolumn	zpwr/.vim/colors/znake.vim	/^let s:linecolumn = "230012"$/;"	v
s:linenr	zpwr/.vim/colors/znake.vim	/^let s:linenr     = "333333"$/;"	v
s:linenr_background	zpwr/.vim/colors/gotham.vim	/^let s:linenr_background = 'base1'$/;"	v
s:linenr_background	zpwr/.vim/colors/gotham256.vim	/^let s:linenr_background = 'base1'$/;"	v
s:linenr_bg	zpwr/.vim/colors/antares.vim	/^let s:linenr_bg        = "151515"$/;"	v
s:linenr_bg	zpwr/.vim/colors/evening.vim	/^let s:linenr_bg       = "252525"$/;"	v
s:linenr_fg	zpwr/.vim/colors/antares.vim	/^let s:linenr_fg        = "777777"$/;"	v
s:linenr_fg	zpwr/.vim/colors/evening.vim	/^let s:linenr_fg       = "656565"$/;"	v
s:linenumber	zpwr/.vim/colors/CandyPaper.vim	/^let s:linenumber   = "#807c6d"$/;"	v
s:linenumber	zpwr/.vim/colors/PaperColor.vim	/^  let s:linenumber   = ['#606060', '240']$/;"	v
s:linenumber	zpwr/.vim/colors/PaperColor.vim	/^  let s:linenumber   = ['#bcbcbc', '249']$/;"	v
s:low_color	zpwr/.vim/colors/candyman.vim	/^let s:low_color = 0$/;"	v
s:low_color	zpwr/.vim/colors/candyman.vim	/^let s:low_color = 1$/;"	v
s:low_color	zpwr/.vim/colors/cobalt2.vim	/^  let s:low_color = 0$/;"	v
s:low_color	zpwr/.vim/colors/cobalt2.vim	/^  let s:low_color = 1$/;"	v
s:low_color	zpwr/.vim/colors/jelleybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	zpwr/.vim/colors/jelleybeans.vim	/^  let s:low_color = 1$/;"	v
s:low_color	zpwr/.vim/colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	zpwr/.vim/colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
s:low_color	zpwr/.vim/colors/triplejelly.vim	/^  let s:low_color = 0$/;"	v
s:low_color	zpwr/.vim/colors/triplejelly.vim	/^  let s:low_color = 1$/;"	v
s:lower	zpwr/.vim/colors/xterm16.vim	/^	let s:lower = s:upper$/;"	v
s:lower	zpwr/.vim/colors/xterm16.vim	/^    let s:lower	= "00"$/;"	v
s:lyme	zpwr/.vim/colors/antares.vim	/^let s:lyme             = "afdf00"$/;"	v
s:lyme	zpwr/.vim/colors/evening.vim	/^let s:lyme            = "afdf00"$/;"	v
s:m	zpwr/.vim/colors/xterm16.vim	/^    let s:m = s:c2$/;"	v
s:m_cyan	zpwr/.vim/colors/mdark.vim	/^let s:m_cyan = "#579CAD"$/;"	v
s:m_gray	zpwr/.vim/colors/mdark.vim	/^let s:m_gray   = "#888A85"$/;"	v
s:macro	zpwr/.vim/colors/elda.vim	/^let s:macro = 29$/;"	v
s:magenta	zpwr/.vim/colors/ansi_blows.vim	/^let s:magenta='#aa00aa'$/;"	v
s:magenta	zpwr/.vim/colors/astronaut.vim	/^ let s:magenta = "darkmagenta"$/;"	v
s:magenta	zpwr/.vim/colors/astronaut.vim	/^ let s:magenta = "magenta"$/;"	v
s:magenta	zpwr/.vim/colors/bluedrake.vim	/^        let s:magenta = "170"$/;"	v
s:magenta	zpwr/.vim/colors/bluedrake.vim	/^        let s:magenta = "5"$/;"	v
s:magenta	zpwr/.vim/colors/bluedrake.vim	/^    let s:magenta = "d74bb9"$/;"	v
s:magenta	zpwr/.vim/colors/mdark.vim	/^let s:magenta = "#FF00FF"$/;"	v
s:magenta	zpwr/.vim/colors/parsec.vim	/^  let s:magenta     = "#d567af"$/;"	v
s:magenta	zpwr/.vim/colors/parsec.vim	/^  let s:magenta     = "5"$/;"	v
s:magenta	zpwr/.vim/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	zpwr/.vim/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	zpwr/.vim/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	zpwr/.vim/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	zpwr/.vim/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:master	zpwr/.vim/colors/seoul256-light.vim	/^let s:master    = get(split(globpath(&rtp, 'colors\/seoul256.vim'), '\\n'), 0, '')$/;"	v
s:matchparen	zpwr/.vim/colors/CandyPaper.vim	/^let s:matchparen   = "#00805a"$/;"	v
s:matchparen	zpwr/.vim/colors/PaperColor.vim	/^  let s:matchparen   = ['#4e4e4e', '239']$/;"	v
s:matchparen	zpwr/.vim/colors/PaperColor.vim	/^  let s:matchparen   = ['#c6c6c6', '251']$/;"	v
s:medium_gray	zpwr/.vim/colors/flatcolor.vim	/^let s:medium_gray     = { "gui": "#767676", "cterm": "243", "cterm16" : "243" }$/;"	v
s:medium_gray	zpwr/.vim/colors/pencil.vim	/^let s:medium_gray     = { "gui": "#767676", "cterm": "243" }$/;"	v
s:menu_char_prefix	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:menu_char_prefix	zpwr/taglist_46/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:mid_gray	zpwr/.vim/colors/1989.vim	/^let s:mid_gray = [102, "#878787"]$/;"	v
s:mid_grey_blue	zpwr/.vim/colors/twilight.vim	/^let s:mid_grey_blue = '#64686c'$/;"	v
s:middleDarkBlue	zpwr/.vim/colors/hemisu.vim	/^let s:middleDarkBlue   = { "gui": "#538192", "cterm": "24"  }$/;"	v
s:middleDarkGreen	zpwr/.vim/colors/hemisu.vim	/^let s:middleDarkGreen  = { "gui": "#739200", "cterm": "64"  }$/;"	v
s:middleDarkGrey	zpwr/.vim/colors/hemisu.vim	/^let s:middleDarkGrey   = { "gui": "#777777", "cterm": "241" }$/;"	v
s:middleDarkPink	zpwr/.vim/colors/hemisu.vim	/^let s:middleDarkPink   = { "gui": "#FF0055", "cterm": "197" }$/;"	v
s:middleLightBlue	zpwr/.vim/colors/hemisu.vim	/^let s:middleLightBlue  = { "gui": "#9FD3E6", "cterm": "116" }$/;"	v
s:middleLightGreen	zpwr/.vim/colors/hemisu.vim	/^let s:middleLightGreen = { "gui": "#B1D631", "cterm": "149" }$/;"	v
s:middleLightGrey	zpwr/.vim/colors/hemisu.vim	/^let s:middleLightGrey  = { "gui": "#999999", "cterm": "246" }$/;"	v
s:middleLightPink	zpwr/.vim/colors/hemisu.vim	/^let s:middleLightPink  = { "gui": "#D65E76", "cterm": "167" }$/;"	v
s:middlegrey	zpwr/.vim/colors/znake.vim	/^let s:middlegrey = "4d5057"$/;"	v
s:midnightBlue	zpwr/.vim/colors/flatui.vim	/^let s:midnightBlue=   { "gui": "#2c3e50", "cterm": "236"  }$/;"	v
s:mint	zpwr/.vim/colors/1989.vim	/^let s:mint = [158, "#afffd7"]$/;"	v
s:mint_green	zpwr/.vim/colors/abbott.vim	/^let s:mint_green="#d5fac8"$/;"	v
s:molokai_original	zpwr/.vim/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	zpwr/.vim/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:mongo	zpwr/.vim/colors/CandyPaper.vim	/^let s:mongo        = "#dfde00" "Boolean\/Special$/;"	v
s:monokain_original	zpwr/.vim/colors/monokain.vim	/^	let s:monokain_original = 0$/;"	v
s:monokain_original	zpwr/.vim/colors/monokain.vim	/^	let s:monokain_original = g:monokain_original$/;"	v
s:mordant	zpwr/.vim/colors/harlequin.vim	/^let s:mordant = ['#AE0C00', 124]$/;"	v
s:moria_fontface	zpwr/.vim/colors/moria.vim	/^    let s:moria_fontface = "plain"$/;"	v
s:moria_fontface	zpwr/.vim/colors/moria.vim	/^    let s:moria_fontface = g:moria_fontface$/;"	v
s:moria_monochrome	zpwr/.vim/colors/moria.vim	/^    let s:moria_monochrome = 0$/;"	v
s:moria_monochrome	zpwr/.vim/colors/moria.vim	/^    let s:moria_monochrome = g:moria_monochrome$/;"	v
s:moria_style	zpwr/.vim/colors/moria.vim	/^    let s:moria_style = &background $/;"	v
s:moria_style	zpwr/.vim/colors/moria.vim	/^    let s:moria_style = &background$/;"	v
s:moria_style	zpwr/.vim/colors/moria.vim	/^    let s:moria_style = g:moria_style$/;"	v
s:moss	zpwr/.vim/colors/harlequin.vim	/^let s:moss = ['#004225', 22]$/;"	v
s:mustard	zpwr/.vim/colors/mdark.vim	/^let s:mustard = "#996633"$/;"	v
s:n	zpwr/.vim/colors/fx.vim	/^let s:n = "NONE"$/;"	v
s:n	zpwr/.vim/colors/hybrid-light.vim	/^let s:n      = "NONE"$/;"	v
s:n	zpwr/.vim/colors/hybrid.vim	/^let s:n      = "NONE"$/;"	v
s:n	zpwr/.vim/colors/hybrid_material.vim	/^let s:n      = "NONE"$/;"	v
s:n	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:n      = "NONE"$/;"	v
s:n	zpwr/.vim/colors/last256.vim	/^let s:n      = "NONE"$/;"	v
s:n	zpwr/.vim/colors/parsec.vim	/^let s:n               = "NONE"$/;"	v
s:n	zpwr/.vim/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:navy	zpwr/.vim/colors/PaperColor.vim	/^  let s:navy    = ['#005f87', '24'] "StorageClass$/;"	v
s:navy	zpwr/.vim/colors/PaperColor.vim	/^  let s:navy    = ['#df875f', '173'] "StorageClass$/;"	v
s:nefertiti_brightness_level_max	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_brightness_level_max = len(s:nefertiti_brightness_levels) - 1$/;"	v
s:nefertiti_brightness_level_min	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_brightness_level_min = 0$/;"	v
s:nefertiti_brightness_levels	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_brightness_levels = range(-96, 96, 8)$/;"	v
s:nefertiti_default_brightness_level	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_default_brightness_level = index(s:nefertiti_brightness_levels, 0)$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors = {}$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Boolean"]           = [ [0xff, 0x98, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Comment"]           = [ [0x70, 0x70, 0x70], [], "gui=italic" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Constant"]          = [ [0xff, 0x98, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Folded"]            = [ [0x88, 0x80, 0x78], [0x3c, 0x34, 0x34], "gui=italic" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Function"]          = [ [0xdd, 0xcc, 0xa8], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Identifier"]        = [ [0x99, 0x88, 0x77], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Keyword"]           = [ [0x90, 0x9a, 0x9f], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["NonText"]           = [ [0x66, 0x60, 0x46], [], "guibg=bg gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Normal"]            = [ [0xdd, 0xd6, 0xc0], [], "guibg=#2c2824 gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Number"]            = [ [0xcc, 0x88, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["PreProc"]           = [ [0xbb, 0xaa, 0x88], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Special"]           = [ [0x71, 0x96, 0x11], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Statement"]         = [ [0x90, 0x9a, 0x9f], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["String"]            = [ [0xaa, 0xaa, 0x99], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Title"]             = [ [0x77, 0x88, 0x88], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Todo"]              = [ [0x8f, 0x6f, 0x8f], [], "guibg=#202020   gui=italic,underline,bold" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Type"]              = [ [0x99, 0x66, 0x44], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["pythonDecorator"]   = [ [0x88, 0x77, 0x44], [], "guibg=NONE gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	zpwr/.vim/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["pythonExClass"]     = [ [0x99, 0x76, 0x76], [], "guibg=NONE gui=NONE" ]$/;"	v
s:nephritis	zpwr/.vim/colors/flatui.vim	/^let s:nephritis=      { "gui": "#27ae60", "cterm": "35" }$/;"	v
s:neutral1	zpwr/.vim/colors/flatui.vim	/^  let s:neutral1=s:concrete$/;"	v
s:neutral2	zpwr/.vim/colors/flatui.vim	/^  let s:neutral2=s:asbestos$/;"	v
s:no_term_bg	zpwr/.vim/colors/lucius.vim	/^    let s:no_term_bg = 0$/;"	v
s:no_term_bg	zpwr/.vim/colors/lucius.vim	/^    let s:no_term_bg = g:lucius_no_term_bg$/;"	v
s:non_text	zpwr/.vim/colors/antares.vim	/^let s:non_text         = "151515"$/;"	v
s:non_text	zpwr/.vim/colors/evening.vim	/^let s:non_text        = "252525"$/;"	v
s:none	zpwr/.vim/colors/1989.vim	/^let s:none = ["NONE", ""]$/;"	v
s:none	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-material.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/fx.vim	/^    let s:none      = " cterm=NONE"$/;"	v
s:none	zpwr/.vim/colors/fx.vim	/^    let s:none      = " gui=NONE"$/;"	v
s:none	zpwr/.vim/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/hybrid-light.vim	/^let s:none   = "NONE"$/;"	v
s:none	zpwr/.vim/colors/hybrid.vim	/^let s:none   = "NONE"$/;"	v
s:none	zpwr/.vim/colors/hybrid_material.vim	/^let s:none   = "NONE"$/;"	v
s:none	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:none   = "NONE"$/;"	v
s:none	zpwr/.vim/colors/last256.vim	/^let s:none   = "NONE"$/;"	v
s:none	zpwr/.vim/colors/lumberjack.vim	/^let s:none='NONE'$/;"	v
s:none	zpwr/.vim/colors/materialbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	zpwr/.vim/colors/parsec.vim	/^let s:none            = "NONE"$/;"	v
s:none	zpwr/.vim/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:nontext	zpwr/.vim/colors/CandyPaper.vim	/^let s:nontext      = "#5a805a"$/;"	v
s:nontext	zpwr/.vim/colors/PaperColor.vim	/^  let s:nontext      = ['#444444', '237']$/;"	v
s:nontext	zpwr/.vim/colors/PaperColor.vim	/^  let s:nontext      = ['#dfafff', '189']$/;"	v
s:norm	zpwr/.vim/colors/eva.vim	/^  let s:norm       = { "gui": "#FF5701", "cterm": "202" }$/;"	v
s:norm	zpwr/.vim/colors/flatcolor.vim	/^  let s:norm            = s:light_black$/;"	v
s:norm	zpwr/.vim/colors/flatcolor.vim	/^  let s:norm            = s:lighter_gray$/;"	v
s:norm	zpwr/.vim/colors/flatui.vim	/^  let s:norm=s:clouds$/;"	v
s:norm	zpwr/.vim/colors/flatui.vim	/^  let s:norm=s:midnightBlue$/;"	v
s:norm	zpwr/.vim/colors/hemisu.vim	/^  let s:norm       = s:almostBlack$/;"	v
s:norm	zpwr/.vim/colors/hemisu.vim	/^  let s:norm       = s:almostWhite$/;"	v
s:norm	zpwr/.vim/colors/pencil.vim	/^  let s:norm            = s:light_black$/;"	v
s:norm	zpwr/.vim/colors/pencil.vim	/^  let s:norm            = s:lighter_gray$/;"	v
s:norm	zpwr/.vim/colors/scooby.vim	/^  let s:norm       = { "gui": "#DBDBDB", "cterm": "188" }$/;"	v
s:normBlue	zpwr/.vim/colors/hemisu.vim	/^  let s:normBlue   = s:middleDarkBlue$/;"	v
s:normBlue	zpwr/.vim/colors/hemisu.vim	/^  let s:normBlue   = s:middleLightBlue$/;"	v
s:normGreen	zpwr/.vim/colors/hemisu.vim	/^  let s:normGreen  = s:middleDarkGreen$/;"	v
s:normGreen	zpwr/.vim/colors/hemisu.vim	/^  let s:normGreen  = s:middleLightGreen$/;"	v
s:normRed	zpwr/.vim/colors/hemisu.vim	/^  let s:normRed    = s:middleDarkPink$/;"	v
s:normRed	zpwr/.vim/colors/hemisu.vim	/^  let s:normRed    = s:middleLightPink$/;"	v
s:norm_subtle	zpwr/.vim/colors/flatcolor.vim	/^  let s:norm_subtle     = s:light_gray$/;"	v
s:norm_subtle	zpwr/.vim/colors/flatcolor.vim	/^  let s:norm_subtle     = s:lighter_black$/;"	v
s:norm_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:norm_subtle     = s:light_gray$/;"	v
s:norm_subtle	zpwr/.vim/colors/pencil.vim	/^  let s:norm_subtle     = s:lighter_black$/;"	v
s:normal_items	zpwr/.vim/colors/lucius.vim	/^let s:normal_items = [$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-material.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:number_column = s:gray$/;"	v
s:number_column	zpwr/.vim/colors/gruvbox.vim	/^let s:number_column = s:bg4$/;"	v
s:number_column	zpwr/.vim/colors/materialbox.vim	/^let s:number_column = s:gray$/;"	v
s:o_black	zpwr/.vim/colors/mdark.vim	/^let s:o_black = "#0A1012"$/;"	v
s:o_white	zpwr/.vim/colors/mdark.vim	/^let s:o_white = "#EEEEEC"$/;"	v
s:o_yellow	zpwr/.vim/colors/mdark.vim	/^let s:o_yellow = "#CC9933"$/;"	v
s:ob	zpwr/.vim/colors/parsec.vim	/^let s:ob              = ""$/;"	v
s:ob	zpwr/.vim/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:olive	zpwr/.vim/colors/PaperColor.vim	/^  let s:olive   = ['#718c00', '64'] "String$/;"	v
s:olive	zpwr/.vim/colors/PaperColor.vim	/^  let s:olive   = ['#dfaf5f', '179'] "String$/;"	v
s:olive	zpwr/.vim/colors/antares.vim	/^let s:olive            = "afaf4f"$/;"	v
s:olive	zpwr/.vim/colors/evening.vim	/^let s:olive           = "afaf4f"$/;"	v
s:olive	zpwr/.vim/colors/mdark.vim	/^let s:olive = "#4C6C3D"$/;"	v
s:options_list	zpwr/.vim/colors/parsec.vim	/^let s:options_list=[$/;"	v
s:options_list	zpwr/.vim/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:opts	zpwr/.vim/colors/marklar.vim	/^        let s:opts = {'bold': 0, 'ignore': 1}$/;"	v
s:orange	zpwr/.vim/colors/CandyPaper.vim	/^let s:orange       = "#de7e38" "StorageClass$/;"	v
s:orange	zpwr/.vim/colors/PaperColor.vim	/^  let s:orange  = ['#d75f00', '166'] "Number$/;"	v
s:orange	zpwr/.vim/colors/PaperColor.vim	/^  let s:orange  = ['#ff5faf', '205'] "Number$/;"	v
s:orange	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:orange = "ffc58f"$/;"	v
s:orange	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:orange = "e78c45"$/;"	v
s:orange	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:orange = "f99157"$/;"	v
s:orange	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:orange = "de935f"$/;"	v
s:orange	zpwr/.vim/colors/Tomorrow.vim	/^let s:orange = "f5871f"$/;"	v
s:orange	zpwr/.vim/colors/abbott.vim	/^let s:orange="#fbb32f"$/;"	v
s:orange	zpwr/.vim/colors/antares.vim	/^let s:orange           = "ED934C"$/;"	v
s:orange	zpwr/.vim/colors/bluedrake.vim	/^        let s:orange  = "10"$/;"	v
s:orange	zpwr/.vim/colors/bluedrake.vim	/^        let s:orange  = "136"$/;"	v
s:orange	zpwr/.vim/colors/bluedrake.vim	/^    let s:orange  = "b67800"$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-material.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/evening.vim	/^let s:orange          = "de935f"$/;"	v
s:orange	zpwr/.vim/colors/flatui.vim	/^let s:orange=         { "gui": "#f39c12", "cterm": "214" }$/;"	v
s:orange	zpwr/.vim/colors/fx.vim	/^    let s:orange    = s:palette['orange'][0]$/;"	v
s:orange	zpwr/.vim/colors/fx.vim	/^    let s:orange    = s:palette['orange'][1]$/;"	v
s:orange	zpwr/.vim/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	zpwr/.vim/colors/heroku-terminal.vim	/^let s:orange = "ffa500"$/;"	v
s:orange	zpwr/.vim/colors/heroku.vim	/^let s:orange = "ffa500"$/;"	v
s:orange	zpwr/.vim/colors/hybrid-light.vim	/^  let s:orange     = "#875f00"$/;"	v
s:orange	zpwr/.vim/colors/hybrid-light.vim	/^  let s:orange     = "94"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_material.vim	/^    let s:orange     = "173"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_material.vim	/^    let s:orange     = "3"    " DarkYellow$/;"	v
s:orange	zpwr/.vim/colors/hybrid_material.vim	/^    let s:orange     = "9"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_material.vim	/^  let s:orange     = "#de935f"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:orange     = "173"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:orange     = "3"    " DarkYellow$/;"	v
s:orange	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:orange     = "9"$/;"	v
s:orange	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:orange     = "#de935f"$/;"	v
s:orange	zpwr/.vim/colors/kkruby.vim	/^let s:orange       = "CAaC81"$/;"	v
s:orange	zpwr/.vim/colors/last256.vim	/^  let s:orange     = "#d78700"$/;"	v
s:orange	zpwr/.vim/colors/last256.vim	/^  let s:orange     = "172"$/;"	v
s:orange	zpwr/.vim/colors/materialbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	zpwr/.vim/colors/materialbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	zpwr/.vim/colors/mdark.vim	/^let s:orange = "#FF3300"$/;"	v
s:orange	zpwr/.vim/colors/parsec.vim	/^  let s:orange      = "#f99157"$/;"	v
s:orange	zpwr/.vim/colors/parsec.vim	/^  let s:orange      = "9"$/;"	v
s:orange	zpwr/.vim/colors/pencil.vim	/^let s:orange          = { "gui": "#D75F5F", "cterm": "167" }$/;"	v
s:orange	zpwr/.vim/colors/phd.vim	/^let s:orange = '#bba401'$/;"	v
s:orange	zpwr/.vim/colors/saturn.vim	/^let s:orange =           [s:hsl2color(30,  65, 70), 215]$/;"	v
s:orange	zpwr/.vim/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	zpwr/.vim/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	zpwr/.vim/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	zpwr/.vim/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	zpwr/.vim/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:orange	zpwr/.vim/colors/znake.vim	/^let s:orange     = "ffc66d"$/;"	v
s:ou	zpwr/.vim/colors/parsec.vim	/^let s:ou              = ""$/;"	v
s:ou	zpwr/.vim/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	zpwr/.vim/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["base2"]  = s:palette["base2L"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["base2L"] = s:palette["base"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["base3"]  = s:palette["base2L"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["black"]  = s:palette["base3"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["green"]  = s:palette["greenL"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["orange"] = s:palette["orangeL"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["purple"] = s:palette["purple2"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette["white"]  = s:palette["black"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^    let s:palette['base']   = s:palette["baseL"]$/;"	v
s:palette	zpwr/.vim/colors/fx.vim	/^let s:palette = {$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette = {'gui' : {} , 'cterm' : {}}$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.addbg      = { 'dark' : "65"               , 'light' : "194" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.addfg      = { 'dark' : "193"              , 'light' : "22"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.aqua       = { 'dark' : s:cterm_aqua       , 'light' : "23"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.background = { 'dark' : "234"              , 'light' : "254" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.blue       = { 'dark' : s:cterm_blue       , 'light' : "17"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.changebg   = { 'dark' : "60"               , 'light' : "189" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.changefg   = { 'dark' : "189"              , 'light' : "53"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.comment    = { 'dark' : s:cterm_comment    , 'light' : "59"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.darkblue   = { 'dark' : "17"               , 'light' : "194" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.darkcolumn = { 'dark' : "234"              , 'light' : "244" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.darkcyan   = { 'dark' : "24"               , 'light' : "22"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.darkpurple = { 'dark' : "53"               , 'light' : "53"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.darkred    = { 'dark' : "52"               , 'light' : "189" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.delbg      = { 'dark' : s:cterm_delbg      , 'light' : "224" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.foreground = { 'dark' : s:cterm_foreground , 'light' : "16"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.green      = { 'dark' : s:cterm_green      , 'light' : "22"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.line       = { 'dark' : s:cterm_line       , 'light' : "252" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.orange     = { 'dark' : s:cterm_orange     , 'light' : "94"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.purple     = { 'dark' : s:cterm_purple     , 'light' : "53"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.red        = { 'dark' : s:cterm_red        , 'light' : "52"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.selection  = { 'dark' : s:cterm_selection  , 'light' : "250" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.window     = { 'dark' : "236"              , 'light' : "247" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.cterm.yellow     = { 'dark' : s:cterm_yellow     , 'light' : "58"  }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.addbg      = { 'dark' : "#5F875F"        , 'light' : "#d7ffd7" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.addfg      = { 'dark' : "#d7ffaf"        , 'light' : "#005f00" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.aqua       = { 'dark' : "#8abeb7"        , 'light' : "#005f5f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.background = { 'dark' : s:gui_background , 'light' : "#e4e4e4" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.blue       = { 'dark' : "#81a2be"        , 'light' : "#00005f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.changebg   = { 'dark' : "#5F5F87"        , 'light' : "#d7d7ff" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.changefg   = { 'dark' : "#d7d7ff"        , 'light' : "#5f005f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.comment    = { 'dark' : s:gui_comment    , 'light' : "#5f5f5f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.darkblue   = { 'dark' : "#00005f"        , 'light' : "#d7ffd7" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.darkcolumn = { 'dark' : "#1c1c1c"        , 'light' : "#808080" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.darkcyan   = { 'dark' : "#005f5f"        , 'light' : "#005f00" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.darkpurple = { 'dark' : "#5f005f"        , 'light' : "#5f005f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.darkred    = { 'dark' : "#5f0000"        , 'light' : "#d7d7ff" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.delbg      = { 'dark' : "#cc6666"        , 'light' : "#ffd7d7" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.foreground = { 'dark' : "#c5c8c6"        , 'light' : "#000000" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.green      = { 'dark' : "#b5bd68"        , 'light' : "#005f00" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.line       = { 'dark' : s:gui_line       , 'light' : "#d0d0d0" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.orange     = { 'dark' : "#de935f"        , 'light' : "#875f00" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.purple     = { 'dark' : "#b294bb"        , 'light' : "#5f005f" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.red        = { 'dark' : "#cc6666"        , 'light' : "#5f0000" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.selection  = { 'dark' : s:gui_selection  , 'light' : "#bcbcbc" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.window     = { 'dark' : "#303030"        , 'light' : "#9e9e9e" }$/;"	v
s:palette	zpwr/.vim/colors/hybrid.vim	/^let s:palette.gui.yellow     = { 'dark' : "#f0c674"        , 'light' : "#5f5f00" }$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette = {}$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.black  	 = [16 , "#000000"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.blue   	 = [33 , "#0087ff"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.brown 	 = [130, "#af5f00"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.cyan 		 = [6  , "#008080"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.darkblue 	 = [18 , "#000087"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.darkgreen  = [22 , "#005f00"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.darkpurple = [53 , "#5f005f"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.darkred 	 = [52 , "#5f0000"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.darkyellow = [58 , "#5f5f00"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray01 	 = [232, "#080808"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray02 	 = [233, "#121212"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray03 	 = [234, "#1c1c1c"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray04 	 = [235, "#262626"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray05 	 = [236, "#303030"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray06 	 = [237, "#3a3a3a"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray07 	 = [238, "#444444"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray08 	 = [239, "#4e4e4e"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray09 	 = [240, "#585858"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray10 	 = [241, "#606060"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray11 	 = [242, "#666666"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray12 	 = [243, "#767676"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray13 	 = [244, "#808080"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray14 	 = [245, "#8a8a8a"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray15 	 = [246, "#949494"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray16 	 = [247, "#9e9e9e"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray17 	 = [248, "#a8a8a8"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray18 	 = [249, "#b2b2b2"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray19 	 = [250, "#bcbcbc"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray20 	 = [251, "#c6c6c6"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray21 	 = [252, "#d0d0d0"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray22 	 = [253, "#dadada"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.gray23 	 = [254, "#e4e4e4"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.green  	 = [42 , "#00d787"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.orange 	 = [166, "#d75f00"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.pink 		 = [200, "#ff00d7"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.purple 	 = [129, "#af00ff"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.red      	 = [124, "#af0000"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.white  	 = [255, "#eeeeee"]$/;"	v
s:palette	zpwr/.vim/colors/preto.vim	/^let s:palette.yellow	 = [228, "#ffff87"]$/;"	v
s:palette	zpwr/.vim/colors/sprinkles.vim	/^  let s:palette = s:default_dark$/;"	v
s:palette	zpwr/.vim/colors/sprinkles.vim	/^  let s:palette = s:default_light$/;"	v
s:pastel_blue	zpwr/.vim/colors/abbott.vim	/^let s:pastel_blue="#8ccdf0"$/;"	v
s:pastel_green	zpwr/.vim/colors/abbott.vim	/^let s:pastel_green="#d8ff84"$/;"	v
s:peach	zpwr/.vim/colors/antares.vim	/^let s:peach            = "cca68e"$/;"	v
s:peach	zpwr/.vim/colors/evening.vim	/^let s:peach           = "cca68e"$/;"	v
s:peach	zpwr/.vim/colors/mdark.vim	/^let s:peach = "#FF9966"$/;"	v
s:peterRiver	zpwr/.vim/colors/flatui.vim	/^let s:peterRiver=     { "gui": "#3498db", "cterm": "33"  }$/;"	v
s:pink	zpwr/.vim/colors/1989.vim	/^let s:pink = [218, "#ffafdf"]$/;"	v
s:pink	zpwr/.vim/colors/CandyPaper.vim	/^let s:pink         = "#de6fa6" "Include\/Exception$/;"	v
s:pink	zpwr/.vim/colors/PaperColor.vim	/^  let s:pink    = ['#afdf00', '148'] "Type$/;"	v
s:pink	zpwr/.vim/colors/PaperColor.vim	/^  let s:pink    = ['#d7005f', '161'] "Type$/;"	v
s:pink	zpwr/.vim/colors/abbott.vim	/^let s:pink="#ec6c99"$/;"	v
s:pink	zpwr/.vim/colors/mdark.vim	/^let s:pink = "#D16B7C"$/;"	v
s:pink	zpwr/.vim/colors/pencil.vim	/^let s:pink            = { "gui": "#fb007a", "cterm": "9"   }$/;"	v
s:pink	zpwr/.vim/colors/saturn.vim	/^let s:pink =             [s:hsl2color(310, 20, 80), 109]$/;"	v
s:pink	zpwr/.vim/colors/znake.vim	/^let s:pink       = "ff0080"$/;"	v
s:pmenu_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_bg     = "#ccc5ad"$/;"	v
s:pmenu_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_fg     = "#050505"$/;"	v
s:pmenu_sbar	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_sbar   = "#4d4a41"$/;"	v
s:pmenu_sel_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_sel_bg = "#203780"$/;"	v
s:pmenu_sel_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_sel_fg = "#dddddd"$/;"	v
s:pmenu_thumb	zpwr/.vim/colors/CandyPaper.vim	/^let s:pmenu_thumb  = "#ccccad"$/;"	v
s:pomegranate	zpwr/.vim/colors/flatui.vim	/^let s:pomegranate=    { "gui": "#c0392b", "cterm": "124" }$/;"	v
s:popup_bg	zpwr/.vim/colors/phd.vim	/^let s:popup_bg = '#101010'$/;"	v
s:popup_bg_hl	zpwr/.vim/colors/phd.vim	/^let s:popup_bg_hl = '#000000'$/;"	v
s:popup_fg	zpwr/.vim/colors/phd.vim	/^let s:popup_fg = s:text$/;"	v
s:popup_fg_hl	zpwr/.vim/colors/phd.vim	/^let s:popup_fg_hl = s:text_hl$/;"	v
s:pumpkin	zpwr/.vim/colors/flatui.vim	/^let s:pumpkin=        { "gui": "#d35400", "cterm": "166"  }$/;"	v
s:purple	zpwr/.vim/colors/CandyPaper.vim	/^let s:purple       = "#a270df" "Repeat\/Conditional$/;"	v
s:purple	zpwr/.vim/colors/PaperColor.vim	/^  let s:purple  = ['#8959a8', '97'] "Repeat\/Conditional$/;"	v
s:purple	zpwr/.vim/colors/PaperColor.vim	/^  let s:purple  = ['#af87af', '139'] "Repeat\/Conditional$/;"	v
s:purple	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:purple = "ebbbff"$/;"	v
s:purple	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:purple = "c397d8"$/;"	v
s:purple	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:purple = "cc99cc"$/;"	v
s:purple	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:purple = "b294bb"$/;"	v
s:purple	zpwr/.vim/colors/Tomorrow.vim	/^let s:purple = "8959a8"$/;"	v
s:purple	zpwr/.vim/colors/antares.vim	/^let s:purple           = "CF9FFA"$/;"	v
s:purple	zpwr/.vim/colors/bluedrake.vim	/^        let s:purple  = "13"$/;"	v
s:purple	zpwr/.vim/colors/bluedrake.vim	/^        let s:purple  = "99"$/;"	v
s:purple	zpwr/.vim/colors/bluedrake.vim	/^    let s:purple  = "976ce2"$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-material.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/evening.vim	/^let s:purple          = "b14cc2"$/;"	v
s:purple	zpwr/.vim/colors/flatcolor.vim	/^  let s:purple          = s:dark_purple$/;"	v
s:purple	zpwr/.vim/colors/flatcolor.vim	/^  let s:purple          = s:purple$/;"	v
s:purple	zpwr/.vim/colors/flatcolor.vim	/^let s:purple = { "gui": "#c991e1", "cterm": "141", "cterm16": "5"}$/;"	v
s:purple	zpwr/.vim/colors/fx.vim	/^    let s:purple    = s:palette['purple'][0]$/;"	v
s:purple	zpwr/.vim/colors/fx.vim	/^    let s:purple    = s:palette['purple'][1]$/;"	v
s:purple	zpwr/.vim/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	zpwr/.vim/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/heroku-terminal.vim	/^let s:purple = "a292ff"$/;"	v
s:purple	zpwr/.vim/colors/heroku.vim	/^let s:purple = "a292ff"$/;"	v
s:purple	zpwr/.vim/colors/hybrid-light.vim	/^  let s:purple     = "#5f005f"$/;"	v
s:purple	zpwr/.vim/colors/hybrid-light.vim	/^  let s:purple     = "53"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_material.vim	/^    let s:purple     = "13"   " LightMagenta$/;"	v
s:purple	zpwr/.vim/colors/hybrid_material.vim	/^    let s:purple     = "139"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_material.vim	/^    let s:purple     = "5"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_material.vim	/^  let s:purple     = "#b294bb"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:purple     = "13"   " LightMagenta$/;"	v
s:purple	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:purple     = "139"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:purple     = "5"$/;"	v
s:purple	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:purple     = "#b294bb"$/;"	v
s:purple	zpwr/.vim/colors/kkruby.vim	/^let s:purple       = "A072BD"$/;"	v
s:purple	zpwr/.vim/colors/last256.vim	/^  let s:purple     = "#8787ff"$/;"	v
s:purple	zpwr/.vim/colors/last256.vim	/^  let s:purple     = "105"$/;"	v
s:purple	zpwr/.vim/colors/materialbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	zpwr/.vim/colors/materialbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	zpwr/.vim/colors/materialbox.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	zpwr/.vim/colors/mdark.vim	/^let s:purple = "#AD6491"$/;"	v
s:purple	zpwr/.vim/colors/onedark.vim	/^let s:purple = { "gui": "#C678DD", "cterm": "170", "cterm16": "5" } " Alternate cterm: 176$/;"	v
s:purple	zpwr/.vim/colors/pencil.vim	/^  let s:purple          = s:dark_purple$/;"	v
s:purple	zpwr/.vim/colors/pencil.vim	/^  let s:purple          = s:light_purple$/;"	v
s:purple	zpwr/.vim/colors/saturn.vim	/^let s:purple =           [s:hsl2color(310, 20, 60), 140]$/;"	v
s:purple	zpwr/.vim/colors/znake.vim	/^let s:purple     = "c397d8"$/;"	v
s:purple2	zpwr/.vim/colors/fx.vim	/^    let s:purple2   = s:palette['purple2'][0]$/;"	v
s:purple2	zpwr/.vim/colors/fx.vim	/^    let s:purple2   = s:palette['purple2'][1]$/;"	v
s:pycmd	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:pycmd = 'py'$/;"	v
s:pycmd	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:pycmd = 'py3'$/;"	v
s:pycmd	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:pycmd = substitute(g:powerline_pycmd, '\\v\\C^(py)%[thon](3?)$', '\\1\\2', '')$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:pyeval = 'py3eval'$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:pyeval = g:powerline_pyeval$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:pyeval = get(g:, 'powerline_pyeval', 'py3eval')$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^		let s:pyeval = get(g:, 'powerline_pyeval', 'pyeval')$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:pyeval = get(g:, 'powerline_pyeval', 'py3eval')$/;"	v
s:pyeval	zpwr/.tmux/powerline/bindings/vim/plugin/powerline.vim	/^	let s:pyeval = get(g:, 'powerline_pyeval', 'pyeval')$/;"	v
s:r	zpwr/.vim/colors/hybrid-light.vim	/^let s:r      = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/hybrid.vim	/^let s:r      = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/hybrid_material.vim	/^let s:r      = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:r      = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/last256.vim	/^let s:r      = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/parsec.vim	/^let s:r               = ",reverse"$/;"	v
s:r	zpwr/.vim/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	zpwr/.vim/colors/CandyPaper.vim	/^let s:red          = "#de4638" "Number$/;"	v
s:red	zpwr/.vim/colors/PaperColor.vim	/^  let s:red     = ['#5faf5f', '71'] "Include\/Exception$/;"	v
s:red	zpwr/.vim/colors/PaperColor.vim	/^  let s:red     = ['#df0000', '160'] "Include\/Exception$/;"	v
s:red	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:red = "ff9da4"$/;"	v
s:red	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:red = "d54e53"$/;"	v
s:red	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:red = "f2777a"$/;"	v
s:red	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:red = "cc6666"$/;"	v
s:red	zpwr/.vim/colors/Tomorrow.vim	/^let s:red = "c82829"$/;"	v
s:red	zpwr/.vim/colors/abbott.vim	/^let s:red="#d80450"$/;"	v
s:red	zpwr/.vim/colors/ansi_blows.vim	/^let s:red='#b90000'$/;"	v
s:red	zpwr/.vim/colors/antares.vim	/^let s:red              = "DE575C"$/;"	v
s:red	zpwr/.vim/colors/astronaut.vim	/^ let s:red     = "darkred"$/;"	v
s:red	zpwr/.vim/colors/astronaut.vim	/^ let s:red     = "red"$/;"	v
s:red	zpwr/.vim/colors/bluedrake.vim	/^        let s:red     = "1"$/;"	v
s:red	zpwr/.vim/colors/bluedrake.vim	/^        let s:red     = "167"$/;"	v
s:red	zpwr/.vim/colors/bluedrake.vim	/^    let s:red     = "d75a69"$/;"	v
s:red	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-material.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/elda.vim	/^let s:red = 124$/;"	v
s:red	zpwr/.vim/colors/evening.vim	/^let s:red             = "cc6666"$/;"	v
s:red	zpwr/.vim/colors/flatcolor.vim	/^  let s:red             = s:dark_red$/;"	v
s:red	zpwr/.vim/colors/flatcolor.vim	/^  let s:red             = s:red$/;"	v
s:red	zpwr/.vim/colors/flatcolor.vim	/^let s:red = { "gui": "#ff8080", "cterm": "204", "cterm16": "1"}$/;"	v
s:red	zpwr/.vim/colors/fx.vim	/^    let s:red       = s:palette['red'][0]$/;"	v
s:red	zpwr/.vim/colors/fx.vim	/^    let s:red       = s:palette['red'][1]$/;"	v
s:red	zpwr/.vim/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	zpwr/.vim/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/heroku-terminal.vim	/^let s:red = "c13333"$/;"	v
s:red	zpwr/.vim/colors/heroku.vim	/^let s:red = "c13333"$/;"	v
s:red	zpwr/.vim/colors/hybrid-light.vim	/^  let s:red        = "#5f0000"$/;"	v
s:red	zpwr/.vim/colors/hybrid-light.vim	/^  let s:red        = "52"$/;"	v
s:red	zpwr/.vim/colors/hybrid_material.vim	/^    let s:red        = "1"$/;"	v
s:red	zpwr/.vim/colors/hybrid_material.vim	/^    let s:red        = "167"$/;"	v
s:red	zpwr/.vim/colors/hybrid_material.vim	/^    let s:red        = "9"    " LightRed$/;"	v
s:red	zpwr/.vim/colors/hybrid_material.vim	/^  let s:red        = "#cc6666"$/;"	v
s:red	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:red        = "1"$/;"	v
s:red	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:red        = "167"$/;"	v
s:red	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:red        = "9"    " LightRed$/;"	v
s:red	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:red        = "#cc6666"$/;"	v
s:red	zpwr/.vim/colors/kkruby.vim	/^let s:red          = "e76481"$/;"	v
s:red	zpwr/.vim/colors/last256.vim	/^  let s:red        = "#d75f5f"$/;"	v
s:red	zpwr/.vim/colors/last256.vim	/^  let s:red        = "167"$/;"	v
s:red	zpwr/.vim/colors/lumberjack.vim	/^let s:red    = { 'gui': '#bd2a2a', 'cterm': '1'  }$/;"	v
s:red	zpwr/.vim/colors/materialbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	zpwr/.vim/colors/materialbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	zpwr/.vim/colors/materialbox.vim	/^  let s:red[1]    = 9$/;"	v
s:red	zpwr/.vim/colors/onedark.vim	/^let s:red = { "gui": "#E06C75", "cterm": "204", "cterm16": "1" } " Alternate cterm: 168$/;"	v
s:red	zpwr/.vim/colors/parsec.vim	/^  let s:red         = "#f2777a"$/;"	v
s:red	zpwr/.vim/colors/parsec.vim	/^  let s:red         = "1"$/;"	v
s:red	zpwr/.vim/colors/pencil.vim	/^  let s:red             = s:dark_red$/;"	v
s:red	zpwr/.vim/colors/pencil.vim	/^  let s:red             = s:light_red$/;"	v
s:red	zpwr/.vim/colors/phd.vim	/^let s:red = '#d07346'$/;"	v
s:red	zpwr/.vim/colors/saturn.vim	/^let s:red =              [s:hsl2color(0,   60, 70), 203]$/;"	v
s:red	zpwr/.vim/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	zpwr/.vim/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	zpwr/.vim/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	zpwr/.vim/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	zpwr/.vim/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:red	zpwr/.vim/colors/twilight.vim	/^let s:red = '#d08356'$/;"	v
s:red	zpwr/.vim/colors/znake.vim	/^let s:red        = "da4939"$/;"	v
s:red2	zpwr/.vim/colors/fx.vim	/^    let s:red2      = s:palette['red2'][0]$/;"	v
s:red2	zpwr/.vim/colors/fx.vim	/^    let s:red2      = s:palette['red2'][1]$/;"	v
s:rgb_map	zpwr/.vim/colors/elda.vim	/^let s:rgb_map = {$/;"	v
s:rgb_map	zpwr/.vim/colors/seoul256.vim	/^  let s:rgb_map = {$/;"	v
s:s	zpwr/.vim/colors/hybrid-light.vim	/^let s:s      = ",standout"$/;"	v
s:s	zpwr/.vim/colors/hybrid.vim	/^let s:s      = ",standout"$/;"	v
s:s	zpwr/.vim/colors/hybrid_material.vim	/^let s:s      = ",standout"$/;"	v
s:s	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:s      = ",standout"$/;"	v
s:s	zpwr/.vim/colors/last256.vim	/^let s:s      = ",standout"$/;"	v
s:s	zpwr/.vim/colors/parsec.vim	/^let s:s               = ",standout"$/;"	v
s:s	zpwr/.vim/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	zpwr/.vim/colors/calmar256-light.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	zpwr/.vim/colors/detailed.vim	/^let s:save_cpo = &cpo | set cpo&vim$/;"	v
s:save_cpo	zpwr/.vim/colors/nefertiti.vim	/^    let s:save_cpo = &cpo$/;"	v
s:save_cpo	zpwr/.vim/colors/pink.vim	/^let s:save_cpo = &cpo$/;"	v
s:search_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:search_bg    = "#00805a"$/;"	v
s:search_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:search_bg = ['#00875f', '29']$/;"	v
s:search_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:search_bg = ['#ffff5f', '227']$/;"	v
s:search_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:search_fg    = "#dddddd"$/;"	v
s:search_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:search_fg = ['#000000', '16']$/;"	v
s:search_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:search_fg = s:foreground$/;"	v
s:seashell_style	zpwr/.vim/colors/seashell.vim	/^let s:seashell_style = &background$/;"	v
s:selection	zpwr/.vim/colors/PaperColor.vim	/^  let s:selection    = ['#3a3a3a', '236']$/;"	v
s:selection	zpwr/.vim/colors/PaperColor.vim	/^  let s:selection    = ['#d0d0d0', '252']$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:selection = "003f8e"$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:selection = "424242"$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:selection = "515151"$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow-Night.vim	/^	let s:selection = "585858"$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:selection = "373b41"$/;"	v
s:selection	zpwr/.vim/colors/Tomorrow.vim	/^let s:selection = "d6d6d6"$/;"	v
s:selection	zpwr/.vim/colors/antares.vim	/^	let s:selection   = "505050"$/;"	v
s:selection	zpwr/.vim/colors/antares.vim	/^let s:selection        = "505050"$/;"	v
s:selection	zpwr/.vim/colors/evening.vim	/^	let s:selection   = "404040"$/;"	v
s:selection	zpwr/.vim/colors/evening.vim	/^let s:selection       = "404040"$/;"	v
s:selection	zpwr/.vim/colors/heroku-terminal.vim	/^let s:selection = "ffffff"$/;"	v
s:selection	zpwr/.vim/colors/heroku.vim	/^let s:selection = "ffffff"$/;"	v
s:selection	zpwr/.vim/colors/hybrid-light.vim	/^  let s:selection  = "#bcbcbc"$/;"	v
s:selection	zpwr/.vim/colors/hybrid-light.vim	/^  let s:selection  = "250"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_material.vim	/^    let s:selection  = "13"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_material.vim	/^    let s:selection  = "237"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_material.vim	/^    let s:selection  = "8"    " DarkGrey$/;"	v
s:selection	zpwr/.vim/colors/hybrid_material.vim	/^  let s:selection  = "#455A64"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:selection  = "13"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:selection  = "237"$/;"	v
s:selection	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:selection  = "8"    " DarkGrey$/;"	v
s:selection	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:selection  = "#373b41"$/;"	v
s:selection	zpwr/.vim/colors/kkruby.vim	/^let s:selection    = "eE1F29"$/;"	v
s:selection	zpwr/.vim/colors/last256.vim	/^  let s:selection  = "#585858"$/;"	v
s:selection	zpwr/.vim/colors/last256.vim	/^  let s:selection  = "240"$/;"	v
s:seoul256_background	zpwr/.vim/colors/seoul256.vim	/^  let s:seoul256_background = g:seoul256_background$/;"	v
s:sienna_style	zpwr/.vim/colors/sienna.vim	/^    let s:sienna_style = 'light'$/;"	v
s:sienna_style	zpwr/.vim/colors/sienna.vim	/^    let s:sienna_style = g:sienna_style$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra = {}$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Abyss       = [ '000000', 16  ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Agave       = [ '87d787', 114 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Azure       = [ '87afd7', 110 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Bellflower  = [ 'd78787', 174 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Bluebells   = [ 'af5f00', 130 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Cactus      = [ '5f8700', 64  ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Claret      = [ 'ff8787', 210 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Cloud       = [ 'e4e4e4', 254 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Day         = [ '303030', 236 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Dune        = [ 'dfdfaf', 187 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Dusk        = [ '875f5f', 95  ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Evening     = [ 'af8787', 138 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Firecracker = [ 'af5f5f', 131 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Flats       = [ 'afaf87', 144 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Graphite    = [ '585858', 240 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Heather     = [ '8787af', 103 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Lake        = [ '5f8787', 66  ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Lavender    = [ 'afafd7', 146 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Lilac       = [ '5f5f87', 60  ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Mallow      = [ 'dfaf5f', 179 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Marsh       = [ '87af87', 108 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Midnight    = [ '121212', 233 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Nolana      = [ 'afd7d7', 152 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Oasis       = [ '87afaf', 109 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Pebble      = [ '4e4e4e', 239 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Pitch       = [ '080808', 232 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Rose        = [ 'd75f5f', 167 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Sage        = [ '87af5f', 107 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Salt        = [ 'ffffff', 231 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Shade       = [ '3a3a3a', 237 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Shadow      = [ '262626', 235 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Slate       = [ '767676', 243 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Stars       = [ 'dfdfdf', 188 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Stone       = [ '8a8a8a', 245 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Sunset      = [ 'ffafaf', 217 ]$/;"	v
s:sierra	zpwr/.vim/colors/sierra.vim	/^let s:sierra.Twilight    = [ '1c1c1c', 234 ]$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-faff.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-material.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-material.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^    let s:sign_column = get(s:gb, g:colorsbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_column	zpwr/.vim/colors/materialbox.vim	/^    let s:sign_column = get(s:gb, g:materialbox_sign_column)$/;"	v
s:sign_column	zpwr/.vim/colors/materialbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	zpwr/.vim/colors/materialbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:silver	zpwr/.vim/colors/flatui.vim	/^let s:silver=         { "gui": "#e8e8e8", "cterm": "7" }$/;"	v
s:sky_cterm	zpwr/.vim/colors/sky.vim	/^let s:sky_cterm = [00, 23, 23, 31, 38]$/;"	v
s:sky_gui	zpwr/.vim/colors/sky.vim	/^let s:sky_gui = ["#00191a", "#003133", "#006064", "#0097A7", "#00BCD4"]$/;"	v
s:slate	zpwr/.vim/colors/mdark.vim	/^let s:slate = "#555753"$/;"	v
s:so_save	zpwr/.vim/sessions/Scripting.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/aliases.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/default.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script1.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script2.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script3.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script4.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script5.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/script6.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/test.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/text1.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/text2.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/tor.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/trc.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/vimtricks.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/vrc.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	zpwr/.vim/sessions/zshrc.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:solarized_termtrans_default	zpwr/.vim/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	zpwr/.vim/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sp_addbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addbg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addbg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addbg	zpwr/.vim/colors/last256.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addfg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_addfg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_addfg	zpwr/.vim/colors/last256.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_aqua	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_aqua	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_aqua	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_aqua	zpwr/.vim/colors/last256.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_back	zpwr/.vim/colors/parsec.vim	/^  let s:sp_back      = ""$/;"	v
s:sp_back	zpwr/.vim/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_background	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_background = ""$/;"	v
s:sp_background	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_background = ""$/;"	v
s:sp_background	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_background = ""$/;"	v
s:sp_background	zpwr/.vim/colors/last256.vim	/^  let s:sp_background = ""$/;"	v
s:sp_base0	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base0     = ""$/;"	v
s:sp_base0	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base00    = ""$/;"	v
s:sp_base00	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base01    = ""$/;"	v
s:sp_base01	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base02    = ""$/;"	v
s:sp_base02	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base03    = ""$/;"	v
s:sp_base03	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base1     = ""$/;"	v
s:sp_base1	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base2     = ""$/;"	v
s:sp_base2	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	zpwr/.vim/colors/parsec.vim	/^  let s:sp_base3     = ""$/;"	v
s:sp_base3	zpwr/.vim/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/last256.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/parsec.vim	/^  let s:sp_blue      = ""$/;"	v
s:sp_blue	zpwr/.vim/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_brown	zpwr/.vim/colors/last256.vim	/^  let s:sp_brown    = ""$/;"	v
s:sp_changebg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changebg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changebg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changebg	zpwr/.vim/colors/last256.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changefg	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_changefg	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_changefg	zpwr/.vim/colors/last256.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_comment	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_comment	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_comment	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_comment	zpwr/.vim/colors/last256.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_cyan	zpwr/.vim/colors/parsec.vim	/^  let s:sp_cyan      = ""$/;"	v
s:sp_cyan	zpwr/.vim/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_darkblue	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_darkblue   = ""$/;"	v
s:sp_darkblue	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_darkblue   = ""$/;"	v
s:sp_darkcyan	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_darkcyan   = ""$/;"	v
s:sp_darkcyan	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_darkcyan   = ""$/;"	v
s:sp_darkpurple	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_darkpurple = ""$/;"	v
s:sp_darkpurple	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_darkpurple = ""$/;"	v
s:sp_darkred	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_darkred    = ""$/;"	v
s:sp_darkred	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_darkred    = ""$/;"	v
s:sp_delbg	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_delbg   = ""$/;"	v
s:sp_foreground	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_foreground	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_foreground	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_foreground	zpwr/.vim/colors/last256.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_green	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	zpwr/.vim/colors/last256.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	zpwr/.vim/colors/parsec.vim	/^  let s:sp_green     = ""$/;"	v
s:sp_green	zpwr/.vim/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_line	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_line	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_line	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_line	zpwr/.vim/colors/last256.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_magenta	zpwr/.vim/colors/parsec.vim	/^  let s:sp_magenta   = ""$/;"	v
s:sp_magenta	zpwr/.vim/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	zpwr/.vim/colors/last256.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	zpwr/.vim/colors/parsec.vim	/^  let s:sp_none      = ""$/;"	v
s:sp_none	zpwr/.vim/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/last256.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/parsec.vim	/^  let s:sp_orange    = ""$/;"	v
s:sp_orange	zpwr/.vim/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_purple	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_purple	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_purple	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_purple	zpwr/.vim/colors/last256.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_red	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	zpwr/.vim/colors/last256.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	zpwr/.vim/colors/parsec.vim	/^  let s:sp_red       = ""$/;"	v
s:sp_red	zpwr/.vim/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_selection	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_selection	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_selection	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_selection	zpwr/.vim/colors/last256.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_un	zpwr/.vim/colors/pencil.vim	/^  let s:sp_un      = 'undercurl'$/;"	v
s:sp_un	zpwr/.vim/colors/pencil.vim	/^  let s:sp_un      = 'underline'$/;"	v
s:sp_violet	zpwr/.vim/colors/parsec.vim	/^  let s:sp_violet    = ""$/;"	v
s:sp_violet	zpwr/.vim/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_window	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_window	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_window	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_window	zpwr/.vim/colors/last256.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/hybrid-light.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/hybrid_material.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/last256.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/parsec.vim	/^  let s:sp_yellow    = ""$/;"	v
s:sp_yellow	zpwr/.vim/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:special_grey	zpwr/.vim/colors/onedark.vim	/^let s:special_grey = { "gui": "#383C45", "cterm": "238", "cterm16": "15" }$/;"	v
s:spellbad	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellbad   = ['#5f0000', '52']$/;"	v
s:spellbad	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellbad   = ['#ffafdf', '218']$/;"	v
s:spellcap	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellcap   = ['#5f005f', '53']$/;"	v
s:spellcap	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellcap   = ['#ffffaf', '229']$/;"	v
s:spelllocal	zpwr/.vim/colors/PaperColor.vim	/^  let s:spelllocal = ['#00005f', '17']$/;"	v
s:spelllocal	zpwr/.vim/colors/PaperColor.vim	/^  let s:spelllocal = ['#dfdfff', '189']$/;"	v
s:spellrare	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellrare  = ['#005f00', '22']$/;"	v
s:spellrare	zpwr/.vim/colors/PaperColor.vim	/^  let s:spellrare  = ['#afff87', '156']$/;"	v
s:star_cterm	zpwr/.vim/colors/sky.vim	/^let s:star_cterm = [188, 15]$/;"	v
s:star_gui	zpwr/.vim/colors/sky.vim	/^let s:star_gui = ["#e0e0e0", "#f5f5f5"]$/;"	v
s:status_cterm	zpwr/.vim/colors/sky.vim	/^let s:status_cterm = [114, 214, 203]$/;"	v
s:status_gui	zpwr/.vim/colors/sky.vim	/^let s:status_gui = ["#80c684", "#f5be19", "#f44034"]$/;"	v
s:status_line	zpwr/.vim/colors/kkruby.vim	/^let s:status_line  = "202527"$/;"	v
s:statusline	zpwr/.vim/colors/kkruby.vim	/^let s:statusline   = "4A5A5F"$/;"	v
s:statusline_active_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:statusline_active_bg   = "#cbc8ad"$/;"	v
s:statusline_active_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_active_bg   = ['#5f8787', '66']$/;"	v
s:statusline_active_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_active_bg   = s:navy$/;"	v
s:statusline_active_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:statusline_active_fg   = "#050505"$/;"	v
s:statusline_active_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_active_fg   = ['#1c1c1c', '233']$/;"	v
s:statusline_active_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_active_fg   = s:window$/;"	v
s:statusline_bg	zpwr/.vim/colors/antares.vim	/^let s:statusline_bg    = "151515"$/;"	v
s:statusline_bg	zpwr/.vim/colors/evening.vim	/^let s:statusline_bg   = "303030"$/;"	v
s:statusline_fg	zpwr/.vim/colors/antares.vim	/^let s:statusline_fg    = "90d0f0"$/;"	v
s:statusline_fg	zpwr/.vim/colors/evening.vim	/^let s:statusline_fg   = "65aaca"$/;"	v
s:statusline_inactive_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:statusline_inactive_bg = "#4a4d42"$/;"	v
s:statusline_inactive_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_inactive_bg = ['#444444', '237']$/;"	v
s:statusline_inactive_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_inactive_bg = ['#d0d0d0', '252']$/;"	v
s:statusline_inactive_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:statusline_inactive_fg = "#dddddd"$/;"	v
s:statusline_inactive_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_inactive_fg = ['#c6c6c6', '250']$/;"	v
s:statusline_inactive_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:statusline_inactive_fg = s:foreground$/;"	v
s:structure	zpwr/.vim/colors/phd.vim	/^let s:structure =  '#76cc68'$/;"	v
s:style	zpwr/.vim/colors/hybrid.vim	/^let s:style = &background$/;"	v
s:style	zpwr/.vim/colors/lucius.vim	/^    let s:style = &background$/;"	v
s:style	zpwr/.vim/colors/lucius.vim	/^    let s:style = g:lucius_style$/;"	v
s:style	zpwr/.vim/colors/seoul256.vim	/^    let s:style = &background$/;"	v
s:style	zpwr/.vim/colors/seoul256.vim	/^    let s:style = 'dark'$/;"	v
s:style	zpwr/.vim/colors/seoul256.vim	/^    let s:style = 'light'$/;"	v
s:style_idx	zpwr/.vim/colors/seoul256.vim	/^let s:style_idx = s:style == 'light'$/;"	v
s:subtle	zpwr/.vim/colors/eva.vim	/^  let s:subtle     = { "gui": "#444444", "cterm": "059" }$/;"	v
s:subtle	zpwr/.vim/colors/hemisu.vim	/^  let s:subtle     = s:darkGrey$/;"	v
s:subtle	zpwr/.vim/colors/hemisu.vim	/^  let s:subtle     = s:lightGrey$/;"	v
s:subtle	zpwr/.vim/colors/scooby.vim	/^  let s:subtle     = { "gui": "#0abdaa", "cterm": "037" }$/;"	v
s:subtle_black	zpwr/.vim/colors/flatcolor.vim	/^let s:subtle_black  = { "gui": "#303030", "cterm": "236", "cterm16" : "236" }$/;"	v
s:subtle_black	zpwr/.vim/colors/pencil.vim	/^  let s:subtle_black  = { "gui": "#262626", "cterm": "235" }$/;"	v
s:subtle_black	zpwr/.vim/colors/pencil.vim	/^  let s:subtle_black  = { "gui": "#303030", "cterm": "236" }$/;"	v
s:sunFlower	zpwr/.vim/colors/flatui.vim	/^let s:sunFlower=      { "gui": "#f1c40f", "cterm": "220" }$/;"	v
s:sunny	zpwr/.vim/colors/harlequin.vim	/^let s:sunny = ['#FFFC7F', 228]$/;"	v
s:sx	zpwr/.vim/sessions/Scripting.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/aliases.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/default.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script1.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script2.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script3.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script4.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script5.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/script6.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/test.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/text1.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/text2.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/tor.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/trc.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/vimtricks.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/vrc.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	zpwr/.vim/sessions/zshrc.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:t_none	zpwr/.vim/colors/hybrid-light.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/hybrid.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/hybrid_material.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/last256.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/parsec.vim	/^let s:t_none          = "NONE"$/;"	v
s:t_none	zpwr/.vim/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tab_bg	zpwr/.vim/colors/antares.vim	/^let s:tab_bg           = "353535"$/;"	v
s:tab_bg	zpwr/.vim/colors/evening.vim	/^let s:tab_bg          = "353535"$/;"	v
s:tab_fg	zpwr/.vim/colors/antares.vim	/^let s:tab_fg           = "bbbbbb"$/;"	v
s:tab_fg	zpwr/.vim/colors/evening.vim	/^let s:tab_fg          = "bbbbbb"$/;"	v
s:tabline	zpwr/.vim/colors/badwolf.vim	/^        let s:tabline = 'blackestgravel'$/;"	v
s:tabline	zpwr/.vim/colors/badwolf.vim	/^        let s:tabline = 'blackgravel'$/;"	v
s:tabline	zpwr/.vim/colors/badwolf.vim	/^        let s:tabline = 'darkgravel'$/;"	v
s:tabline	zpwr/.vim/colors/badwolf.vim	/^        let s:tabline = 'deepgravel'$/;"	v
s:tabline	zpwr/.vim/colors/badwolf.vim	/^    let s:tabline = 'blackgravel'$/;"	v
s:tabline	zpwr/.vim/colors/bluewolf.vim	/^        let s:tabline = 'blackestgravel'$/;"	v
s:tabline	zpwr/.vim/colors/bluewolf.vim	/^        let s:tabline = 'blackgravel'$/;"	v
s:tabline	zpwr/.vim/colors/bluewolf.vim	/^        let s:tabline = 'darkgravel'$/;"	v
s:tabline	zpwr/.vim/colors/bluewolf.vim	/^        let s:tabline = 'deepgravel'$/;"	v
s:tabline	zpwr/.vim/colors/bluewolf.vim	/^    let s:tabline = 'blackgravel'$/;"	v
s:tabline	zpwr/.vim/colors/goodwolf.vim	/^        let s:tabline = 'blackestgravel'$/;"	v
s:tabline	zpwr/.vim/colors/goodwolf.vim	/^        let s:tabline = 'blackgravel'$/;"	v
s:tabline	zpwr/.vim/colors/goodwolf.vim	/^        let s:tabline = 'darkgravel'$/;"	v
s:tabline	zpwr/.vim/colors/goodwolf.vim	/^        let s:tabline = 'deepgravel'$/;"	v
s:tabline	zpwr/.vim/colors/goodwolf.vim	/^    let s:tabline = 'blackgravel'$/;"	v
s:tabline_active_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:tabline_active_bg   = "#050505"$/;"	v
s:tabline_active_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_active_bg   = ['#00afaf', '37']$/;"	v
s:tabline_active_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_active_bg   = s:window$/;"	v
s:tabline_active_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:tabline_active_fg   = "#dddddd"$/;"	v
s:tabline_active_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_active_fg   = ['#1c1c1c', '233']$/;"	v
s:tabline_active_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_active_fg   = s:foreground$/;"	v
s:tabline_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:tabline_bg          = "#cbc8ad"$/;"	v
s:tabline_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_bg          = ['#3a3a3a', '235']$/;"	v
s:tabline_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_bg          = s:navy$/;"	v
s:tabline_inactive_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:tabline_inactive_bg = "#cbc8ad"$/;"	v
s:tabline_inactive_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_inactive_bg = ['#585858', '240']$/;"	v
s:tabline_inactive_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:tabline_inactive_fg = "#050505"$/;"	v
s:tabline_inactive_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_inactive_fg = ['#c6c6c6', '250']$/;"	v
s:tabline_inactive_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:tabline_inactive_fg = s:background$/;"	v
s:tabselection	zpwr/.vim/colors/kkruby.vim	/^let s:tabselection = "506775"$/;"	v
s:tan	zpwr/.vim/colors/abbott.vim	/^let s:tan="#fee3b4"$/;"	v
s:task_tag	zpwr/.vim/colors/kkruby.vim	/^let s:task_tag     = "A58B61"$/;"	v
s:temp00	zpwr/.vim/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	zpwr/.vim/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	zpwr/.vim/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	zpwr/.vim/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:term	zpwr/.vim/colors/fx.vim	/^    let s:term      = " cterm"$/;"	v
s:term	zpwr/.vim/colors/fx.vim	/^    let s:term      = " gui"$/;"	v
s:termBlack	zpwr/.vim/colors/jellybeans.vim	/^    let s:termBlack = "Black"$/;"	v
s:termBlack	zpwr/.vim/colors/jellybeans.vim	/^    let s:termBlack = "Grey"$/;"	v
s:termBlack	zpwr/.vim/colors/triplejelly.vim	/^    let s:termBlack = "Black"$/;"	v
s:termBlack	zpwr/.vim/colors/triplejelly.vim	/^    let s:termBlack = "Grey"$/;"	v
s:term_has_italic	zpwr/.vim/colors/jellyx.vim	/^let s:term_has_italic = 0$/;"	v
s:terminal_italic	zpwr/.vim/colors/parsec.vim	/^          let s:terminal_italic=1$/;"	v
s:terminal_italic	zpwr/.vim/colors/parsec.vim	/^  let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	zpwr/.vim/colors/parsec.vim	/^  let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terminal_italic	zpwr/.vim/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	zpwr/.vim/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	zpwr/.vim/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms	zpwr/.vim/colors/primary.vim	/^    let s:terms = ['rxvt', 'gnome-terminal']$/;"	v
s:terms_italic	zpwr/.vim/colors/parsec.vim	/^let s:terms_italic=[$/;"	v
s:terms_italic	zpwr/.vim/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	zpwr/.vim/colors/parsec.vim	/^let s:terms_noitalic=[$/;"	v
s:terms_noitalic	zpwr/.vim/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:text	zpwr/.vim/colors/harlequin.vim	/^let s:text = ['#F8F8F2', 15]$/;"	v
s:text	zpwr/.vim/colors/phd.vim	/^let s:text = '#e0e0e0'$/;"	v
s:text_bg	zpwr/.vim/colors/harlequin.vim	/^let s:text_bg = ['#1C1B1A', 234]$/;"	v
s:text_hl	zpwr/.vim/colors/phd.vim	/^let s:text_hl = '#ffffff'$/;"	v
s:text_minor	zpwr/.vim/colors/phd.vim	/^let s:text_minor = '#909090'$/;"	v
s:text_very_minor	zpwr/.vim/colors/phd.vim	/^let s:text_very_minor = '#304050'$/;"	v
s:thestars_version	zpwr/.vim/colors/thestars.vim	/^let s:thestars_version = 1.0.1$/;"	v
s:tlist_app_name	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_app_name	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_brief_help	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_cur_file_idx	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_debug_file	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_ant_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_asm_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspperl_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_aspvbs_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_awk_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_basic_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_beta_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_c_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cobol_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cpp_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_cs_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_csh_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_d_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_dosbatch_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_eiffel_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_erlang_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_expect_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_flex_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_fortran_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_go_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_html_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_java_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_javascript_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lisp_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_lua_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_make_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_matlab_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_ocamal_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_pascal_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_perl_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_php_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function;v:variable'$/;"	v
s:tlist_def_python_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function;v:variable'$/;"	v
s:tlist_def_rexx_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_rexx_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_ruby_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_scheme_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function;v:variable'$/;"	v
s:tlist_def_sh_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function;v:variable'$/;"	v
s:tlist_def_slang_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_slang_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sml_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_sql_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tcl_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_tex_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_vera_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_verilog_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vhdl_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_vim_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_yacc_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_def_zsh_settings	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_count	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_lnum_idx_cache	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_file_names	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_ftype_count	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_menu_empty	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_msg	zpwr/taglist_46/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_removed_flist	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_sid	zpwr/taglist_46/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_win_maximized	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tlist_winsize_chgd	zpwr/taglist_46/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:todo	zpwr/.vim/colors/CandyPaper.vim	/^let s:todo         = "#bcddbc"$/;"	v
s:todo	zpwr/.vim/colors/PaperColor.vim	/^  let s:todo         = ['#00af5f', '35']$/;"	v
s:todo	zpwr/.vim/colors/PaperColor.vim	/^  let s:todo         = ['#ff8700', '208']$/;"	v
s:turquoise	zpwr/.vim/colors/flatui.vim	/^let s:turquoise=      { "gui": "#1abc9c", "cterm": "36"  }$/;"	v
s:u	zpwr/.vim/colors/hybrid-light.vim	/^let s:u      = ",underline"$/;"	v
s:u	zpwr/.vim/colors/hybrid.vim	/^let s:u      = ",underline"$/;"	v
s:u	zpwr/.vim/colors/hybrid_material.vim	/^let s:u      = ",underline"$/;"	v
s:u	zpwr/.vim/colors/hybrid_reverse.vim	/^let s:u      = ",underline"$/;"	v
s:u	zpwr/.vim/colors/last256.vim	/^let s:u      = ",underline"$/;"	v
s:u	zpwr/.vim/colors/parsec.vim	/^let s:u           = ",underline"$/;"	v
s:u	zpwr/.vim/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	zpwr/.vim/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc = {}$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.algae = ['70d731', 121]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.barcared = ['e25a74', 161]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.beachblue = ['416389', 18]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.blackestgravel = ['141413', 232]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.bleaklemon = ['f9ef6d', 154]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.bleaksand   = ['c7b386', 252]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.cappuccino = ['88633f', 95]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.coal = ['000000', 16]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.darkgravel     = ['242321', 235]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.darksand    = ['998f84', 245]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.deepergravel   = ['35322d', 236]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.deepgravel     = ['45413b', 238]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.gravel         = ['857f78', 243]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.lighttannedskin = ['f4cf86', 222]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.mediumsand   = ['666462', 241]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.nut    = ['c7915b', 173]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.orange = ['ffa724', 214]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.plain = ['f8f6f2', 15]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.snow = ['ffffff', 15]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.tannedumbrella = ['c14c3d', 160]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.toffee = ['b88853', 137]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.warmadobe = ['9a4820', 88]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.warmcorn = ['fade3e', 221]$/;"	v
s:ubc	zpwr/.vim/colors/ubaryd.vim	/^let s:ubc.warmorange = ['ff7400', 215]$/;"	v
s:ulbg	zpwr/.vim/colors/astronaut.vim	/^  let s:ulbg     = "ctermbg=darkmagenta guibg=magenta4"$/;"	v
s:ulbg	zpwr/.vim/colors/astronaut.vim	/^  let s:ulbg     = "ctermbg=magenta guibg=magenta"$/;"	v
s:ulbg	zpwr/.vim/colors/astronaut.vim	/^ let s:ulbg     = ""$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-material.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl	zpwr/.vim/colors/materialbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	zpwr/.vim/colors/materialbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:undercurl_items	zpwr/.vim/colors/lucius.vim	/^let s:undercurl_items = [$/;"	v
s:underline	zpwr/.vim/colors/astronaut.vim	/^ let s:underline= ",underline"$/;"	v
s:underline	zpwr/.vim/colors/astronaut.vim	/^ let s:underline= "none"$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-material.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:underline	zpwr/.vim/colors/materialbox.vim	/^  let s:underline = ''$/;"	v
s:underline	zpwr/.vim/colors/materialbox.vim	/^let s:underline = 'underline,'$/;"	v
s:underline_items	zpwr/.vim/colors/lucius.vim	/^let s:underline_items = [$/;"	v
s:upper	zpwr/.vim/colors/xterm16.vim	/^	let s:upper = s:ccube[2*s:i] . s:ccube[2*s:i + 1]$/;"	v
s:use_bold	zpwr/.vim/colors/lucius.vim	/^    let s:use_bold = 1$/;"	v
s:use_bold	zpwr/.vim/colors/lucius.vim	/^    let s:use_bold = g:lucius_use_bold$/;"	v
s:use_underline	zpwr/.vim/colors/lucius.vim	/^    let s:use_underline = 1$/;"	v
s:use_underline	zpwr/.vim/colors/lucius.vim	/^    let s:use_underline = g:lucius_use_underline$/;"	v
s:var_found	zpwr/.vim/colors/seoul256-light.vim	/^let s:var_found = exists('g:seoul256_background')$/;"	v
s:vb_blue	zpwr/.vim/colors/mdark.vim	/^let s:vb_blue = "#2950CB"$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-material.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:vert_split = get(s:gb, g:colorsbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/gruvbox.vim	/^let s:vert_split = s:bg2$/;"	v
s:vert_split	zpwr/.vim/colors/materialbox.vim	/^  let s:vert_split = get(s:gb, g:materialbox_vert_split)$/;"	v
s:vert_split	zpwr/.vim/colors/materialbox.vim	/^let s:vert_split = s:bg2$/;"	v
s:vertsplit	zpwr/.vim/colors/onedark.vim	/^let s:vertsplit = { "gui": "#181A1F", "cterm": "59", "cterm16": "15" }$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-material.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_bg	zpwr/.vim/colors/materialbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-material.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_fg	zpwr/.vim/colors/materialbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vimbrant_original	zpwr/.vim/colors/vimbrant.vim	/^    let s:vimbrant_original = 0$/;"	v
s:vimbrant_original	zpwr/.vim/colors/vimbrant.vim	/^    let s:vimbrant_original = g:vimbrant_original$/;"	v
s:violet	zpwr/.vim/colors/parsec.vim	/^  let s:violet      = "#cc99cc"$/;"	v
s:violet	zpwr/.vim/colors/parsec.vim	/^  let s:violet      = "13"$/;"	v
s:violet	zpwr/.vim/colors/phd.vim	/^let s:violet = '#99699c'$/;"	v
s:violet	zpwr/.vim/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	zpwr/.vim/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	zpwr/.vim/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	zpwr/.vim/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	zpwr/.vim/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:violet	zpwr/.vim/colors/twilight.vim	/^let s:violet = '#a999ac'$/;"	v
s:visual	zpwr/.vim/colors/flatcolor.vim	/^  let s:visual          = s:bg_dark$/;"	v
s:visual	zpwr/.vim/colors/flatcolor.vim	/^  let s:visual          = s:blue$/;"	v
s:visual	zpwr/.vim/colors/last256.vim	/^  let s:visual     = "#5f8787"$/;"	v
s:visual	zpwr/.vim/colors/last256.vim	/^  let s:visual     = "66"$/;"	v
s:visual	zpwr/.vim/colors/pencil.vim	/^  let s:visual          = s:light_blue$/;"	v
s:visual	zpwr/.vim/colors/pencil.vim	/^  let s:visual          = s:lighter_black$/;"	v
s:visual_bg	zpwr/.vim/colors/CandyPaper.vim	/^let s:visual_bg    = "#2A3B4D"$/;"	v
s:visual_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:visual_bg = ['#8787af', '103']$/;"	v
s:visual_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:visual_bg = s:blue$/;"	v
s:visual_black	zpwr/.vim/colors/onedark.vim	/^let s:visual_black = { "gui": "NONE", "cterm": "NONE", "cterm16": s:black.cterm16 } " Black out selected text in 16-color visual mode$/;"	v
s:visual_fg	zpwr/.vim/colors/CandyPaper.vim	/^let s:visual_fg    = "#dddddd"$/;"	v
s:visual_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:visual_fg = ['#000000', '16']$/;"	v
s:visual_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:visual_fg = s:background$/;"	v
s:visual_grey	zpwr/.vim/colors/onedark.vim	/^let s:visual_grey = { "gui": "#3E4451", "cterm": "237", "cterm16": "15" }$/;"	v
s:vl_cyan	zpwr/.vim/colors/mdark.vim	/^let s:vl_cyan = "#99FFFF"$/;"	v
s:vl_pink	zpwr/.vim/colors/mdark.vim	/^let s:vl_pink = "#FFDDCC"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid-light.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid-light.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid_material.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid_material.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	zpwr/.vim/colors/last256.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/last256.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	zpwr/.vim/colors/parsec.vim	/^  let s:vmode       = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/parsec.vim	/^  let s:vmode       = "gui"$/;"	v
s:vmode	zpwr/.vim/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	zpwr/.vim/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:wetAsphalt	zpwr/.vim/colors/flatui.vim	/^let s:wetAsphalt=     { "gui": "#34495e", "cterm": "237" }$/;"	v
s:white	zpwr/.vim/colors/ansi_blows.vim	/^let s:white='#aaaaaa'$/;"	v
s:white	zpwr/.vim/colors/astronaut.vim	/^ let s:white   = "white"$/;"	v
s:white	zpwr/.vim/colors/elda.vim	/^let s:white = 252$/;"	v
s:white	zpwr/.vim/colors/flatcolor.vim	/^let s:white           = { "gui": "#F1F1F1", "cterm": "15", "cterm16" : "15" }$/;"	v
s:white	zpwr/.vim/colors/fx.vim	/^    let s:white     = s:palette['white'][0]$/;"	v
s:white	zpwr/.vim/colors/fx.vim	/^    let s:white     = s:palette['white'][1]$/;"	v
s:white	zpwr/.vim/colors/harlequin.vim	/^let s:white = ['#FFFFFF', 15]$/;"	v
s:white	zpwr/.vim/colors/hemisu.vim	/^let s:white            = { "gui": "#FFFFFF", "cterm": "231" }$/;"	v
s:white	zpwr/.vim/colors/last256.vim	/^	let s:white      = "#c6c6c6"$/;"	v
s:white	zpwr/.vim/colors/last256.vim	/^	let s:white      = "251"$/;"	v
s:white	zpwr/.vim/colors/literal_tango.vim	/^let s:white        = "#eeeeec"$/;"	v
s:white	zpwr/.vim/colors/mdark.vim	/^let s:white = "#FFFFFF"$/;"	v
s:white	zpwr/.vim/colors/onedark.vim	/^let s:white = { "gui": "#ABB2BF", "cterm": "145", "cterm16" : "7" }$/;"	v
s:white	zpwr/.vim/colors/pencil.vim	/^let s:white           = { "gui": "#F1F1F1", "cterm": "15"  }$/;"	v
s:white	zpwr/.vim/colors/twilight.vim	/^let s:white = '#fffedc'$/;"	v
s:white	zpwr/.vim/colors/znake.vim	/^let s:white      = "eaeaea"$/;"	v
s:white1	zpwr/.vim/colors/lumberjack.vim	/^let s:white1 = { 'gui': '#fffefc', 'cterm': '7'  }$/;"	v
s:white2	zpwr/.vim/colors/lumberjack.vim	/^let s:white2 = { 'gui': '#ffffff', 'cterm': '15' }$/;"	v
s:wikiaqua	zpwr/.vim/colors/znake.vim	/^let s:wikiaqua   = "66ffcc"$/;"	v
s:wikiblue	zpwr/.vim/colors/znake.vim	/^let s:wikiblue   = "66ccff"$/;"	v
s:wikigreen	zpwr/.vim/colors/znake.vim	/^let s:wikigreen  = "008040"$/;"	v
s:wikiorange	zpwr/.vim/colors/znake.vim	/^let s:wikiorange = "ff8000"$/;"	v
s:wikired	zpwr/.vim/colors/znake.vim	/^let s:wikired    = "ff6666"$/;"	v
s:wikiyellow	zpwr/.vim/colors/znake.vim	/^let s:wikiyellow = "ffff66"$/;"	v
s:wildmenu_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:wildmenu_bg  = ['#afdf00', '148']$/;"	v
s:wildmenu_bg	zpwr/.vim/colors/PaperColor.vim	/^  let s:wildmenu_bg  = ['#ffff00', '226']$/;"	v
s:wildmenu_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:wildmenu_fg  = s:background$/;"	v
s:wildmenu_fg	zpwr/.vim/colors/PaperColor.vim	/^  let s:wildmenu_fg  = s:foreground$/;"	v
s:window	zpwr/.vim/colors/CandyPaper.vim	/^let s:window       = "#4d4d4d"$/;"	v
s:window	zpwr/.vim/colors/PaperColor.vim	/^  let s:window       = ['#3a3a3a', '236']$/;"	v
s:window	zpwr/.vim/colors/PaperColor.vim	/^  let s:window       = ['#e4e4e4', '254']$/;"	v
s:window	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:window = "4d5057"$/;"	v
s:window	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:window = "4d5057"$/;"	v
s:window	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:window = "4d5057"$/;"	v
s:window	zpwr/.vim/colors/Tomorrow-Night.vim	/^	let s:window = "5e5e5e"$/;"	v
s:window	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:window = "4d5057"$/;"	v
s:window	zpwr/.vim/colors/Tomorrow.vim	/^let s:window = "efefef"$/;"	v
s:window	zpwr/.vim/colors/antares.vim	/^	let s:window      = "151515"$/;"	v
s:window	zpwr/.vim/colors/antares.vim	/^let s:window           = "151515"$/;"	v
s:window	zpwr/.vim/colors/evening.vim	/^	let s:window      = "252525"$/;"	v
s:window	zpwr/.vim/colors/evening.vim	/^let s:window          = "252525"$/;"	v
s:window	zpwr/.vim/colors/heroku-terminal.vim	/^let s:window = "17171d"$/;"	v
s:window	zpwr/.vim/colors/heroku.vim	/^let s:window = "17171d"$/;"	v
s:window	zpwr/.vim/colors/hybrid-light.vim	/^  let s:window     = "#9e9e9e"$/;"	v
s:window	zpwr/.vim/colors/hybrid-light.vim	/^  let s:window     = "247"$/;"	v
s:window	zpwr/.vim/colors/hybrid_material.vim	/^  let s:window     = "#303030"$/;"	v
s:window	zpwr/.vim/colors/hybrid_material.vim	/^  let s:window     = "236"$/;"	v
s:window	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:window     = "#303030"$/;"	v
s:window	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:window     = "236"$/;"	v
s:window	zpwr/.vim/colors/kkruby.vim	/^let s:window       = "616161"$/;"	v
s:window	zpwr/.vim/colors/last256.vim	/^  let s:window     = "#5f5f5f"$/;"	v
s:window	zpwr/.vim/colors/last256.vim	/^  let s:window     = "59"$/;"	v
s:wine	zpwr/.vim/colors/PaperColor.vim	/^  let s:wine  = ['#870087', '90']$/;"	v
s:wine	zpwr/.vim/colors/PaperColor.vim	/^  let s:wine  = ['#af8787', '138']$/;"	v
s:wine	zpwr/.vim/colors/evening.vim	/^let s:wine            = "af8787"$/;"	v
s:wipebuf	zpwr/.vim/sessions/Scripting.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/aliases.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/default.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script1.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script2.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script3.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script4.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script5.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/script6.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/test.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/text1.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/text2.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/tor.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/trc.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/vimtricks.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/vrc.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	zpwr/.vim/sessions/zshrc.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/Scripting.vim	/^  let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/Scripting.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/aliases.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/default.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script1.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script2.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script3.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script4.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script5.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/script6.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/test.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/text1.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/text2.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/tor.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/trc.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/vimtricks.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/vrc.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wipebuflines	zpwr/.vim/sessions/zshrc.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
s:wisteria	zpwr/.vim/colors/flatui.vim	/^let s:wisteria=       { "gui": "#8e44ad", "cterm": "97" }$/;"	v
s:xml_end	zpwr/.vim/colors/kkruby.vim	/^let s:xml_end      = "E03F8A"$/;"	v
s:xml_tag	zpwr/.vim/colors/kkruby.vim	/^let s:xml_tag      = "a87F4A"$/;"	v
s:xterm_colors	zpwr/.vim/colors/jellyx.vim	/^let s:xterm_colors = {$/;"	v
s:yellow	zpwr/.vim/colors/CandyPaper.vim	/^let s:yellow       = "#dfad59" "String$/;"	v
s:yellow	zpwr/.vim/colors/Tomorrow-Night-Blue.vim	/^let s:yellow = "ffeead"$/;"	v
s:yellow	zpwr/.vim/colors/Tomorrow-Night-Bright.vim	/^let s:yellow = "e7c547"$/;"	v
s:yellow	zpwr/.vim/colors/Tomorrow-Night-Eighties.vim	/^let s:yellow = "ffcc66"$/;"	v
s:yellow	zpwr/.vim/colors/Tomorrow-Night.vim	/^let s:yellow = "f0c674"$/;"	v
s:yellow	zpwr/.vim/colors/Tomorrow.vim	/^let s:yellow = "eab700"$/;"	v
s:yellow	zpwr/.vim/colors/abbott.vim	/^let s:yellow="#e5e339"$/;"	v
s:yellow	zpwr/.vim/colors/ansi_blows.vim	/^let s:yellow='#ffff44'$/;"	v
s:yellow	zpwr/.vim/colors/antares.vim	/^let s:yellow           = "EBE971"$/;"	v
s:yellow	zpwr/.vim/colors/astronaut.vim	/^ let s:yellow  = "darkyellow"$/;"	v
s:yellow	zpwr/.vim/colors/astronaut.vim	/^ let s:yellow  = "yellow"$/;"	v
s:yellow	zpwr/.vim/colors/bluedrake.vim	/^        let s:yellow  = "100"$/;"	v
s:yellow	zpwr/.vim/colors/bluedrake.vim	/^        let s:yellow  = "3"$/;"	v
s:yellow	zpwr/.vim/colors/bluedrake.vim	/^    let s:yellow  = "768f00"$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-faff.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-faff.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-greenish.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-greenish.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-material.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-material.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stblue.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stblue.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stbright.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stbright.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-steighties.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-steighties.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stnight.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/colorsbox-stnight.vim	/^let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/evening.vim	/^let s:yellow          = "f0c674"$/;"	v
s:yellow	zpwr/.vim/colors/flatcolor.vim	/^let s:yellow = { "gui": "#ffe9aa", "cterm": "228", "cterm16": "3"}$/;"	v
s:yellow	zpwr/.vim/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	zpwr/.vim/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/heroku-terminal.vim	/^let s:yellow = "ffea00"$/;"	v
s:yellow	zpwr/.vim/colors/heroku.vim	/^let s:yellow = "ffea00"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid-light.vim	/^  let s:yellow     = "#5f5f00"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid-light.vim	/^  let s:yellow     = "58"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_material.vim	/^    let s:yellow     = "11"   " LightYellow$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_material.vim	/^    let s:yellow     = "221"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_material.vim	/^    let s:yellow     = "3"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_material.vim	/^  let s:yellow     = "#f0c674"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:yellow     = "11"   " LightYellow$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:yellow     = "221"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_reverse.vim	/^    let s:yellow     = "3"$/;"	v
s:yellow	zpwr/.vim/colors/hybrid_reverse.vim	/^  let s:yellow     = "#f0c674"$/;"	v
s:yellow	zpwr/.vim/colors/kkruby.vim	/^let s:yellow       = "e8e267"$/;"	v
s:yellow	zpwr/.vim/colors/last256.vim	/^  let s:yellow     = "#d7af5f"$/;"	v
s:yellow	zpwr/.vim/colors/last256.vim	/^  let s:yellow     = "178"$/;"	v
s:yellow	zpwr/.vim/colors/literal_tango.vim	/^let s:yellow       = "#fce94f"$/;"	v
s:yellow	zpwr/.vim/colors/lumberjack.vim	/^let s:yellow = { 'gui': '#f0e95d', 'cterm': '11' }$/;"	v
s:yellow	zpwr/.vim/colors/materialbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	zpwr/.vim/colors/materialbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	zpwr/.vim/colors/materialbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	zpwr/.vim/colors/mdark.vim	/^let s:yellow = "#FFCC00"$/;"	v
s:yellow	zpwr/.vim/colors/onedark.vim	/^let s:yellow = { "gui": "#E5C07B", "cterm": "180", "cterm16": "3" }$/;"	v
s:yellow	zpwr/.vim/colors/parsec.vim	/^  let s:yellow      = "#fedb78"$/;"	v
s:yellow	zpwr/.vim/colors/parsec.vim	/^  let s:yellow      = "3"$/;"	v
s:yellow	zpwr/.vim/colors/pencil.vim	/^let s:yellow          = { "gui": "#F3E430", "cterm": "11"  }$/;"	v
s:yellow	zpwr/.vim/colors/phd.vim	/^let s:yellow = '#e3d756'$/;"	v
s:yellow	zpwr/.vim/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	zpwr/.vim/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	zpwr/.vim/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	zpwr/.vim/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	zpwr/.vim/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:yellow	zpwr/.vim/colors/twilight.vim	/^let s:yellow = '#e3d796'$/;"	v
s:yellow	zpwr/.vim/colors/znake.vim	/^let s:yellow     = "ffc66d"$/;"	v
s:yellow_orange	zpwr/.vim/colors/mdark.vim	/^let s:yellow_orange = "#FF6600"$/;"	v
safe_bytes_eval	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def safe_bytes_eval(expr):$/;"	f
safe_unicode	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.unicode import unicode, safe_unicode, FailedUnicode$/;"	i
safe_unicode	zpwr/.tmux/powerline/lib/unicode.py	/^def safe_unicode(s):$/;"	f
safe_unicode	zpwr/.tmux/powerline/theme.py	/^from powerline.lib.unicode import u, safe_unicode$/;"	i
save_all	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^save_all() {$/;"	f
save_command_interpolation	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^save_command_interpolation="#($CURRENT_DIR\/scripts\/continuum_save.sh)"$/;"	v
save_command_strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local save_command_strategy="$(get_tmux_option "$save_command_strategy_option" "$default_save_command_strategy")"$/;"	v
save_command_strategy_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^save_command_strategy_option="@resurrect-save-command-strategy"$/;"	v
save_cpo	zpwr/.vim/colors/candycode.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	zpwr/.vim/colors/codeblocks_dark.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	zpwr/.vim/colors/elda.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	zpwr/.vim/colors/luinnar.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	zpwr/.vim/colors/mizore.vim	/^let save_cpo = &cpo$/;"	v
save_int	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^	local save_int="$(get_tmux_option "$auto_save_interval_option")"$/;"	v
save_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^save_option="@resurrect-save"$/;"	v
save_or_restore	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local save_or_restore="$1"$/;"	v
save_path_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^save_path_option="@resurrect-save-script-path"$/;"	v
save_possible_simple_key	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def save_possible_simple_key(self):$/;"	m	class:Scanner
save_shell_history	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^save_shell_history() {$/;"	f
save_shell_history_option_on	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^save_shell_history_option_on() {$/;"	f
save_widget	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^			save_widget="${save_widget}_$i"$/;"	v
save_widget	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^		local save_widget="_powerline_save_$widget"$/;"	v
saved_display_time	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local saved_display_time=$(get_tmux_option "display-time" "750")$/;"	v
saved_display_time	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local saved_display_time=$(get_tmux_option "display-time" "750")$/;"	v
saved_display_time	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^    saved_display_time=$(get_tmux_option "display-time" "750")$/;"	v
saved_display_time	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local saved_display_time=$(get_tmux_option "display-time" "750")$/;"	v
scan_flow_scalar	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def scan_flow_scalar(self):$/;"	m	class:Scanner
scan_flow_scalar_non_spaces	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def scan_flow_scalar_non_spaces(self, start_mark):$/;"	m	class:Scanner
scan_flow_scalar_spaces	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def scan_flow_scalar_spaces(self, start_mark):$/;"	m	class:Scanner
scan_plain	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def scan_plain(self):$/;"	m	class:Scanner
scan_to_next_token	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def scan_to_next_token(self):$/;"	m	class:Scanner
scnew	zpwr/.shell_aliases_functions.sh	/^scnew(){$/;"	f
scratchpad	zpwr/.tmux/powerline/segments/i3wm.py	/^def scratchpad(pl, icons=SCRATCHPAD_ICONS):$/;"	f
scratchpad_groups	zpwr/.tmux/powerline/segments/i3wm.py	/^def scratchpad_groups(w):$/;"	f
screen_escape	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	screen_escape = False$/;"	v	class:ShellRenderer
script	zpwr/.shell_aliases_functions.sh	/^    script="$1"$/;"	v
script	zpwr/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^	local script="$1"$/;"	v
scriptToPDF	zpwr/.shell_aliases_functions.sh	/^        scriptToPDF(){$/;"	f
scriptToPDF	zpwr/.shell_aliases_functions.sh	/^    scriptToPDF(){$/;"	f
script_run_helper	zpwr/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^script_run_helper() {$/;"	f
script_to_run	watchServiceFSWatchPiDesktop.sh	/^script_to_run="$ZPWR_SCRIPTS\/upLoadPi.sh"$/;"	v
script_to_run	watchServiceFSWatchPiWeb.sh	/^script_to_run=$ZPWR_SCRIPTS\/uploadWebPi.sh$/;"	v
script_to_run	zpwr/scripts/watchServiceFSWatchPiDesktop.sh	/^script_to_run="$ZPWR_SCRIPTS\/upLoadPi.sh"$/;"	v
script_to_run	zpwr/scripts/watchServiceFSWatchPiWeb.sh	/^script_to_run=$ZPWR_SCRIPTS\/uploadWebPi.sh$/;"	v
scripts	zpwr/.shell_aliases_functions.sh	/^scripts(){$/;"	f
scripts_dir	duplicateLineDeleter.sh	/^scripts_dir=$ZPWR_SCRIPTS$/;"	v
scripts_dir	indenterAndDuplicateLineDeleter.sh	/^scripts_dir=$ZPWR_SCRIPTS$/;"	v
scripts_dir	zpwr/scripts/duplicateLineDeleter.sh	/^scripts_dir=$ZPWR_SCRIPTS$/;"	v
scripts_dir	zpwr/scripts/indenterAndDuplicateLineDeleter.sh	/^scripts_dir=$ZPWR_SCRIPTS$/;"	v
se	zpwr/.shell_aliases_functions.sh	/^    se(){$/;"	f
search	zpwr/.shell_aliases_functions.sh	/^    search="$1"$/;"	v
search	zpwr/.shell_aliases_functions.sh	/^search(){$/;"	f
sec2time	zpwr/motd.sh	/^function sec2time (){$/;"	f
sec_cmd	zpwr/.shell_aliases_functions.sh	/^        sec_cmd="$ZPWR_OPEN_CMD"$/;"	v
sec_cmd	zpwr/.shell_aliases_functions.sh	/^        sec_cmd=s$/;"	v
secondary_plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^		secondary_plane="bg"$/;"	v
secondary_plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^		secondary_plane="fg"$/;"	v
secondary_plane	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_charge.sh	/^	local secondary_plane=""$/;"	v
see	zpwr/.shell_aliases_functions.sh	/^    see(){$/;"	f
seee	zpwr/.shell_aliases_functions.sh	/^    seee(){$/;"	f
sef	zpwr/.shell_aliases_functions.sh	/^    sef(){$/;"	f
segdict_spec	zpwr/.tmux/powerline/lint/__init__.py	/^segdict_spec = Spec($/;"	v
segment_data	zpwr/.tmux/powerline/lint/__init__.py	/^	segment_data=Spec().unknown_spec($/;"	v
segment_data_value_spec	zpwr/.tmux/powerline/lint/__init__.py	/^segment_data_value_spec = Spec($/;"	v
segment_getters	zpwr/.tmux/powerline/segment.py	/^segment_getters = {$/;"	v
segment_info	zpwr/.tmux/powerline/lint/__init__.py	/^	segment_info=Spec().error('Segment info dictionary must be set by powerline').optional(),$/;"	v
segment_info	zpwr/.tmux/powerline/renderer.py	/^	segment_info = {$/;"	v	class:Renderer
segment_info	zpwr/.tmux/powerline/renderers/vim.py	/^	segment_info = Renderer.segment_info.copy()$/;"	v	class:VimRenderer
segment_module_spec	zpwr/.tmux/powerline/lint/__init__.py	/^segment_module_spec = Spec().type(unicode).func(check_segment_module).optional().copy$/;"	v
segment_spec	zpwr/.tmux/powerline/lint/__init__.py	/^segment_spec = segment_spec_base().update($/;"	v
segment_spec_base	zpwr/.tmux/powerline/lint/__init__.py	/^segment_spec_base = Spec($/;"	v
segments	zpwr/.tmux/powerline/lint/__init__.py	/^	segments=Spec().optional().list(subsegment_spec),$/;"	v
segments	zpwr/.tmux/powerline/lint/__init__.py	/^	segments=segdict_spec().update(above=Spec().list(segdict_spec()).optional()),$/;"	v
segments_spec	zpwr/.tmux/powerline/lint/__init__.py	/^segments_spec = Spec().optional().list(segment_spec).copy$/;"	v
ser	zpwr/.shell_aliases_functions.sh	/^    ser(){$/;"	f
server_option_value_not_changed	zpwr/.tmux/plugins/tmux-sensible/sensible.tmux	/^server_option_value_not_changed() {$/;"	f
service	zpwr/.shell_aliases_functions.sh	/^        service="$1"$/;"	v
service_path	zpwr/.shell_aliases_functions.sh	/^        local service_path="$src_dir\/$service.service"$/;"	v
session_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^session_exists() {$/;"	f
session_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local session_name="$1"$/;"	v
session_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local session_name="$2"$/;"	v
session_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local session_name="$1"$/;"	v
session_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local session_name="$1"$/;"	v
set_brightness	zpwr/.vim/colors/xterm16.vim	/^function s:set_brightness( default)$/;"	f
set_color	zpwr/.vim/colors/inori.vim	/^function! s:set_color(name, num, hex)$/;"	f
set_colors	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def set_colors():$/;"	m	class:PowerlinePrompt
set_copy_mode_bindings	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^set_copy_mode_bindings() {$/;"	f
set_default_strategies	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_default_strategies() {$/;"	f
set_default_tpm_path	zpwr/.tmux/plugins/tpm/tpm	/^set_default_tpm_path() {$/;"	f
set_error_bindings	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^set_error_bindings() {$/;"	f
set_hi	zpwr/.vim/colors/1989.vim	/^function! <SID>set_hi(name, fg, bg, style)$/;"	f
set_interval	zpwr/.tmux/powerline/lib/config.py	/^	def set_interval(self, interval):$/;"	m	class:ConfigLoader
set_interval	zpwr/.tmux/powerline/lib/threaded.py	/^	def set_interval(self, interval=None):$/;"	m	class:ThreadedSegment
set_last_save_timestamp	zpwr/.tmux/plugins/tmux-continuum/scripts/shared.sh	/^set_last_save_timestamp() {$/;"	f
set_merged_mark	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def set_merged_mark(self, merged_mark):$/;"	m	class:Mark
set_normal_bindings	zpwr/.tmux/plugins/tmux-yank/yank.tmux	/^set_normal_bindings() {$/;"	f
set_old_mark	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def set_old_mark(self, old_mark):$/;"	m	class:Mark
set_p_str	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def set_p_str(self):$/;"	m	class:PowerlinePrompt
set_p_str	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def set_p_str(self):$/;"	m	class:PowerlinePrompt1
set_p_str	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^	def set_p_str(self):$/;"	m	class:PowerlinePromptOut
set_pdb	zpwr/.tmux/powerline/renderers/pdb.py	/^	def set_pdb(self, pdb):$/;"	m	class:PDBRenderer
set_pl	zpwr/.tmux/powerline/lib/config.py	/^	def set_pl(self, pl):$/;"	m	class:ConfigLoader
set_prompt	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def set_prompt(powerline, psvar, side, theme, above=False):$/;"	f
set_pycmd	zpwr/.tmux/powerline/vim.py	/^def set_pycmd(new_pycmd):$/;"	f
set_restore_bindings	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_restore_bindings() {$/;"	f
set_save_bindings	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_save_bindings() {$/;"	f
set_screen_dimensions_helper	zpwr/.tmux/plugins/tmux-resurrect/tests/helpers/resurrect_helpers.sh	/^set_screen_dimensions_helper() {$/;"	f
set_script_path_options	zpwr/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_script_path_options() {$/;"	f
set_segment_highlighting	zpwr/.tmux/powerline/segment.py	/^def set_segment_highlighting(pl, colorscheme, segment, mode):$/;"	f
set_state	zpwr/.tmux/powerline/lib/threaded.py	/^	def set_state(self, interval=None, update_first=True, shutdown_event=None, **kwargs):$/;"	m	class:KwThreadedSegment
set_state	zpwr/.tmux/powerline/lib/threaded.py	/^	def set_state(self, interval=None, update_first=True, shutdown_event=None, **kwargs):$/;"	m	class:ThreadedSegment
set_state	zpwr/.tmux/powerline/segments/common/net.py	/^	def set_state(self, query_url='http:\/\/ipv4.icanhazip.com\/', **kwargs):$/;"	m	class:ExternalIpSegment
set_tmux_environment	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.bindings.tmux import (TmuxVersionInfo, run_tmux_command, set_tmux_environment, get_tmux_version,$/;"	i
set_tmux_environment	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def set_tmux_environment(varname, value, remove=True):$/;"	f
set_tmux_environment_nosource	zpwr/.tmux/powerline/bindings/config.py	/^	def set_tmux_environment_nosource(varname, value, remove=True):$/;"	f	function:tmux_setup
set_tmux_option	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^set_tmux_option() {$/;"	f
set_tmux_option	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^set_tmux_option() {$/;"	f
set_tpm_key_bindings	zpwr/.tmux/plugins/tpm/tpm	/^set_tpm_key_bindings() {$/;"	f
set_tpm_path	zpwr/.tmux/plugins/tpm/tpm	/^set_tpm_path() {$/;"	f
set_update_value	zpwr/.tmux/powerline/lib/threaded.py	/^	def set_update_value(self):$/;"	m	class:ThreadedSegment
set_watcher	zpwr/.tmux/powerline/lib/config.py	/^	def set_watcher(self, watcher_type, force=False):$/;"	m	class:ConfigLoader
setcolor	zpwr/.vim/colors/xterm16.vim	/^function s:setcolor( name, r, g, b)$/;"	f
setmerged	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def setmerged(self, d):$/;"	m	class:MarkedDict
setup	zpwr/.tmux/powerline/__init__.py	/^	def setup(self, *args, **kwargs):$/;"	m	class:Powerline
setup	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^def setup(**kwargs):$/;"	f
setup	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def setup(zsh_globals):$/;"	f
setup	zpwr/.tmux/powerline/vim.py	/^def setup(*args, **kwargs):$/;"	f
setup_before_restore	zpwr/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^setup_before_restore() {$/;"	f
setup_components	zpwr/.tmux/powerline/__init__.py	/^	def setup_components(self, components):$/;"	m	class:Powerline
setup_components	zpwr/.tmux/powerline/vim.py	/^	def setup_components(self, components):$/;"	m	class:VimPowerline
sha	fzfGitOpts.sh	/^    sha=\\$(echo {} | cut -d" " -f1)$/;"	v
sha	zpwr/scripts/fzfGitOpts.sh	/^    sha=\\$(echo {} | cut -d" " -f1)$/;"	v
shell_colorscheme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^shell_colorscheme_spec = (Spec($/;"	v
shell_command	zpwr/.tmux/powerline/bindings/config.py	/^def shell_command(pl, args):$/;"	f
shell_history_option	zpwr/.tmux/plugins/tmux-resurrect/scripts/variables.sh	/^shell_history_option="@resurrect-save-shell-history" # deprecated$/;"	v
shell_mode	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^shell_mode() {$/;"	f
shell_mode_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^shell_mode_default="emacs"$/;"	v
shell_mode_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^shell_mode_option="@shell_mode"$/;"	v
shell_mode_spec	zpwr/.tmux/powerline/lint/__init__.py	/^shell_mode_spec = Spec().re('^(?:[\\w\\-]+|\\.safe)$').copy$/;"	v
shell_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^	local shell_name="$2"$/;"	v
shlex	zpwr/.tmux/powerline/bindings/config.py	/^import shlex$/;"	i
short	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^	short=$(get_tmux_option "@batt_remain_short" false)$/;"	v
short	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^short=false$/;"	v
showDeps	zpwr/install.sh	/^showDeps(){$/;"	f
showHidden	directoryContentsSize.sh	/^showHidden() {$/;"	f
showHidden	zpwr/scripts/directoryContentsSize.sh	/^showHidden() {$/;"	f
show_copy_config	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^show_copy_config='@prefix_highlight_show_copy_mode'$/;"	v
show_copy_mode	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        show_copy_mode="$4" \\$/;"	v
show_copy_mode	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        show_copy_mode=$(tmux_option "$show_copy_config" "off") \\$/;"	v
show_output	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^show_output() {$/;"	f
shutdown	zpwr/.tmux/powerline/__init__.py	/^	def shutdown(self, set_event=True):$/;"	m	class:Powerline
shutdown	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def shutdown():$/;"	f
shutdown	zpwr/.tmux/powerline/lib/threaded.py	/^	def shutdown(self):$/;"	m	class:ThreadedSegment
shutdown	zpwr/.tmux/powerline/renderer.py	/^	def shutdown(self):$/;"	m	class:Renderer
shutdown	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^	def shutdown(self):$/;"	m	class:IPythonRenderer
shutdown	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^	def shutdown(self, *args, **kwargs):$/;"	m	class:RendererProxy
shutdown	zpwr/.tmux/powerline/renderers/vim.py	/^	def shutdown(self):$/;"	m	class:VimRenderer
shutdown	zpwr/.tmux/powerline/segments/common/sys.py	/^		def shutdown():$/;"	m	class:.CPULoadPercentSegment
shutdown	zpwr/.tmux/powerline/theme.py	/^	def shutdown(self):$/;"	m	class:Theme
sidelen	manzshcompgen.zsh	/^    sidelen=$(( ($sidelen + 2 -1) \/ 2))$/;"	v
sidelen	manzshcompgen.zsh	/^    sidelen=$(($width - $len - $spacerlen * 2))$/;"	v
sidelen	zpwr/scripts/manzshcompgen.zsh	/^    sidelen=$(( ($sidelen + 2 -1) \/ 2))$/;"	v
sidelen	zpwr/scripts/manzshcompgen.zsh	/^    sidelen=$(($width - $len - $spacerlen * 2))$/;"	v
sidelen	zpwr/scripts/zshcompgen.zsh	/^    sidelen=$(( ($sidelen + 2 -1) \/ 2))$/;"	v
sidelen	zpwr/scripts/zshcompgen.zsh	/^    sidelen=$(($width - $len - $spacerlen * 2))$/;"	v
sidelen	zshcompgen.zsh	/^    sidelen=$(( ($sidelen + 2 -1) \/ 2))$/;"	v
sidelen	zshcompgen.zsh	/^    sidelen=$(($width - $len - $spacerlen * 2))$/;"	v
sidelen2	manzshcompgen.zsh	/^    sidelen2=$sidelen$/;"	v
sidelen2	zpwr/scripts/manzshcompgen.zsh	/^    sidelen2=$sidelen$/;"	v
sidelen2	zpwr/scripts/zshcompgen.zsh	/^    sidelen2=$sidelen$/;"	v
sidelen2	zshcompgen.zsh	/^    sidelen2=$sidelen$/;"	v
sierra_Hour	zpwr/.vim/colors/sierra.vim	/^    let sierra_Hour = strftime("%H") $/;"	v
silently_source_all_tmux_files	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^silently_source_all_tmux_files() {$/;"	f
silver	zpwr/.vim/colors/rakr-light.vim	/^  let silver      = "bdc3c7"$/;"	v
single_tab	zpwr/.tmux/powerline/selectors/vim.py	/^def single_tab(pl, segment_info, mode):$/;"	f
size	mantozshcomp.py	/^    def size(self):$/;"	m	class:Deroffer
size	tailZOU.sh	/^    size=$1$/;"	v
size	tailZOU.sh	/^size=100$/;"	v
size	zpwr/.shell_aliases_functions.sh	/^            size=$1$/;"	v
size	zpwr/.shell_aliases_functions.sh	/^        size=100$/;"	v
size	zpwr/scripts/mantozshcomp.py	/^    def size(self):$/;"	m	class:Deroffer
size	zpwr/scripts/tailZOU.sh	/^    size=$1$/;"	v
size	zpwr/scripts/tailZOU.sh	/^size=100$/;"	v
skip_char	mantozshcomp.py	/^    def skip_char(self, amt=1):$/;"	m	class:Deroffer
skip_char	zpwr/scripts/mantozshcomp.py	/^    def skip_char(self, amt=1):$/;"	m	class:Deroffer
skip_leading_whitespace	mantozshcomp.py	/^    def skip_leading_whitespace(self):$/;"	m	class:Deroffer
skip_leading_whitespace	zpwr/scripts/mantozshcomp.py	/^    def skip_leading_whitespace(self):$/;"	m	class:Deroffer
sleep	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from time import sleep$/;"	i
sleepTime	zpwr/.shell_aliases_functions.sh	/^        sleepTime=$2$/;"	v
sniffer	zpwr/.tmux/powerline/segments/vim/__init__.py	/^sniffer = csv.Sniffer()$/;"	v
socket	zpwr/.tmux/powerline/segments/common/net.py	/^import socket$/;"	i
soft	zpwr/.tmux/powerline/lint/__init__.py	/^	soft=divider_spec(),$/;"	v
sorted	sortedArrayCounter.sh	/^sorted=($(sort -f <<<"${arr[*]}"))$/;"	v
sorted	sortedArrayCounter.sh	/^sorted=($(uniq <<<"${sorted[*]}"))$/;"	v
sorted	zpwr/scripts/sortedArrayCounter.sh	/^sorted=($(sort -f <<<"${arr[*]}"))$/;"	v
sorted	zpwr/scripts/sortedArrayCounter.sh	/^sorted=($(uniq <<<"${sorted[*]}"))$/;"	v
sortedCommand	directoryContentsSize.sh	/^sortedCommand=gsort$/;"	v
sortedCommand	zpwr/scripts/directoryContentsSize.sh	/^sortedCommand=gsort$/;"	v
source_plugins	zpwr/.tmux/plugins/tpm/scripts/source_plugins.sh	/^source_plugins() {$/;"	f
source_plugins	zpwr/.tmux/plugins/tpm/tpm	/^source_plugins() {$/;"	f
source_tmux_file	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^def source_tmux_file(fname):$/;"	f
source_tmux_file_nosource	zpwr/.tmux/powerline/bindings/config.py	/^	def source_tmux_file_nosource(fname):$/;"	f	function:tmux_setup
source_tmux_files	zpwr/.tmux/powerline/bindings/config.py	/^def source_tmux_files(pl, args, tmux_version=None, source_tmux_file=source_tmux_file):$/;"	f
spaceChar	manzshcompgen.zsh	/^    spaceChar=' '$/;"	v
spaceChar	zpwr/scripts/manzshcompgen.zsh	/^    spaceChar=' '$/;"	v
spaceChar	zpwr/scripts/zshcompgen.zsh	/^    spaceChar=' '$/;"	v
spaceChar	zshcompgen.zsh	/^    spaceChar=' '$/;"	v
spacerlen	manzshcompgen.zsh	/^    spacerlen=2$/;"	v
spacerlen	zpwr/scripts/manzshcompgen.zsh	/^    spacerlen=2$/;"	v
spacerlen	zpwr/scripts/zshcompgen.zsh	/^    spacerlen=2$/;"	v
spacerlen	zshcompgen.zsh	/^    spacerlen=2$/;"	v
spaces	zpwr/.tmux/powerline/lint/__init__.py	/^	spaces=spaces_spec(),$/;"	v
spaces	zpwr/.tmux/powerline/lint/__init__.py	/^	spaces=spaces_spec().optional(),$/;"	v
spaces_spec	zpwr/.tmux/powerline/lint/__init__.py	/^spaces_spec = Spec().unsigned().cmp($/;"	v
spec	mantozshcomp.py	/^    def spec(self):$/;"	m	class:Deroffer
spec	zpwr/scripts/mantozshcomp.py	/^    def spec(self):$/;"	m	class:Deroffer
specialclasses	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^specialclasses = {$/;"	v
spinner	batchRename.sh	/^        spinner="$temp${spinner%"$temp"}" # and add it to the end$/;"	v
spinner	batchRename.sh	/^    local spinner="\\|\/-"            # spinner$/;"	v
spinner	openAll.sh	/^        spinner=$temp${spinner%"$temp"} # and add it to the end$/;"	v
spinner	openAll.sh	/^    local spinner="\\|\/-"            # spinner$/;"	v
spinner	zpwr/scripts/batchRename.sh	/^        spinner="$temp${spinner%"$temp"}" # and add it to the end$/;"	v
spinner	zpwr/scripts/batchRename.sh	/^    local spinner="\\|\/-"            # spinner$/;"	v
spinner	zpwr/scripts/openAll.sh	/^        spinner=$temp${spinner%"$temp"} # and add it to the end$/;"	v
spinner	zpwr/scripts/openAll.sh	/^    local spinner="\\|\/-"            # spinner$/;"	v
splitTrim	mantozshcomp.py	/^def splitTrim(arg, comps, dash):$/;"	f
splitTrim	zpwr/scripts/mantozshcomp.py	/^def splitTrim(arg, comps, dash):$/;"	f
spotify	zpwr/.tmux/powerline/segments/common/players.py	/^	spotify = spotify_apple_script$/;"	v
spotify	zpwr/.tmux/powerline/segments/common/players.py	/^	spotify = spotify_dbus$/;"	v	class:SpotifyAppleScriptPlayerSegment
spotify	zpwr/.tmux/powerline/segments/common/players.py	/^spotify = with_docstring(spotify, spotify.__doc__.replace(_old_name, 'spotify'))$/;"	v
spotify_apple_script	zpwr/.tmux/powerline/segments/common/players.py	/^spotify_apple_script = with_docstring(SpotifyAppleScriptPlayerSegment(),$/;"	v
spotify_dbus	zpwr/.tmux/powerline/segments/common/players.py	/^spotify_dbus = with_docstring(SpotifyDbusPlayerSegment(),$/;"	v
spring_routine	boiler_gen.py	/^def spring_routine(package, name):$/;"	f
spring_routine	zpwr/scripts/boiler_gen.py	/^def spring_routine(package, name):$/;"	f
src	fdswap.sh	/^src="$1"$/;"	v
src	zpwr/scripts/fdswap.sh	/^src="$1"$/;"	v
src_dir	zpwr/.shell_aliases_functions.sh	/^        src_dir="$FORKED_DIR\/$ZPWR_REPO_NAME"$/;"	v
src_dir	zpwr/.shell_aliases_functions.sh	/^    local src_dir="$GOPATH\/src\/$pkg"$/;"	v
ssd	zpwr/.shell_aliases_functions.sh	/^    ssd() {$/;"	f
ssu	zpwr/.shell_aliases_functions.sh	/^    ssu() {$/;"	f
stack_depth	zpwr/.tmux/powerline/segments/pdb.py	/^def stack_depth(pl, segment_info, full_stack=False):$/;"	f
stale_possible_simple_keys	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^	def stale_possible_simple_keys(self):$/;"	m	class:Scanner
start	zpwr/.shell_aliases_functions.sh	/^            start=$($cmd +%s%N)$/;"	v
start	zpwr/.tmux/powerline/lib/threaded.py	/^	def start(self):$/;"	m	class:MultiRunnedThread
start	zpwr/.tmux/powerline/segments/common/sys.py	/^		def start():$/;"	m	class:.CPULoadPercentSegment
startCursor	batchRename.sh	/^startCursor() {$/;"	f
startCursor	openAll.sh	/^startCursor() {$/;"	f
startCursor	picture_finder.sh	/^startCursor() {$/;"	f
startCursor	secureDelete.sh	/^startCursor() {$/;"	f
startCursor	zpwr/scripts/batchRename.sh	/^startCursor() {$/;"	f
startCursor	zpwr/scripts/openAll.sh	/^startCursor() {$/;"	f
startCursor	zpwr/scripts/picture_finder.sh	/^startCursor() {$/;"	f
startCursor	zpwr/scripts/secureDelete.sh	/^startCursor() {$/;"	f
start_auto_restore_in_background	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^start_auto_restore_in_background() {$/;"	f
start_iterm_and_run_tmux	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^start_iterm_and_run_tmux() {$/;"	f
start_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^			start_line="0"$/;"	v
start_line	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local start_line="-$2"$/;"	v
start_spinner	zpwr/.tmux/plugins/tmux-resurrect/scripts/spinner_helpers.sh	/^start_spinner() {$/;"	f
start_terminal_and_run_tmux	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^start_terminal_and_run_tmux() {$/;"	f
start_tmux_selection	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^start_tmux_selection() {$/;"	f
start_uv_thread	zpwr/.tmux/powerline/lib/watcher/uv.py	/^def start_uv_thread():$/;"	f
startup	zpwr/.tmux/powerline/lib/threaded.py	/^	def startup(self, pl, **kwargs):$/;"	m	class:ThreadedSegment
startup	zpwr/.tmux/powerline/segments/common/sys.py	/^		def startup(**kwargs):$/;"	m	class:.CPULoadPercentSegment
stash	zpwr/.tmux/powerline/lib/vcs/git.py	/^		def stash(self):$/;"	m	class:GitRepository.Repository
stash	zpwr/.tmux/powerline/segments/common/vcs.py	/^stash = with_docstring(StashSegment(),$/;"	v
stash	zpwr/.tmux/powerline/segments/vim/__init__.py	/^stash = with_docstring(VimStashSegment(),$/;"	v
state	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local state="$1"$/;"	v
state	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^state = None$/;"	v
state_format	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^state_format() {$/;"	f
stats	zpwr/motd.sh	/^stats="$label1\\n$label2\\n$label3\\n$label4\\n$label5"$/;"	v
statsLabelColor	zpwr/motd.sh	/^statsLabelColor=33$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^	local status="$(battery_status)"$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color.sh	/^	local status="$2"$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	local status="$2"$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_color_status.sh	/^	local status=${2:-$(battery_status)}$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon.sh	/^	local status=$(battery_status)$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon.sh	/^	local status=$1$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	local status=$1$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_icon_status.sh	/^	local status=${1:-$(battery_status)}$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^	local status="$(battery_status)"$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^	local status="$(pmset -g batt)"$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_bg.sh	/^    status=$(battery_status | awk '{print $1;}')$/;"	v
status	zpwr/.tmux/plugins/tmux-battery/scripts/battery_status_fg.sh	/^    status=$(battery_status | awk '{print $1;}')$/;"	v
status	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^		status="$save_int"$/;"	v
status	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^		status="${style_wrap\/$status_wrap_string\/$status}"$/;"	v
status	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^		status="off"$/;"	v
status	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^	local status=""$/;"	v
status	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^        status="$1" \\$/;"	v
status	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def status(self, path=None):$/;"	m	class:Repository
status	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from bzrlib import (workingtree, status, library_state, trace, ui)$/;"	i
status	zpwr/.tmux/powerline/lib/vcs/git.py	/^	def status(self, path=None):$/;"	m	class:GitRepository
status	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	def status(self, path=None):$/;"	m	class:Repository
status_interpolation_string	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^status_interpolation_string="\\#{continuum_status}"$/;"	v
status_off_style_wrap_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^status_off_style_wrap_option="@continuum-status-off-wrap-style" # example value: "#[fg=yellow,bold]#{value}#[fg=white,nobold]"$/;"	v
status_on_style_wrap_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^status_on_style_wrap_option="@continuum-status-on-wrap-style"   # example value: "#[fg=green]#{value}#[fg=white]"$/;"	v
status_right_value	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^	local status_right_value="$(get_tmux_option "status-right" "")"$/;"	v
status_script	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^status_script="#($CURRENT_DIR\/scripts\/continuum_status.sh)"$/;"	v
status_wrap_string	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^status_wrap_string="\\#{value}"$/;"	v
statuses	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^	statuses = {$/;"	v	class:Repository
statusline	zpwr/.tmux/powerline/vim.py	/^	def statusline(self, window_id):$/;"	m	class:VimPowerline
stop_spinner	zpwr/.tmux/plugins/tmux-resurrect/scripts/spinner_helpers.sh	/^stop_spinner() {$/;"	f
str	zpwr/motd.sh	/^    str=" $str"$/;"	v
str	zpwr/motd.sh	/^    str="$str "$/;"	v
str	zpwr/motd.sh	/^  local str="$1"$/;"	v
str_at	mantozshcomp.py	/^    def str_at(self, idx):$/;"	m	class:Deroffer
str_at	zpwr/scripts/mantozshcomp.py	/^    def str_at(self, idx):$/;"	m	class:Deroffer
str_eq	mantozshcomp.py	/^    def str_eq(offset, other, len):$/;"	m	class:Deroffer
str_eq	zpwr/scripts/mantozshcomp.py	/^    def str_eq(offset, other, len):$/;"	m	class:Deroffer
str_to_bytes	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def str_to_bytes(s):$/;"	f	function:python_to_vim
strategy	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local strategy="$(_get_command_strategy "$pane_full_command")"$/;"	v
strategy_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			local strategy_command="$($strategy_file "$pane_full_command" "$dir")"$/;"	v
strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^				local strategy_file="$(_get_strategy_file "$inline_strategy")"$/;"	v
strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^			local strategy_file="$(_get_strategy_file "$pane_full_command")"$/;"	v
strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^		local strategy_file="$(_get_strategy_file "$pane_full_command")"$/;"	v
strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local strategy_file="$(_save_command_strategy_file)"$/;"	v
strategy_file	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local strategy_file="$CURRENT_DIR\/..\/save_command_strategies\/${save_command_strategy}.sh"$/;"	v
string	mantozshcomp.py	/^import string$/;"	i
string	openAll.sh	/^    string=""$/;"	v
string	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local string="$1"$/;"	v
string	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local string="$1"$/;"	v
string	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local string="$1"$/;"	v
string	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from powerline.lib.unicode import string$/;"	i
string	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^def string(s):$/;"	f
string	zpwr/.tmux/powerline/ipython.py	/^from powerline.lib.unicode import string$/;"	i
string	zpwr/.tmux/powerline/lib/unicode.py	/^	def string(s):$/;"	f
string	zpwr/.tmux/powerline/lib/unicode.py	/^	def string(s):$/;"	m	class:FailedUnicode
string	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib.unicode import string, unicode$/;"	i
string	zpwr/scripts/mantozshcomp.py	/^import string$/;"	i
string	zpwr/scripts/openAll.sh	/^    string=""$/;"	v
string_path	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	local string_path="$(tmux start-server\\; show-environment -g TMUX_PLUGIN_MANAGER_PATH | cut -f2 -d=)\/"$/;"	v
strtrans	zpwr/.tmux/powerline/lint/markedjson/error.py	/^def strtrans(s):$/;"	f
struct	zpwr/.tmux/powerline/lib/inotify.py	/^import struct$/;"	i
strwidth	zpwr/.tmux/powerline/renderer.py	/^	strwidth = lambda self, s: ($/;"	v	class:Renderer
strwidth	zpwr/.tmux/powerline/renderers/vim.py	/^			def strwidth(self, string):$/;"	f	function:VimRenderer.get_theme
strwidth	zpwr/.tmux/powerline/renderers/vim.py	/^			def strwidth(string):$/;"	f	function:VimRenderer.get_theme
strwidth_ucs_2	zpwr/.tmux/powerline/lib/unicode.py	/^def strwidth_ucs_2(width_data, string):$/;"	f
strwidth_ucs_2	zpwr/.tmux/powerline/renderer.py	/^from powerline.lib.unicode import unichr, strwidth_ucs_2, strwidth_ucs_4$/;"	i
strwidth_ucs_4	zpwr/.tmux/powerline/lib/unicode.py	/^def strwidth_ucs_4(width_data, string):$/;"	f
strwidth_ucs_4	zpwr/.tmux/powerline/renderer.py	/^from powerline.lib.unicode import unichr, strwidth_ucs_2, strwidth_ucs_4$/;"	i
style_wrap	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^		style_wrap="$(get_tmux_option "$status_off_style_wrap_option" "")"$/;"	v
style_wrap	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_status.sh	/^		style_wrap="$(get_tmux_option "$status_on_style_wrap_option" "")"$/;"	v
styles_dir	zpwr/.shell_aliases_functions.sh	/^    styles_dir='\/usr\/local\/opt\/httpie\/libexec\/lib\/python3.7\/site-packages\/pygments\/styles\/'$/;"	v
subprocess	mantozshcomp.py	/^    import subprocess, os$/;"	i
subprocess	zpwr/.tmux/powerline/bindings/config.py	/^import subprocess$/;"	i
subprocess	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^import subprocess$/;"	i
subprocess	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^import subprocess$/;"	i
subprocess	zpwr/scripts/mantozshcomp.py	/^    import subprocess, os$/;"	i
subsegment_spec	zpwr/.tmux/powerline/lint/__init__.py	/^subsegment_spec = segment_spec_base().update($/;"	v
suc	zpwr/.shell_aliases_functions.sh	/^suc(){$/;"	f
sum	listAllCommands.sh	/^sum=0$/;"	v
sum	sortedArrayCounter.sh	/^sum=0$/;"	v
sum	zpwr/scripts/listAllCommands.sh	/^sum=0$/;"	v
sum	zpwr/scripts/sortedArrayCounter.sh	/^sum=0$/;"	v
summarizeSizes	directoryContentsSize.sh	/^summarizeSizes() {$/;"	f
summarizeSizes	zpwr/scripts/directoryContentsSize.sh	/^summarizeSizes() {$/;"	f
sunFlower	zpwr/.vim/colors/rakr-light.vim	/^  let sunFlower   = "f1c40f"$/;"	v
supported_tmux_version_ok	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	zpwr/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	zpwr/.tmux/plugins/tpm/tpm	/^supported_tmux_version_ok() {$/;"	f
supported_version	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local supported_version="$2"$/;"	v
supported_version	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local supported_version="$2"$/;"	v
supported_version	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local supported_version="$2"$/;"	v
supported_version_int	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local supported_version_int="$(get_digits_from_string "$VERSION")"$/;"	v
supported_version_int	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local supported_version_int="$(get_digits_from_string "$VERSION")"$/;"	v
supported_version_int	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local supported_version_int="$(get_digits_from_string "$VERSION")"$/;"	v
surrogate_pair_to_character	zpwr/.tmux/powerline/lib/unicode.py	/^def surrogate_pair_to_character(high, low):$/;"	f
surrogate_pair_to_character	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from powerline.lib.unicode import unicode, unichr, surrogate_pair_to_character$/;"	i
svc	tailZOU.sh	/^svc=(ufw ovpn zabbix-agent)$/;"	v
svc	zpwr/scripts/tailZOU.sh	/^svc=(ufw ovpn zabbix-agent)$/;"	v
syntastic	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^def syntastic(pl, err_format='ERR:  {first_line} ({num}) ', warn_format='WARN:  {first_line} ({num}) '):$/;"	f
syntax_cmd	zpwr/.vim/colors/delek.vim	/^  let syntax_cmd = "enable"$/;"	v
sys	boiler_gen.py	/^import sys$/;"	i
sys	help2comp.py	/^import sys$/;"	i
sys	mantozshcomp.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/__init__.py	/^		import sys$/;"	i
sys	zpwr/.tmux/powerline/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/config.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/commands/main.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/debug.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/encoding.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/inotify.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/monotonic.py	/^	import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/shell.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/unicode.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lib/watcher/tree.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lint/imp.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/lint/markedjson/error.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/pdb.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/renderer.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/renderers/pdb.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/renderers/vim.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/segments/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/segments/common/bat.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/segments/common/players.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/segments/vim/__init__.py	/^import sys$/;"	i
sys	zpwr/.tmux/powerline/vim.py	/^import sys$/;"	i
sys	zpwr/scripts/boiler_gen.py	/^import sys$/;"	i
sys	zpwr/scripts/help2comp.py	/^import sys$/;"	i
sys	zpwr/scripts/mantozshcomp.py	/^import sys$/;"	i
system_load	zpwr/.tmux/powerline/segments/common/sys.py	/^def system_load(pl, format='{avg:.1f}', threshold_good=1, threshold_bad=2,$/;"	f
systemd_service_name	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^systemd_service_name="tmux.service"$/;"	v
systemd_tmux_is_enabled	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^systemd_tmux_is_enabled() {$/;"	f
systemd_tmux_server_start_cmd	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local systemd_tmux_server_start_cmd="$(get_tmux_option "${systemd_tmux_server_start_cmd_option}" "${systemd_tmux_server_start_cmd_default}" )"$/;"	v
systemd_tmux_server_start_cmd_default	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^systemd_tmux_server_start_cmd_default="new-session -d"$/;"	v
systemd_tmux_server_start_cmd_option	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^systemd_tmux_server_start_cmd_option="@continuum-systemd-start-cmd"$/;"	v
systemd_unit_file	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local systemd_unit_file=$(template "${tmux_start_script_path}" "${options}")$/;"	v
systemd_unit_file_path	zpwr/.tmux/plugins/tmux-continuum/scripts/variables.sh	/^systemd_unit_file_path="$HOME\/.config\/systemd\/user\/${systemd_service_name}"$/;"	v
tab	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def tab(pl, segment_info, end=False):$/;"	f
tab_modified_indicator	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def tab_modified_indicator(pl, segment_info, text='+'):$/;"	f
tabline	zpwr/.tmux/powerline/vim.py	/^	def tabline(self):$/;"	m	class:VimPowerline
tablister	zpwr/.tmux/powerline/listers/vim.py	/^def tablister(pl, segment_info, **kwargs):$/;"	f
tabnr	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def tabnr(pl, segment_info, show_current=True):$/;"	f
tabpage_updated_segment_info	zpwr/.tmux/powerline/listers/vim.py	/^def tabpage_updated_segment_info(segment_info, tabpage):$/;"	f
tac	zpwr/.shell_aliases_functions.sh	/^tac(){$/;"	f
tag_cache	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^tag_cache = {}$/;"	v
tail	shebangChanger.sh	/^        tail=$(cat "$file")$/;"	v
tail	shebangChanger.sh	/^        tail=$(sed -n "$lineCounter,$"p "$file")$/;"	v
tail	zpwr/scripts/shebangChanger.sh	/^        tail=$(cat "$file")$/;"	v
tail	zpwr/scripts/shebangChanger.sh	/^        tail=$(sed -n "$lineCounter,$"p "$file")$/;"	v
tailVersion	colorLogger.sh	/^tailVersion=tail$/;"	v
tailVersion	zpwr/scripts/colorLogger.sh	/^tailVersion=tail$/;"	v
tailufw	zpwr/.shell_aliases_functions.sh	/^    tailufw(){$/;"	f
tap	bridgeDown.sh	/^tap="tap0"$/;"	v
tap	bridgeUp.sh	/^tap="tap0"$/;"	v
tap	zpwr/scripts/bridgeDown.sh	/^tap="tap0"$/;"	v
tap	zpwr/scripts/bridgeUp.sh	/^tap="tap0"$/;"	v
tarbellDirectory	tgzLocalInstaller.sh	/^tarbellDirectory="$1"$/;"	v
tarbellDirectory	zpwr/scripts/tgzLocalInstaller.sh	/^tarbellDirectory="$1"$/;"	v
target	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^	local target="$1"$/;"	v
temp	batchRename.sh	/^        local temp=${spinner#?}           # remove first character from $spinner$/;"	v
temp	openAll.sh	/^        local temp=${spinner#?}         # remove first character from $spinner$/;"	v
temp	zpwr/scripts/batchRename.sh	/^        local temp=${spinner#?}           # remove first character from $spinner$/;"	v
temp	zpwr/scripts/openAll.sh	/^        local temp=${spinner#?}         # remove first character from $spinner$/;"	v
tempFile	zpwr/.shell_aliases_functions.sh	/^            tempFile="$HOME\/__test.ps"$/;"	v
tempFile	zpwr/.shell_aliases_functions.sh	/^        tempFile="$HOME\/__test.ps"$/;"	v
temp_conversions	zpwr/.tmux/powerline/segments/common/wthr.py	/^temp_conversions = {$/;"	v
temp_units	zpwr/.tmux/powerline/segments/common/wthr.py	/^temp_units = {$/;"	v
template	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^template() {$/;"	f
template	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^template() {$/;"	f
term_color_spec	zpwr/.tmux/powerline/lint/__init__.py	/^term_color_spec = Spec().unsigned().cmp('le', 255).copy$/;"	v
term_escape_style	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	term_escape_style = 'auto'$/;"	v	class:ShellRenderer
term_truecolor	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	term_truecolor = False$/;"	v	class:ShellRenderer
test_custom_tpm_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_custom_tpm_path() {$/;"	f
test_default_tpm_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_default_tpm_path() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_script() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding() {$/;"	f
test_multiple_plugins_installation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_script() {$/;"	f
test_multiple_plugins_installation_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_tmux_key_binding() {$/;"	f
test_non_existing_plugin_installation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_script() {$/;"	f
test_non_existing_plugin_installation_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_custom_dir_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_script() {$/;"	f
test_plugin_installation_custom_dir_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding_set_option	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding_set_option() {$/;"	f
test_plugin_sourcing	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_plugin_sourcing() {$/;"	f
test_plugin_uninstallation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_script() {$/;"	f
test_plugin_uninstallation_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_tmux_key_binding() {$/;"	f
test_plugin_update_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_script() {$/;"	f
test_plugin_update_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_script() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_sourced_file_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_script() {$/;"	f
test_plugins_installation_from_sourced_file_via_tmux_key_binding	zpwr/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_tmux_key_binding() {$/;"	f
test_unsuccessful_plugin_uninstallation_via_script	zpwr/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_unsuccessful_plugin_uninstallation_via_script() {$/;"	f
text	mantozshcomp.py	/^    def text(self):$/;"	m	class:Deroffer
text	zpwr/scripts/mantozshcomp.py	/^    def text(self):$/;"	m	class:Deroffer
text_arg	mantozshcomp.py	/^    def text_arg(self):$/;"	m	class:Deroffer
text_arg	zpwr/scripts/mantozshcomp.py	/^    def text_arg(self):$/;"	m	class:Deroffer
text_arg2	mantozshcomp.py	/^    def text_arg2(self):$/;"	m	class:Deroffer
text_arg2	zpwr/scripts/mantozshcomp.py	/^    def text_arg2(self):$/;"	m	class:Deroffer
theme	zpwr/.tmux/powerline/lint/__init__.py	/^	theme=ext_theme_spec(),$/;"	v
theme_override	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def theme_override(self):$/;"	m	class:Args
theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^theme_spec = common_theme_spec().update($/;"	v
threaded_args_specs	zpwr/.tmux/powerline/lint/checks.py	/^threaded_args_specs = {$/;"	v
time	myWatchMaintainEscapes.sh	/^    time="$2"$/;"	v
time	myWatchMaintainEscapes.sh	/^    time=1$/;"	v
time	mywatch.sh	/^    time="$2"$/;"	v
time	mywatch.sh	/^    time=1$/;"	v
time	zpwr/.shell_aliases_functions.sh	/^    time=$1$/;"	v
time	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^import time$/;"	i
time	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^import time$/;"	i
time	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^import time$/;"	i
time	zpwr/.tmux/powerline/segments/common/sys.py	/^	from time import time$/;"	i
time	zpwr/.vim/colors/xmaslights.vim	/^import time$/;"	m
time	zpwr/scripts/myWatchMaintainEscapes.sh	/^    time="$2"$/;"	v
time	zpwr/scripts/myWatchMaintainEscapes.sh	/^    time=1$/;"	v
time	zpwr/scripts/mywatch.sh	/^    time="$2"$/;"	v
time	zpwr/scripts/mywatch.sh	/^    time=1$/;"	v
timeToSleep	myWatchNoBlink.sh	/^    timeToSleep=$2$/;"	v
timeToSleep	myWatchNoBlink.sh	/^    timeToSleep=0.5$/;"	v
timeToSleep	myWatchNoBlinkColorized.sh	/^    timeToSleep=$2$/;"	v
timeToSleep	myWatchNoBlinkColorized.sh	/^    timeToSleep=0.5$/;"	v
timeToSleep	zpwr/scripts/myWatchNoBlink.sh	/^    timeToSleep=$2$/;"	v
timeToSleep	zpwr/scripts/myWatchNoBlink.sh	/^    timeToSleep=0.5$/;"	v
timeToSleep	zpwr/scripts/myWatchNoBlinkColorized.sh	/^    timeToSleep=$2$/;"	v
timeToSleep	zpwr/scripts/myWatchNoBlinkColorized.sh	/^    timeToSleep=0.5$/;"	v
timebase	zpwr/.tmux/powerline/lib/monotonic.py	/^			timebase = mach_timebase_info()$/;"	v
timediff	autoUpdater.sh	/^        timediff=$((newtime - oldtime))$/;"	v
timediff	zpwr/scripts/autoUpdater.sh	/^        timediff=$((newtime - oldtime))$/;"	v
timer	zpwr/.shell_aliases_functions.sh	/^timer() {$/;"	f
timer_setup	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def timer_setup(self):$/;"	m	class:PowerlineTextBox
timespec	zpwr/.tmux/powerline/lib/monotonic.py	/^			class timespec(ctypes.Structure):$/;"	c
timestamp	zpwr/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^		local timestamp="$(date +"%Y%m%dT%H%M%S")"$/;"	v
title	zpwr/.shell_aliases_functions.sh	/^        title="$1"$/;"	v
tlist_pyrex_settings	zpwr/.vim/bundle/taglist_46/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
tlist_pyrex_settings	zpwr/taglist_46/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
tmuxPowerlineDir	zpwr/pip_install.sh	/^        tmuxPowerlineDir="$HOME\/.config\/powerline\/themes\/tmux"$/;"	v
tmuxPowerlineDir	zpwr/pip_install.sh	/^    tmuxPowerlineDir="$HOME\/.config\/powerline\/themes\/tmux"$/;"	v
tmuxPowerlineDir	zpwr/pip_install.sh	/^    tmuxPowerlineDir=$HOME\/.config\/powerline\/themes\/tmux$/;"	v
tmuxPowerlineDir	zpwr/plugins_install.sh	/^tmuxPowerlineDir="$HOME\/.config\/powerline\/themes\/tmux"$/;"	v
tmux_default_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^tmux_default_command() {$/;"	f
tmux_echo	zpwr/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^tmux_echo() {$/;"	f
tmux_escape	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^	tmux_escape = False$/;"	v	class:ShellRenderer
tmux_is_at_least	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^tmux_is_at_least() {$/;"	f
tmux_option	zpwr/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux	/^tmux_option() {$/;"	f
tmux_setup	zpwr/.tmux/powerline/bindings/config.py	/^def tmux_setup(pl, args):$/;"	f
tmux_socket	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^tmux_socket() {$/;"	f
tmux_start_script	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local tmux_start_script="$1"$/;"	v
tmux_start_script	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local tmux_start_script="$1"$/;"	v
tmux_start_script_path	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^	local tmux_start_script_path="${CURRENT_DIR}\/osx_${iterm_or_terminal_value}_start_tmux.sh"$/;"	v
tmux_start_script_path	zpwr/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/systemd_enable.sh	/^	local tmux_start_script_path="${CURRENT_DIR}\/linux_start_tmux.sh"$/;"	v
tmux_start_time	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^	tmux_start_time="$(tmux display-message -p -F '#{start_time}')"$/;"	v
tmux_version	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^tmux_version="$(tmux -V | cut -d ' ' -f 2)"$/;"	v
tmux_version_int	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmux_version_int	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmux_version_int	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmux_version_string	zpwr/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^	local tmux_version_string=$(tmux -V)$/;"	v
tmux_version_string	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^	local tmux_version_string=$(tmux -V)$/;"	v
tmux_version_string	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^	local tmux_version_string=$(tmux -V)$/;"	v
to	zpwr/.shell_aliases_functions.sh	/^to(){$/;"	f
to_string	zpwr/.tmux/powerline/lint/markedjson/error.py	/^	def to_string(self, indent=0, head_text='in ', add_snippet=True):$/;"	m	class:Mark
toggle_window_zoom	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^toggle_window_zoom() {$/;"	f
tohex	zpwr/.vim/colors/xterm16.vim	/^function s:tohex( n)$/;"	f
tointiter	zpwr/.tmux/powerline/lib/unicode.py	/^	def tointiter(s):$/;"	f
tointiter	zpwr/.tmux/powerline/lib/unicode.py	/^	def tointiter(s):$/;"	f	function:u
tokens	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from powerline.lint.markedjson import tokens$/;"	i
tokens	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from powerline.lint.markedjson import tokens$/;"	i
top_colorscheme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^top_colorscheme_spec = (Spec($/;"	v
top_theme	zpwr/.tmux/powerline/lint/__init__.py	/^	top_theme=top_theme_spec().optional(),$/;"	v
top_theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^top_theme_spec = Spec().type(unicode).func(check_top_theme).copy$/;"	v
top_theme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^top_theme_spec = common_theme_spec().update($/;"	v
torip	zpwr/.shell_aliases_functions.sh	/^torip(){$/;"	f
toriprenew	zpwr/.shell_aliases_functions.sh	/^toriprenew() {$/;"	f
tot	zpwr/.shell_aliases_functions.sh	/^    tot=$((totend-totstart))$/;"	v
total	oldCounter.sh	/^    total=$(expr $(ls -F $1 | grep ".*[*@]" | wc -l) + $total)$/;"	v
total	oldCounter.sh	/^total=0$/;"	v
total	uploadWebPi.sh	/^total=$#$/;"	v
total	zpwr/.shell_aliases_functions.sh	/^    total=0$/;"	v
total	zpwr/scripts/oldCounter.sh	/^    total=$(expr $(ls -F $1 | grep ".*[*@]" | wc -l) + $total)$/;"	v
total	zpwr/scripts/oldCounter.sh	/^total=0$/;"	v
total	zpwr/scripts/uploadWebPi.sh	/^total=$#$/;"	v
totalLines	zpwr/.shell_aliases_functions.sh	/^totalLines(){$/;"	f
total_number_of_panes	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local total_number_of_panes="$(tmux list-panes -a | wc -l | sed 's\/ \/\/g')"$/;"	v
totend	zpwr/.shell_aliases_functions.sh	/^    totend=$($cmd +%s)$/;"	v
totstart	zpwr/.shell_aliases_functions.sh	/^    totstart=$($cmd +%s)$/;"	v
tpm_path	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_path() {$/;"	f
tpm_path	zpwr/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^	local tpm_path="$(tmux start-server\\; show-environment -g TMUX_PLUGIN_MANAGER_PATH | cut -f2 -d=)"$/;"	v
tpm_path_set	zpwr/.tmux/plugins/tpm/tpm	/^tpm_path_set() {$/;"	f
tpm_plugins_list_helper	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_plugins_list_helper() {$/;"	f
tpm_plugins_variable_name	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_plugins_variable_name="@tpm_plugins"$/;"	v
trace	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from bzrlib import (workingtree, status, library_state, trace, ui)$/;"	i
traceback	mantozshcomp.py	/^import traceback$/;"	i
traceback	zpwr/scripts/mantozshcomp.py	/^import traceback$/;"	i
trailing_whitespace	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def trailing_whitespace(pl, segment_info):$/;"	f
trailing_whitespace_cache	zpwr/.tmux/powerline/segments/vim/__init__.py	/^trailing_whitespace_cache = None$/;"	v
transferFile	transfer.sh	/^transferFile="$1"$/;"	v
transferFile	zpwr/scripts/transfer.sh	/^transferFile="$1"$/;"	v
transfer_calls	zpwr/.tmux/powerline/lib/config.py	/^	def transfer_calls(self, watcher):$/;"	m	class:DeferredWatcher
translate_color	zpwr/.vim/colors/coffee.vim	/^function! s:translate_color(number)$/;"	f
translate_np	zpwr/.tmux/powerline/renderer.py	/^translate_np = ($/;"	v
transparency	zpwr/.vim/colors/vimbrant.vim	/^let transparency="true"$/;"	v
tree_status	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^def tree_status(repo, pl):$/;"	f
tree_status	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.lib.vcs import guess, tree_status$/;"	i
trim_groff	mantozshcomp.py	/^    def trim_groff(self, line):$/;"	m	class:TypeDarwinManParser
trim_groff	zpwr/scripts/mantozshcomp.py	/^    def trim_groff(self, line):$/;"	m	class:TypeDarwinManParser
triplejellyPHP	zpwr/.vim/colors/triplejelly.vim	/^augroup triplejellyPHP$/;"	a
true_color_spec	zpwr/.tmux/powerline/lint/__init__.py	/^true_color_spec = Spec().re($/;"	v
tspec	zpwr/.tmux/powerline/lib/monotonic.py	/^			tspec = timespec()$/;"	v
tuple	zpwr/.tmux/powerline/lint/spec.py	/^	def tuple(self, *specs):$/;"	m	class:Spec
turnOffDebugging	zpwr/common.sh	/^turnOffDebugging(){$/;"	f
turnOnDebugging	zpwr/common.sh	/^turnOnDebugging(){$/;"	f
turquoise	zpwr/.vim/colors/rakr-light.vim	/^  let turquoise   = "07c5ac"$/;"	v
tutorialDir	macOnly/tutorialConfigUpdater.sh	/^tutorialDir="$HOME\/Documents\/tutorialsRepo"$/;"	v
tutorialDir	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^tutorialDir="$HOME\/Documents\/tutorialsRepo"$/;"	v
type	zpwr/.tmux/powerline/lint/__init__.py	/^	type=Spec().oneof(set((key for key in type_keys if key != 'segment_list'))).optional(),$/;"	v
type	zpwr/.tmux/powerline/lint/__init__.py	/^	type=Spec().oneof(type_keys).optional(),$/;"	v
type	zpwr/.tmux/powerline/lint/spec.py	/^	def type(self, *args):$/;"	m	class:Spec
type_keys	zpwr/.tmux/powerline/lint/checks.py	/^type_keys = {$/;"	v
types	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^import types$/;"	i
u	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.unicode import unicode, u$/;"	i
u	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.unicode import u, unicode$/;"	i
u	zpwr/.tmux/powerline/lib/unicode.py	/^def u(s):$/;"	f
u	zpwr/.tmux/powerline/theme.py	/^from powerline.lib.unicode import u, safe_unicode$/;"	i
u	zpwr/.tmux/powerline/vim.py	/^from powerline.lib.unicode import u$/;"	i
ubaryd_tex	zpwr/.vim/colors/ubaryd.vim	/^augroup ubaryd_tex$/;"	a
ui	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from bzrlib import (workingtree, status, library_state, trace, ui)$/;"	i
under	zpwr/.shell_aliases_functions.sh	/^    under='\\x1b[0;34m'$/;"	v
underline_fgbg	zpwr/.vim/colors/detailed.vim	/^fun! s:underline_fgbg(group, fg, bg)$/;"	f
unichr	zpwr/.tmux/powerline/lib/unicode.py	/^	def unichr(ch):$/;"	f
unichr	zpwr/.tmux/powerline/lib/unicode.py	/^	from __builtin__ import unichr$/;"	i
unichr	zpwr/.tmux/powerline/lib/unicode.py	/^	unichr = chr$/;"	v
unichr	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from powerline.lib.unicode import unicode, unichr, surrogate_pair_to_character$/;"	i
unichr	zpwr/.tmux/powerline/renderer.py	/^from powerline.lib.unicode import unichr, strwidth_ucs_2, strwidth_ucs_4$/;"	i
unichr	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.lib.unicode import unichr, register_strwidth_error$/;"	i
unicode	zpwr/.tmux/powerline/__init__.py	/^from powerline.lib.unicode import unicode, safe_unicode, FailedUnicode$/;"	i
unicode	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from powerline.lib.unicode import unicode, u$/;"	i
unicode	zpwr/.tmux/powerline/colorscheme.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/commands/main.py	/^from powerline.lib.unicode import u, unicode$/;"	i
unicode	zpwr/.tmux/powerline/lib/unicode.py	/^	from __builtin__ import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lib/unicode.py	/^	unicode = str$/;"	v
unicode	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/checks.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/context.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from powerline.lib.unicode import unicode, unichr, surrogate_pair_to_character$/;"	i
unicode	zpwr/.tmux/powerline/lint/selfcheck.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/lint/spec.py	/^from powerline.lib.unicode import unicode$/;"	i
unicode	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib.unicode import string, unicode$/;"	i
unicode_eval	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def unicode_eval(expr):$/;"	f	function:python_to_vim
unicode_literals	zpwr/.tmux/powerline/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/awesome/powerline-awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/i3/powerline-i3.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/ipython/pre_0_11.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/pdb/__main__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/tmux/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/wm/awesome.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/colorscheme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/config.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/debug.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/dict.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/encoding.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/memoize.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/monotonic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/overrides.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/path.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/threaded.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/unicode.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/url.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/vcs/git.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/vcs/mercurial.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/watcher/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/watcher/stat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/watcher/tree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lib/watcher/uv.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/checks.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/context.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/imp.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/inspect.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/composer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/error.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/events.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/loader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/nodes.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/parser.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/scanner.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/markedjson/tokens.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/selfcheck.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/lint/spec.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/listers/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/listers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/listers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/vim/plugin/gundo.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/matchers/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderer.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/i3bar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/ipython/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/ipython/pre_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/ipython/since_5.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/lemonbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/pango_markup.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/bash.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/ksh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/rcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/readline.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/tcsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/shell/zsh.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/renderers/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segment.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/bat.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/env.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/mail.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/net.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/players.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/sys.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/time.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/vcs.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/common/wthr.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/i3wm.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/ipython.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/pdb.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/tmux.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/__init__.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/selectors/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/shell.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/theme.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_literals	zpwr/.tmux/powerline/vim.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unit_list	zpwr/.tmux/powerline/lib/humanize_bytes.py	/^unit_list = tuple(zip(['', 'k', 'M', 'G', 'T', 'P'], [0, 0, 1, 2, 2, 2]))$/;"	v
unknown_msg	zpwr/.tmux/powerline/lint/spec.py	/^	def unknown_msg(self, msgfunc):$/;"	m	class:Spec
unknown_spec	zpwr/.tmux/powerline/lint/spec.py	/^	def unknown_spec(self, keyfunc, spec):$/;"	m	class:Spec
unload_ipython_extension	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^def unload_ipython_extension(ip):$/;"	f
unquote_double_quotes	mantozshcomp.py	/^def unquote_double_quotes(data):$/;"	f
unquote_double_quotes	zpwr/scripts/mantozshcomp.py	/^def unquote_double_quotes(data):$/;"	f
unquote_single_quotes	mantozshcomp.py	/^def unquote_single_quotes(data):$/;"	f
unquote_single_quotes	zpwr/scripts/mantozshcomp.py	/^def unquote_single_quotes(data):$/;"	f
unregister_functions	zpwr/.tmux/powerline/lib/config.py	/^	def unregister_functions(self, removed_functions):$/;"	m	class:ConfigLoader
unregister_missing	zpwr/.tmux/powerline/lib/config.py	/^	def unregister_missing(self, removed_functions):$/;"	m	class:ConfigLoader
unsigned	zpwr/.tmux/powerline/lint/spec.py	/^	def unsigned(self, msg_func=None):$/;"	m	class:Spec
unsupported_version_message	zpwr/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
unsupported_version_message	zpwr/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
unwatch	zpwr/.tmux/powerline/lib/config.py	/^	def unwatch(self, *args, **kwargs):$/;"	m	class:DeferredWatcher
unwatch	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def unwatch(self, path):$/;"	m	class:INotifyFileWatcher
unwatch	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def unwatch(self, path):$/;"	m	class:StatFileWatcher
unwatch	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def unwatch(self, path):$/;"	m	class:UvWatcher
update	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update() {$/;"	f
update	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	def update(evt):$/;"	f
update	zpwr/.tmux/powerline/bindings/lemonbar/powerline-lemonbar.py	/^	def update(evt):$/;"	f
update	zpwr/.tmux/powerline/bindings/qtile/widget.py	/^	def update(self):$/;"	m	class:PowerlineTextBox
update	zpwr/.tmux/powerline/lib/config.py	/^	def update(self):$/;"	m	class:ConfigLoader
update	zpwr/.tmux/powerline/lib/threaded.py	/^	def update(self, old_update_value):$/;"	m	class:KwThreadedSegment
update	zpwr/.tmux/powerline/lint/markedjson/markedvalue.py	/^	def update(self, *args, **kwargs):$/;"	m	class:MarkedDict
update	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def update(self, length):$/;"	m	class:Reader
update	zpwr/.tmux/powerline/lint/spec.py	/^	def update(self, **keys):$/;"	m	class:Spec
update	zpwr/.tmux/powerline/segments/common/net.py	/^	def update(self, old_ip):$/;"	m	class:ExternalIpSegment
update	zpwr/.tmux/powerline/segments/common/sys.py	/^		def update(self, old_cpu):$/;"	m	class:.CPULoadPercentSegment
update	zpwr/install.sh	/^update(){$/;"	f
updatePI	updatePi.sh	/^updatePI() {$/;"	f
updatePI	updater.sh	/^updatePI() { #-t to force pseudoterminal allocation for interactive programs on remote host$/;"	f
updatePI	updaterNoPip.sh	/^updatePI() { #-t to force pseudoterminal allocation for interactive programs on remote host$/;"	f
updatePI	zpwr/scripts/updatePi.sh	/^updatePI() {$/;"	f
updatePI	zpwr/scripts/updater.sh	/^updatePI() { #-t to force pseudoterminal allocation for interactive programs on remote host$/;"	f
updatePI	zpwr/scripts/updaterNoPip.sh	/^updatePI() { #-t to force pseudoterminal allocation for interactive programs on remote host$/;"	f
update_all	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_all() {$/;"	f
update_first	zpwr/.tmux/powerline/lib/threaded.py	/^	update_first = True$/;"	v	class:KwThreadedSegment
update_first	zpwr/.tmux/powerline/lib/threaded.py	/^	update_first = True$/;"	v	class:ThreadedSegment
update_key	zpwr/.tmux/plugins/tpm/tpm	/^	local update_key="$(get_tmux_option "$update_key_option" "$default_update_key")"$/;"	v
update_key_option	zpwr/.tmux/plugins/tpm/scripts/variables.sh	/^update_key_option="@tpm-update"$/;"	v
update_maps	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^	def update_maps(self, keypath, directory, dirstate_file, ignore_file_name, extra_ignore_files):$/;"	m	class:FileStatusCache
update_one	zpwr/.tmux/powerline/lib/threaded.py	/^	def update_one(self, crashed, updates, key):$/;"	m	class:KwThreadedSegment
update_plugin_prompt	zpwr/.tmux/plugins/tpm/bindings/update_plugins	/^update_plugin_prompt() {$/;"	f
update_plugins	zpwr/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_plugins() {$/;"	f
update_pointer	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def update_pointer(self, length):$/;"	m	class:Reader
update_raw	zpwr/.tmux/powerline/lint/markedjson/reader.py	/^	def update_raw(self, size=-1):$/;"	m	class:Reader
update_renderer	zpwr/.tmux/powerline/__init__.py	/^	def update_renderer(self):$/;"	m	class:Powerline
update_tmux_option	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^update_tmux_option() {$/;"	f
update_tmux_option	zpwr/.tmux/plugins/tmux-continuum/continuum.tmux	/^update_tmux_option() {$/;"	f
updated	zpwr/.tmux/powerline/lib/dict.py	/^def updated(d, *args, **kwargs):$/;"	f
updated	zpwr/.tmux/powerline/listers/i3wm.py	/^from powerline.lib.dict import updated$/;"	i
updated_with_config	zpwr/.tmux/powerline/lint/__init__.py	/^def updated_with_config(d):$/;"	f
upgrade	zpwr/install.sh	/^upgrade(){$/;"	f
upload	zpwr/.shell_aliases_functions.sh	/^upload(){$/;"	f
upower_battery_remaining_time	zpwr/.tmux/plugins/tmux-battery/scripts/battery_remain.sh	/^upower_battery_remaining_time() {$/;"	f
uptime	zpwr/.tmux/powerline/segments/common/sys.py	/^def uptime(pl, days_format='{days:d}d', hours_format=' {hours:d}h', minutes_format=' {minutes:d}m', seconds_format=' {seconds:d}s', shorten_len=3):$/;"	f
uptime	zpwr/motd.sh	/^uptime="$(sec2time $(cut -d "." -f 1 \/proc\/uptime))"$/;"	v
uptime	zpwr/motd.sh	/^uptime="$uptime ($(date -d "@"$(grep btime \/proc\/stat | cut -d " " -f 2) +"%d-%m-%Y %H:%M:%S"))"$/;"	v
url	zpwr/.shell_aliases_functions.sh	/^            url="https:\/\/google.com\/search?q=$out"$/;"	v
url	zpwr/.shell_aliases_functions.sh	/^    url="$(echo $1 | sed 's@[^\/]*\/\/\\([^@]*@\\)\\?\\([^:\/]*.*\\)@\\2@')"$/;"	v
urlSafe	zpwr/.shell_aliases_functions.sh	/^urlSafe(){$/;"	f
urllib_read	zpwr/.tmux/powerline/lib/url.py	/^def urllib_read(url):$/;"	f
urllib_read	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.lib.url import urllib_read$/;"	i
urllib_read	zpwr/.tmux/powerline/segments/common/wthr.py	/^from powerline.lib.url import urllib_read, urllib_urlencode$/;"	i
urllib_urlencode	zpwr/.tmux/powerline/lib/url.py	/^	from urllib import urlencode as urllib_urlencode  # NOQA$/;"	i
urllib_urlencode	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.parse import urlencode as urllib_urlencode  # NOQA$/;"	i
urllib_urlencode	zpwr/.tmux/powerline/segments/common/wthr.py	/^from powerline.lib.url import urllib_read, urllib_urlencode$/;"	i
urlopen	zpwr/.tmux/powerline/lib/url.py	/^	from urllib.request import urlopen  # NOQA$/;"	i
urlopen	zpwr/.tmux/powerline/lib/url.py	/^	from urllib2 import urlopen, HTTPError  # NOQA$/;"	i
usage	CPU_Stresser.sh	/^usage() {$/;"	f
usage	directoryContentsSize.sh	/^usage() {$/;"	f
usage	duplicateLineDeleter.sh	/^usage() {$/;"	f
usage	fdswap.sh	/^usage(){$/;"	f
usage	gitgo.sh	/^usage() {$/;"	f
usage	indenterAndDuplicateLineDeleter.sh	/^usage() {$/;"	f
usage	macOnly/splitReg.sh	/^function usage() {$/;"	f
usage	mantozshcomp.py	/^def usage(script_name):$/;"	f
usage	myWatchMaintainEscapes.sh	/^usage() {$/;"	f
usage	myWatchNoBlink.sh	/^usage() {$/;"	f
usage	myWatchNoBlinkColorized.sh	/^usage() {$/;"	f
usage	mywatch.sh	/^usage() {$/;"	f
usage	powerTo.sh	/^function usage() {$/;"	f
usage	shebangChanger.sh	/^usage() {$/;"	f
usage	splitReg.sh	/^function usage() {$/;"	f
usage	storageShower.sh	/^function usage() {$/;"	f
usage	tgzLocalInstaller.sh	/^function usage() {$/;"	f
usage	updater.sh	/^usage() {$/;"	f
usage	updaterNoPip.sh	/^usage() {$/;"	f
usage	zpwr/install.sh	/^usage(){$/;"	f
usage	zpwr/scripts/CPU_Stresser.sh	/^usage() {$/;"	f
usage	zpwr/scripts/directoryContentsSize.sh	/^usage() {$/;"	f
usage	zpwr/scripts/duplicateLineDeleter.sh	/^usage() {$/;"	f
usage	zpwr/scripts/fdswap.sh	/^usage(){$/;"	f
usage	zpwr/scripts/gitgo.sh	/^usage() {$/;"	f
usage	zpwr/scripts/indenterAndDuplicateLineDeleter.sh	/^usage() {$/;"	f
usage	zpwr/scripts/macOnly/splitReg.sh	/^function usage() {$/;"	f
usage	zpwr/scripts/mantozshcomp.py	/^def usage(script_name):$/;"	f
usage	zpwr/scripts/myWatchMaintainEscapes.sh	/^usage() {$/;"	f
usage	zpwr/scripts/myWatchNoBlink.sh	/^usage() {$/;"	f
usage	zpwr/scripts/myWatchNoBlinkColorized.sh	/^usage() {$/;"	f
usage	zpwr/scripts/mywatch.sh	/^usage() {$/;"	f
usage	zpwr/scripts/powerTo.sh	/^function usage() {$/;"	f
usage	zpwr/scripts/shebangChanger.sh	/^usage() {$/;"	f
usage	zpwr/scripts/splitReg.sh	/^function usage() {$/;"	f
usage	zpwr/scripts/storageShower.sh	/^function usage() {$/;"	f
usage	zpwr/scripts/tgzLocalInstaller.sh	/^function usage() {$/;"	f
usage	zpwr/scripts/updater.sh	/^usage() {$/;"	f
usage	zpwr/scripts/updaterNoPip.sh	/^usage() {$/;"	f
use_guiattr	zpwr/.vim/colors/xterm16.vim	/^function s:use_guiattr( nattrs, n )$/;"	f
use_non_breaking_spaces	zpwr/.tmux/powerline/lint/__init__.py	/^	use_non_breaking_spaces=Spec().type(bool).optional(),$/;"	v
use_powerline_prompt	zpwr/.tmux/powerline/bindings/pdb/__init__.py	/^def use_powerline_prompt(cls):$/;"	f
used_powerlines	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^used_powerlines = WeakValueDictionary()$/;"	v
user	gitRemoteRepoInformation.sh	/^                        user="$(echo $line | awk -F':' '{print $2}' | awk -F'\/' '{print $1}')"$/;"	v
user	gitRemoteRepoInformation.sh	/^                        user="$(echo $line | awk -F'\/' '{print $4}')"$/;"	v
user	zpwr/.shell_aliases_functions.sh	/^                user="$(echo $line | awk -F':' '{print $2}' |$/;"	v
user	zpwr/.shell_aliases_functions.sh	/^                user="$(echo $line | awk -F'\/' '{print $4}')"$/;"	v
user	zpwr/.shell_aliases_functions.sh	/^    user="$(echo "$user" | tr 'A-Z' 'a-z')"$/;"	v
user	zpwr/.tmux/powerline/segments/common/env.py	/^def user(pl, segment_info, hide_user=None, hide_domain=False):$/;"	f
user	zpwr/scripts/gitRemoteRepoInformation.sh	/^                        user="$(echo $line | awk -F':' '{print $2}' | awk -F'\/' '{print $1}')"$/;"	v
user	zpwr/scripts/gitRemoteRepoInformation.sh	/^                        user="$(echo $line | awk -F'\/' '{print $4}')"$/;"	v
user_config	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	user_config=$(_get_user_tmux_conf)$/;"	v
user_framework	boiler_gen.py	/^user_framework = sys.argv[1]$/;"	v
user_framework	zpwr/scripts/boiler_gen.py	/^user_framework = sys.argv[1]$/;"	v
user_processes	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local user_processes="$(get_tmux_option "$restore_processes_option" "$restore_processes")"$/;"	v
username	zpwr/.tmux/powerline/segments/common/env.py	/^username = False$/;"	v
uses	zpwr/.tmux/powerline/bindings/config.py	/^def uses(pl, args):$/;"	f
valid_framework	boiler_gen.py	/^valid_framework = get_frame_work(user_framework)$/;"	v
valid_framework	zpwr/scripts/boiler_gen.py	/^valid_framework = get_frame_work(user_framework)$/;"	v
value	zpwr/.tmux/plugins/tmux-battery/battery.tmux	/^	local value="$2"$/;"	v
value	zpwr/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^	local value="$2"$/;"	v
var	mantozshcomp.py	/^    def var(self):$/;"	m	class:Deroffer
var	zpwr/scripts/mantozshcomp.py	/^    def var(self):$/;"	m	class:Deroffer
vcs_props	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^vcs_props = ($/;"	v
vcs_props_bytes	zpwr/.tmux/powerline/lib/vcs/__init__.py	/^vcs_props_bytes = [$/;"	v
verb	zpwr.zsh	/^verb="$1"$/;"	v
verb	zpwr/scripts/zpwr.zsh	/^verb="$1"$/;"	v
verify_tpm_path_permissions	zpwr/.tmux/plugins/tpm/scripts/install_plugins.sh	/^verify_tpm_path_permissions() {$/;"	f
version	about.sh	/^            version="$(git describe --tags $(git rev-list --tags --max-count=1) | perl -pe 's@[\\t ]@@')"$/;"	v
version	zpwr/scripts/about.sh	/^            version="$(git describe --tags $(git rev-list --tags --max-count=1) | perl -pe 's@[\\t ]@@')"$/;"	v
view	eyes.sh	/^    view=${ary[$randIndex]}$/;"	v
view	zpwr/scripts/eyes.sh	/^    view=${ary[$randIndex]}$/;"	v
vim	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/listers/vim.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/listers/vim.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/renderers/vim.py	/^import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/__init__.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/commandt.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^	vim = object()$/;"	v
vim	zpwr/.tmux/powerline/vim.py	/^	import vim$/;"	i
vim	zpwr/.tmux/powerline/vim.py	/^	vim = object()$/;"	v
vim	zpwr/.vim/colors/xmaslights.vim	/^import vim$/;"	m
vimV	zpwr/install.sh	/^vimV="$(vim --version | head -1 | awk '{print $5}')"$/;"	v
vim_bufname	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	vim_bufname = vim_get_func('bufname', rettype='bytes')$/;"	v
vim_colorscheme_spec	zpwr/.tmux/powerline/lint/__init__.py	/^vim_colorscheme_spec = (Spec($/;"	v
vim_command_exists	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def vim_command_exists(name):$/;"	f
vim_command_exists	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from powerline.bindings.vim import vim_command_exists, vim_get_autoload_func$/;"	i
vim_encoding	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^vim_encoding = get_vim_encoding()$/;"	v
vim_func_exists	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_func_exists(f):$/;"	f
vim_func_exists	zpwr/.tmux/powerline/segments/vim/plugin/capslock.py	/^from powerline.bindings.vim import vim_func_exists$/;"	i
vim_funcs	zpwr/.tmux/powerline/segments/vim/__init__.py	/^vim_funcs = {$/;"	v
vim_get_autoload_func	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^def vim_get_autoload_func(f, rettype=None):$/;"	f
vim_get_autoload_func	zpwr/.tmux/powerline/segments/vim/plugin/tagbar.py	/^from powerline.bindings.vim import vim_command_exists, vim_get_autoload_func$/;"	i
vim_get_func	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_get_func(f, rettype=None):$/;"	f	function:eval_unicode
vim_get_func	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	vim_get_func = lambda *args, **kwargs: None$/;"	v
vim_get_func	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getoption, environ, current_tabpage, get_vim_encoding$/;"	i
vim_get_func	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.bindings.vim import (vim_get_func, getbufvar, vim_getbufoption,$/;"	i
vim_get_func	zpwr/.tmux/powerline/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getvar, get_vim_encoding, python_to_vim$/;"	i
vim_getbufoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getbufoption(info, option):$/;"	f
vim_getbufoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getbufoption(info, option):$/;"	f	function:_vim_to_python
vim_getbufoption	zpwr/.tmux/powerline/matchers/vim/__init__.py	/^from powerline.bindings.vim import vim_getbufoption, buffer_name$/;"	i
vim_getbufoption	zpwr/.tmux/powerline/matchers/vim/plugin/commandt.py	/^from powerline.bindings.vim import vim_getbufoption, buffer_name$/;"	i
vim_getbufoption	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.bindings.vim import (vim_get_func, getbufvar, vim_getbufoption,$/;"	i
vim_getoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getoption(option):$/;"	f
vim_getoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getoption(option):$/;"	f	function:_vim_to_python
vim_getoption	zpwr/.tmux/powerline/renderers/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getoption, environ, current_tabpage, get_vim_encoding$/;"	i
vim_getvar	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getvar(varname):$/;"	f
vim_getvar	zpwr/.tmux/powerline/vim.py	/^from powerline.bindings.vim import vim_get_func, vim_getvar, get_vim_encoding, python_to_vim$/;"	i
vim_getwinvar	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_getwinvar(segment_info, varname):$/;"	f
vim_global_exists	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_global_exists(name):$/;"	f
vim_global_exists	zpwr/.tmux/powerline/segments/vim/plugin/ale.py	/^from powerline.bindings.vim import vim_global_exists$/;"	i
vim_global_exists	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from powerline.bindings.vim import vim_global_exists$/;"	i
vim_mode	zpwr/.tmux/powerline/renderers/vim.py	/^	vim_mode = lambda: _vim_mode(1)$/;"	v
vim_mode	zpwr/.tmux/powerline/renderers/vim.py	/^vim_mode = vim_get_func('mode', rettype='unicode')$/;"	v
vim_mode_spec	zpwr/.tmux/powerline/lint/__init__.py	/^vim_mode_spec = Spec().oneof(set(list(vim_modes) + ['nc', 'tab_nc', 'buf_nc'])).copy$/;"	v
vim_modes	zpwr/.tmux/powerline/lint/__init__.py	/^from powerline.segments.vim import vim_modes$/;"	i
vim_modes	zpwr/.tmux/powerline/segments/vim/__init__.py	/^vim_modes = {$/;"	v
vim_session_file_exists	zpwr/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^vim_session_file_exists() {$/;"	f
vim_setoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_setoption(option, value):$/;"	f
vim_setoption	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^	def vim_setoption(option, value):$/;"	f	function:_vim_to_python
vim_strtrans	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^vim_strtrans = vim_get_func('strtrans', rettype='unicode')$/;"	v
vim_syntax_and_highlights	zpwr/.vim/colors/detailed.vim	/^fun! s:vim_syntax_and_highlights()$/;"	f
virtcol_current	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def virtcol_current(pl, gradient=True):$/;"	f
virtualenv	zpwr/.tmux/powerline/segments/common/env.py	/^def virtualenv(pl, segment_info, ignore_venv=False, ignore_conda=False):$/;"	f
visual_range	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def visual_range(pl, segment_info, CTRL_V_text='{rows} x {vcols}', v_text_oneline='C:{vcols}', v_text_multiline='L:{rows}', V_text='L:{rows}'):$/;"	f
vs	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^	vs=( ${(s:.:)ZSH_VERSION} )$/;"	v
w	uploadWebPi.sh	/^w=80$/;"	v
w	zpwr/scripts/uploadWebPi.sh	/^w=80$/;"	v
warn	zpwr/.tmux/powerline/__init__.py	/^	def warn(self, msg, *args, **kwargs):$/;"	m	class:PowerlineLogger
warn	zpwr/.tmux/powerline/bindings/ipython/post_0_11.py	/^from warnings import warn$/;"	i
warn	zpwr/.tmux/powerline/lib/threaded.py	/^	def warn(self, *args, **kwargs):$/;"	m	class:ThreadedSegment
warn	zpwr/.vim/autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
warnOverwrite	zpwr/install.sh	/^warnOverwrite(){$/;"	f
warnSudo	zpwr/install.sh	/^warnSudo(){$/;"	f
watch	zpwr/.tmux/powerline/lib/config.py	/^	def watch(self, *args, **kwargs):$/;"	m	class:DeferredWatcher
watch	zpwr/.tmux/powerline/lib/config.py	/^	def watch(self, *args, **kwargs):$/;"	m	class:DummyWatcher
watch	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def watch(self, path):$/;"	m	class:INotifyFileWatcher
watch	zpwr/.tmux/powerline/lib/watcher/stat.py	/^	def watch(self, path):$/;"	m	class:StatFileWatcher
watch	zpwr/.tmux/powerline/lib/watcher/tree.py	/^	def watch(self, path, ignore_event=None):$/;"	m	class:TreeWatcher
watch	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def watch(self, path):$/;"	m	class:UvWatcher
watchCommand	myWatchNoBlink.sh	/^watchCommand() {$/;"	f
watchCommand	myWatchNoBlinkColorized.sh	/^watchCommand() {$/;"	f
watchCommand	zpwr/scripts/myWatchNoBlink.sh	/^watchCommand() {$/;"	f
watchCommand	zpwr/scripts/myWatchNoBlinkColorized.sh	/^watchCommand() {$/;"	f
watch_directory	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def watch_directory(self, path):$/;"	m	class:UvTreeWatcher
watch_one_directory	zpwr/.tmux/powerline/lib/watcher/uv.py	/^	def watch_one_directory(self, dirname):$/;"	m	class:UvTreeWatcher
watch_tree	zpwr/.tmux/powerline/lib/watcher/inotify.py	/^	def watch_tree(self):$/;"	m	class:INotifyTreeWatcher
watchingFile	watchServiceFSWatchRustCompile.sh	/^    watchingFile=$(basename $2)$/;"	v
watchingFile	zpwr/scripts/watchServiceFSWatchRustCompile.sh	/^    watchingFile=$(basename $2)$/;"	v
weHaveCCZE	colorLogger.sh	/^weHaveCCZE=no$/;"	v
weHaveCCZE	zpwr/scripts/colorLogger.sh	/^weHaveCCZE=no$/;"	v
weather	zpwr/.tmux/powerline/segments/common/wthr.py	/^weather = with_docstring(WeatherSegment(),$/;"	v
weather_conditions_codes	zpwr/.tmux/powerline/segments/common/wthr.py	/^weather_conditions_codes = ($/;"	v
weather_conditions_icons	zpwr/.tmux/powerline/segments/common/wthr.py	/^weather_conditions_icons = {$/;"	v
websiteDir	macOnly/tutorialConfigUpdater.sh	/^websiteDir="$HOME\/WebstormProjects\/PersonalWebsite"$/;"	v
websiteDir	zpwr/scripts/macOnly/tutorialConfigUpdater.sh	/^websiteDir="$HOME\/WebstormProjects\/PersonalWebsite"$/;"	v
wetAsphalt	zpwr/.vim/colors/rakr-light.vim	/^  let wetAsphalt  = "34495e"$/;"	v
which	zpwr/.tmux/powerline/bindings/config.py	/^from powerline.lib.shell import which$/;"	i
which	zpwr/.tmux/powerline/lib/shell.py	/^	def which(cmd, mode=os.F_OK | os.X_OK, path=None):$/;"	f
which	zpwr/.tmux/powerline/lib/shell.py	/^	from shutil import which$/;"	i
which	zpwr/.tmux/powerline/lib/vcs/git.py	/^from powerline.lib.shell import which$/;"	i
which	zpwr/.tmux/powerline/segments/common/bat.py	/^		from shutil import which  # Python-3.3 and later$/;"	i
white	zpwr/.vim/colors/spectro.vim	/^let white  = "#ffffff"$/;"	v
widget	zpwr/.tmux/powerline/bindings/zsh/powerline.zsh	/^	local widget="$1"$/;"	v
width	macOnly/randomCow.sh	/^width=$1$/;"	v
width	manzshcompgen.zsh	/^    width=70$/;"	v
width	updater.sh	/^        width=80$/;"	v
width	updaterNoPip.sh	/^        width=80$/;"	v
width	zpwr/.tmux/powerline/lint/__init__.py	/^	width=Spec().either(Spec().unsigned(), Spec().cmp('eq', 'auto')).optional(),$/;"	v
width	zpwr/scripts/macOnly/randomCow.sh	/^width=$1$/;"	v
width	zpwr/scripts/manzshcompgen.zsh	/^    width=70$/;"	v
width	zpwr/scripts/updater.sh	/^        width=80$/;"	v
width	zpwr/scripts/updaterNoPip.sh	/^        width=80$/;"	v
width	zpwr/scripts/zshcompgen.zsh	/^    width=70$/;"	v
width	zshcompgen.zsh	/^    width=70$/;"	v
windll	zpwr/.tmux/powerline/segments/common/bat.py	/^			from ctypes import windll$/;"	i
window	zpwr/.tmux/powerline/bindings/vim/__init__.py	/^		def window(self):$/;"	m	class:.Tabpage
window_cached	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def window_cached(func):$/;"	f
window_cached	zpwr/.tmux/powerline/segments/vim/plugin/nerdtree.py	/^from powerline.segments.vim import window_cached$/;"	i
window_cached	zpwr/.tmux/powerline/segments/vim/plugin/syntastic.py	/^from powerline.segments.vim import window_cached$/;"	i
window_exists	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^window_exists() {$/;"	f
window_format	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^window_format() {$/;"	f
window_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^		window_name="$(remove_first_char "$window_name")"$/;"	v
window_name	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local window_name="$3"$/;"	v
window_number	zpwr/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^	local window_number="$3"$/;"	v
window_number	zpwr/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^	local window_number="$2"$/;"	v
window_title	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def window_title(pl, segment_info):$/;"	f
winnr	zpwr/.tmux/powerline/segments/vim/__init__.py	/^def winnr(pl, segment_info, show_current=True):$/;"	f
wisteria	zpwr/.vim/colors/rakr-light.vim	/^  let wisteria    = "8e44ad"$/;"	v
with_docstring	zpwr/.tmux/powerline/segments/__init__.py	/^def with_docstring(instance, doc):$/;"	f
with_docstring	zpwr/.tmux/powerline/segments/common/env.py	/^from powerline.segments import Segment, with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/mail.py	/^from powerline.segments import with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/net.py	/^from powerline.segments import with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/players.py	/^from powerline.segments import Segment, with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/sys.py	/^from powerline.segments import with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/vcs.py	/^from powerline.segments import Segment, with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/common/wthr.py	/^from powerline.segments import with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/shell.py	/^from powerline.segments import with_docstring$/;"	i
with_docstring	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.segments import with_docstring$/;"	i
wm_threads	zpwr/.tmux/powerline/bindings/wm/__init__.py	/^wm_threads = {$/;"	v
wm_threads	zpwr/.tmux/powerline/commands/main.py	/^from powerline.bindings.wm import wm_threads$/;"	i
word	mantozshcomp.py	/^    def word(self):$/;"	m	class:Deroffer
word	zpwr/scripts/mantozshcomp.py	/^    def word(self):$/;"	m	class:Deroffer
workingtree	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^from bzrlib import (workingtree, status, library_state, trace, ui)$/;"	i
workspace	zpwr/.tmux/powerline/segments/i3wm.py	/^def workspace(pl, segment_info, workspace=None, strip=False):$/;"	f
workspace_groups	zpwr/.tmux/powerline/segments/i3wm.py	/^def workspace_groups(w):$/;"	f
workspace_lister	zpwr/.tmux/powerline/listers/i3wm.py	/^def workspace_lister(pl, segment_info, only_show=None, output=None):$/;"	f
workspaces	zpwr/.tmux/powerline/segments/i3wm.py	/^def workspaces(pl, segment_info, only_show=None, output=None, strip=0):$/;"	f
wraps	zpwr/.tmux/powerline/lib/__init__.py	/^from functools import wraps$/;"	i
wraps	zpwr/.tmux/powerline/lib/memoize.py	/^from functools import wraps$/;"	i
wraps	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^from functools import wraps$/;"	i
wraps	zpwr/.tmux/powerline/segments/vim/__init__.py	/^from powerline.lib import wraps_saveargs as wraps$/;"	i
wraps_saveargs	zpwr/.tmux/powerline/lib/__init__.py	/^def wraps_saveargs(wrapped):$/;"	f
write	zpwr/.tmux/powerline/bindings/bar/powerline-bar.py	/^	write = get_unicode_writer(encoding='utf-8')$/;"	v
write	zpwr/.tmux/powerline/lib/vcs/bzr.py	/^	def write(self, arg):$/;"	m	class:CoerceIO
write_command	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local write_command=" $history_w '$(resurrect_history_file "$pane_id" "$pane_command")'"$/;"	v
write_output	zpwr/.tmux/powerline/commands/main.py	/^def write_output(args, powerline, segment_info, write):$/;"	f
ww	zpwr/.shell_aliases_functions.sh	/^ww(){$/;"	f
www	zpwr/.shell_aliases_functions.sh	/^www(){$/;"	f
x	macOnly/combo.sh	/^    x="$(python -c 'print("trina"*5)')"$/;"	v
x	macOnly/combo.sh	/^    x=$(date | cut -c1-10)$/;"	v
x	sixLangDisplayer.sh	/^    x="$(python -c 'print("trina"*5)')"$/;"	v
x	sixLangDisplayer.sh	/^    x=$(date | cut -c1-10)$/;"	v
x	zpwr/scripts/macOnly/combo.sh	/^    x="$(python -c 'print("trina"*5)')"$/;"	v
x	zpwr/scripts/macOnly/combo.sh	/^    x=$(date | cut -c1-10)$/;"	v
x	zpwr/scripts/sixLangDisplayer.sh	/^    x="$(python -c 'print("trina"*5)')"$/;"	v
x	zpwr/scripts/sixLangDisplayer.sh	/^    x=$(date | cut -c1-10)$/;"	v
xclip_selection	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^            xclip_selection="$(yank_selection)"$/;"	v
xclip_selection	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^            xclip_selection="$(yank_selection_mouse)"$/;"	v
xdg_location	zpwr/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^	xdg_location="$XDG_CONFIG_HOME\/tmux\/tmux.conf"$/;"	v
xf	zpwr/.shell_aliases_functions.sh	/^        xf=(s==" B  ") ? "%d" : "%.2f"$/;"	v
xsel_selection	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^            xsel_selection="$(yank_selection)"$/;"	v
xsel_selection	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^            xsel_selection="$(yank_selection_mouse)"$/;"	v
xx	zpwr/.shell_aliases_functions.sh	/^xx(){$/;"	f
yaml_constructors	zpwr/.tmux/powerline/lint/markedjson/constructor.py	/^	yaml_constructors = {}$/;"	v	class:BaseConstructor
yaml_implicit_resolvers	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	yaml_implicit_resolvers = {}$/;"	v	class:BaseResolver
yaml_path_resolvers	zpwr/.tmux/powerline/lint/markedjson/resolver.py	/^	yaml_path_resolvers = {}$/;"	v	class:BaseResolver
yank_action	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_action() {$/;"	f
yank_action_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_action_default="copy-pipe-and-cancel"$/;"	v
yank_action_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_action_option="@yank_action"$/;"	v
yank_current_line	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^yank_current_line() {$/;"	f
yank_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_default="y"$/;"	v
yank_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_key() {$/;"	f
yank_line	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_line="y"$/;"	v
yank_line_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_line_key() {$/;"	f
yank_line_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_line_option="@yank_line"$/;"	v
yank_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_option="@copy_mode_yank"$/;"	v
yank_pane_pwd	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_pane_pwd="Y"$/;"	v
yank_pane_pwd_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_pane_pwd_key() {$/;"	f
yank_pane_pwd_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_pane_pwd_option="@yank_pane_pwd"$/;"	v
yank_put_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_put_default="M-y"$/;"	v
yank_put_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_put_key() {$/;"	f
yank_put_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_put_option="@copy_mode_yank_put"$/;"	v
yank_selection	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection() {$/;"	f
yank_selection_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection_default="clipboard"$/;"	v
yank_selection_mouse	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection_mouse() {$/;"	f
yank_selection_mouse_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection_mouse_default="primary"$/;"	v
yank_selection_mouse_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection_mouse_option="@yank_selection_mouse"$/;"	v
yank_selection_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_selection_option="@yank_selection"$/;"	v
yank_to_clipboard	zpwr/.tmux/plugins/tmux-yank/scripts/copy_line.sh	/^yank_to_clipboard() {$/;"	f
yank_with_mouse	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_with_mouse() {$/;"	f
yank_with_mouse_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_with_mouse_default="on"$/;"	v
yank_with_mouse_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_with_mouse_option="@yank_with_mouse"$/;"	v
yank_wo_newline_default	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_wo_newline_default="!"$/;"	v
yank_wo_newline_key	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_wo_newline_key() {$/;"	f
yank_wo_newline_option	zpwr/.tmux/plugins/tmux-yank/scripts/helpers.sh	/^yank_wo_newline_option="@copy_mode_yank_wo_newline"$/;"	v
ycminstall	zpwr/install.sh	/^ycminstall(){$/;"	f
zp	zpwr/.shell_aliases_functions.sh	/^zp(){$/;"	f
zpwr	zpwr/.shell_aliases_functions.sh	/^zpwr(){$/;"	f
zpz	zpwr/.shell_aliases_functions.sh	/^zpz(){$/;"	f
zsh	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^import zsh$/;"	i
zsh_bindkey	zpwr/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^		local zsh_bindkey="$(zsh -i -c bindkey)"$/;"	v
zsh_expand	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	def zsh_expand(s):$/;"	f
zsh_expand	zpwr/.tmux/powerline/bindings/zsh/__init__.py	/^	zsh_expand = zsh.expand$/;"	v
zt	zpwr/.vim/sessions/Scripting.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/aliases.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/default.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script1.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script2.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script3.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script4.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script5.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/script6.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/test.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/text1.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/text2.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/tor.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/trc.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/vimtricks.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/vrc.vim	/^normal! zt$/;"	m
zt	zpwr/.vim/sessions/zshrc.vim	/^normal! zt$/;"	m
