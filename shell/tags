!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDRESS	uploadWebDS.sh	/^ADDRESS="jacobmenke@98.209.117.32:\/var\/services\/web"$/;"	v	language:Sh
ADDRESS	uploadWebPi.sh	/^ADDRESS="pi@$IP:\/var\/www\/html"$/;"	v	language:Sh
BACKUP_DIR	backupBashConfig.sh	/^BACKUP_DIR="$SCRIPTS_DIR\/rcBackups"$/;"	v
BACKUP_DIR	duplicateLineDeleter.sh	/^BACKUP_DIR=$SCRIPTS_DIR\/rcBackups$/;"	v	language:Sh
BLOCKSIZE	secureDelete.sh	/^BLOCKSIZE=1      #  I\/O with \/dev\/urandom requires unit block size,$/;"	v	language:Sh
BLUE	blueText.sh	/^BLUE='\\e[37;44m'$/;"	v	language:Sh
BLUE	blueUpperText.sh	/^BLUE='\\e[37;44m'$/;"	v	language:Sh
BLUE	boldText.sh	/^BLUE='\\e[37;44m'$/;"	v	language:Sh
BLUE	coolFormatter.sh	/^BLUE='\\e[37;44m'$/;"	v	language:Sh
CMD	myWatchNoBlink.sh	/^        CMD="$@"$/;"	v	language:Sh
CMD	myWatchNoBlinkColorized.sh	/^        CMD="$@"$/;"	v	language:Sh
COLS	myWatchNoBlink.sh	/^        COLS=$(tput cols)$/;"	v	language:Sh
COLS	myWatchNoBlinkColorized.sh	/^        COLS=$(tput cols)$/;"	v	language:Sh
CR	batchRename.sh	/^    local CR="\\r"$/;"	v
CR	openAll.sh	/^local CR="\\r"$/;"	v	language:Sh
DIR_WATCHING	watchServiceFSWatchGit.sh	/^DIR_WATCHING="$1"$/;"	v	language:Sh
DIR_WATCHING	watchServiceFSWatchLS-ALH.sh	/^DIR_WATCHING="$1"$/;"	v	language:Sh
DIR_WATCHING	watchServiceFSWatchPiDesktop.sh	/^DIR_WATCHING="$1"$/;"	v	language:Sh
DIR_WATCHING	watchServiceFSWatchPiWeb.sh	/^DIR_WATCHING="$1"$/;"	v	language:Sh
DIR_WATCHING	watchServiceFSWatchRustCompile.sh	/^DIR_WATCHING="$1"$/;"	v	language:Sh
ECHO	oldCounter.sh	/^                        ECHO="true"$/;"	v	language:Sh
ED	myWatchNoBlink.sh	/^    ED=$(tput ed)$/;"	v	language:Sh
ED	myWatchNoBlinkColorized.sh	/^    ED=$(tput ed)$/;"	v	language:Sh
EL	myWatchNoBlink.sh	/^    EL=$(tput el)$/;"	v	language:Sh
EL	myWatchNoBlinkColorized.sh	/^    EL=$(tput el)$/;"	v	language:Sh
E_BADARGS	secureDelete.sh	/^E_BADARGS=70     #  Various error exit codes.$/;"	v	language:Sh
E_CHANGED_MIND	secureDelete.sh	/^E_CHANGED_MIND=72$/;"	v	language:Sh
E_NOT_FOUND	secureDelete.sh	/^E_NOT_FOUND=71$/;"	v	language:Sh
HOME	myWatchNoBlink.sh	/^    HOME=$(tput cup 0 0)$/;"	v	language:Sh
HOME	myWatchNoBlinkColorized.sh	/^    HOME=$(tput cup 0 0)$/;"	v	language:Sh
HOME_DIR	backupBashConfig.sh	/^HOME_DIR=\/Users\/jacobmenke$/;"	v
HOME_DIR	duplicateLineDeleter.sh	/^HOME_DIR=\/Users\/jacobmenke$/;"	v	language:Sh
IFS	listAllCommands.sh	/^IFS=:$/;"	v	language:Sh
IFS	sortedArrayCounter.sh	/^                IFS="$OLDIFS"$/;"	v	language:Sh
IFS	sortedArrayCounter.sh	/^IFS=$'\\n'$/;"	v	language:Sh
IFS	sortedArrayCounter.sh	/^IFS=:$/;"	v	language:Sh
INTERFACE	tor.sh	/^INTERFACE=Wi-Fi$/;"	v
IP	uploadWebPi.sh	/^IP=98.209.117.32$/;"	v	language:Sh
OLDIFS	sortedArrayCounter.sh	/^OLDIFS="$IFS"$/;"	v	language:Sh
ORGIN_NAME	gitgo.sh	/^    local ORGIN_NAME="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
ORIGIN	gitgo.sh	/^    local ORIGIN="$(git remote -v | awk '{print $1}' | tail -1 | tr -d ' ')"$/;"	v
PASSES	secureDelete.sh	/^PASSES=7         #  Number of file-shredding passes.$/;"	v	language:Sh
PULL_URL	gitgo.sh	/^        local PULL_URL="$(git remote -v | awk '{print $2}' | tail -1 | tr -d ' ')"$/;"	v
REPO_NAME	gitgo.sh	/^        local REPO_NAME="$(git remote -v | awk '{print $2}' | tail -1 | tr -d ' ')"$/;"	v
REPO_NAME_TO_CREATE	gitgo.sh	/^        local REPO_NAME_TO_CREATE="$1"$/;"	v
RESET	blueText.sh	/^RESET='\\e[0m'$/;"	v	language:Sh
RESET	blueUpperText.sh	/^RESET='\\e[0m'$/;"	v	language:Sh
RESET	boldText.sh	/^RESET='\\e[0m'$/;"	v	language:Sh
RESET	coolFormatter.sh	/^RESET='\\e[0m'$/;"	v	language:Sh
ROWS	myWatchNoBlink.sh	/^        ROWS=$(tput lines)$/;"	v	language:Sh
ROWS	myWatchNoBlinkColorized.sh	/^        ROWS=$(tput lines)$/;"	v	language:Sh
SCRIPTS_DIR	backupBashConfig.sh	/^SCRIPTS_DIR="$SCRIPTS"$/;"	v
SCRIPTS_DIR	duplicateLineDeleter.sh	/^SCRIPTS_DIR=$SCRIPTS$/;"	v	language:Sh
SCRIPT_TO_RUN	watchServiceFSWatchPiDesktop.sh	/^SCRIPT_TO_RUN=$SCRIPTS\/upLoadPi.sh$/;"	v	language:Sh
SCRIPT_TO_RUN	watchServiceFSWatchPiWeb.sh	/^SCRIPT_TO_RUN=$SCRIPTS\/uploadWebPi.sh$/;"	v	language:Sh
TIME	mywatch.sh	/^    TIME="$2"$/;"	v	language:Sh
TIME	mywatch.sh	/^    TIME=1$/;"	v	language:Sh
URL	gitgo.sh	/^    local URL="https:\/\/github.com\/$GITHUB_ACCOUNT\/$REPO_NAME_TO_CREATE"$/;"	v
addContents	shebangChanger.sh	/^addContents(){$/;"	f	language:Sh
arr	listAllCommands.sh	/^arr=()$/;"	v	language:Sh
arr	picture_finder.sh	/^local arr=(  '|' '\\' '-' '\/' )$/;"	v	language:Sh
arr	secureDelete.sh	/^    local arr=(  '|' '\\' '-' '\/' )$/;"	v	language:Sh
arr	sortedArrayCounter.sh	/^arr=()$/;"	v	language:Sh
arrayOfPI	updater.sh	/^arrayOfPI=(r r2)$/;"	v	language:Sh
boldAndUnderlinedPrint	tutorialConfigUpdater.sh	/^boldAndUnderlinedPrint(){$/;"	f
chars	batchRename.sh	/^    local chars=1 # number of characters to display$/;"	v
chars	openAll.sh	/^local chars=1 # number of characters to display$/;"	v	language:Sh
checkForExistence	batchRename.sh	/^checkForExistence(){$/;"	f
clearline	batchRename.sh	/^    local clearline="\\e[K" # clear to end of line (ANSI terminal)$/;"	v
clearline	openAll.sh	/^local clearline="\\e[K" # clear to end of line (ANSI terminal)$/;"	v	language:Sh
cols	animation	/^cols=`tput cols`$/;"	v
cols	picture_finder.sh	/^cols=`tput cols`$/;"	v	language:Sh
command	runner.sh	/^        command="vim -i NONE -V1 -Nes -c 'so""$fileToBeExecuted""' -c'echo""|q!' 2>&1 | tail +4"$/;"	v
commandList	oldCounter.sh	/^		commandList="$i\\n$commandList"$/;"	v	language:Sh
commandList	oldCounter.sh	/^commandList=""$/;"	v	language:Sh
commands	oldCounter.sh	/^		commands="$f $commands"$/;"	v	language:Sh
commands	oldCounter.sh	/^commands=""$/;"	v	language:Sh
commitMessage	gitgo.sh	/^    local commitMessage="$1"$/;"	v
commitTheDirectory	gitgo.sh	/^commitTheDirectory(){$/;"	f
compiled	watchServiceFSWatchRustCompile.sh	/^			compiled=${fileName%*.rs}$/;"	v	language:Sh
concat	myWatchNoBlinkColorized.sh	/^	    	concat="$(java parser $LINE)"$/;"	v	language:Sh
contents	duplicateLineDeleter.sh	/^	contents=$(cat -s "$file")$/;"	v	language:Sh
convertFiles	batchRename.sh	/^convertFiles(){$/;"	f
count	animation	/^count=$topline$/;"	v
createTheFile	createScriptButDontOpenSublime.sh	/^createTheFile(){$/;"	f
createTheFile	createTextFile.sh	/^createTheFile(){$/;"	f	language:Sh
delay	batchRename.sh	/^    local delay=.1 # time in seconds between characters$/;"	v
delay	openAll.sh	/^local delay=.1 # time in seconds between characters$/;"	v	language:Sh
delim	batchRename.sh	/^delim=_$/;"	v
destinationFile	picture_finder.sh	/^	destinationFile=$destinationDirectory\/${picture##*\/}$/;"	v	language:Sh
dir	oldCounter.sh	/^	dir=`echo $PATH | cut -d: -f$i`$/;"	v	language:Sh
dirNum	oldCounter.sh	/^dirNum=`expr $(echo $PATH | tr -cd : | wc -c) + 1`$/;"	v	language:Sh
disable_proxy	tor.sh	/^function disable_proxy() {$/;"	f
displayProgress	batchRename.sh	/^displayProgress(){$/;"	f
displayProgress	picture_finder.sh	/^displayProgress(){$/;"	f	language:Sh
displayProgress	secureDelete.sh	/^displayProgress(){$/;"	f	language:Sh
displayProgressIndicator	openAll.sh	/^displayProgressIndicator(){$/;"	f	language:Sh
dontSummarizeSizes	directoryContentsSize.sh	/^dontSummarizeSizes(){$/;"	f	language:Sh
ending	picture_finder.sh	/^	ending=${destinationFile##*.}$/;"	v	language:Sh
executableProgram	shebangChanger.sh	/^executableProgram=$1$/;"	v	language:Sh
executableScriptsProcessing	createScriptButDontOpenSublime.sh	/^executableScriptsProcessing(){$/;"	f
executableScriptsProcessing	createTextFile.sh	/^executableScriptsProcessing(){$/;"	f	language:Sh
executableScriptsProcessing	runner.sh	/^executableScriptsProcessing(){$/;"	f
executeFileFirstArgIsCommand	runner.sh	/^executeFileFirstArgIsCommand(){$/;"	f
executeTheFile	runner.sh	/^executeTheFile(){$/;"	f
file	openAll.sh	/^	file="$(echo $file | tr '[:upper:]' '[:lower:]')"$/;"	v	language:Sh
file	secureDelete.sh	/^    file="$i"$/;"	v	language:Sh
fileName	templater.sh	/^fileName="$1"$/;"	v	language:Sh
fileName	watchServiceFSWatchRustCompile.sh	/^	fileName=`basename $event`$/;"	v	language:Sh
fileString	openAll.sh	/^fileString=""$/;"	v	language:Sh
fileToBeExecuted	runner.sh	/^fileToBeExecuted="$1"$/;"	v
files	backupBashConfig.sh	/^files=("$HOME_DIR\/.bashrc" "$HOME_DIR\/.bash_profile" "$HOME_DIR\/.profile" '\/etc\/bashrc' '\/etc\/profile')$/;"	v
filesArray	openAll.sh	/^filesArray=()$/;"	v	language:Sh
findTotal	oldCounter.sh	/^findTotal (){$/;"	f	language:Sh
first	batchRename.sh	/^        local first=`echo ${file%%$delim*}`$/;"	v
firstFile	sync.sh	/^	firstFile="${firstFile}\/"$/;"	v	language:Sh
firstFile	sync.sh	/^firstFile="$1"$/;"	v	language:Sh
flength	secureDelete.sh	/^    flength=$(ls -l "$file" | awk '{print $5}')  # Field 5 is file length.$/;"	v	language:Sh
fortuneQuote	eyes.sh	/^	fortuneQuote="$(figlet -f $1 \\"$fortuneQuote\\")"$/;"	v	language:Sh
fortuneQuote	eyes.sh	/^	fortuneQuote="$(fortune)"$/;"	v	language:Sh
found	shebangChanger.sh	/^			found=true$/;"	v	language:Sh
found	shebangChanger.sh	/^	found=false$/;"	v	language:Sh
getInitialCommit	gitgo.sh	/^getInitialCommit(){$/;"	f
getRemoteDetails	gitgo.sh	/^getRemoteDetails(){$/;"	f
gitPull	gitgo.sh	/^gitPull(){$/;"	f
gitPush	gitgo.sh	/^gitPush(){$/;"	f
host	rsyncr.sh	/^host="r"$/;"	v	language:Sh
initializeGitDirectory	gitgo.sh	/^initializeGitDirectory(){$/;"	f
killCursor	batchRename.sh	/^killCursor(){$/;"	f
killCursor	openAll.sh	/^killCursor(){$/;"	f	language:Sh
killCursor	picture_finder.sh	/^killCursor(){$/;"	f	language:Sh
killCursor	secureDelete.sh	/^killCursor(){$/;"	f	language:Sh
last	batchRename.sh	/^        local last=`echo ${file##*_}`$/;"	v
lcline	openAll.sh	/^	lcline="$(echo $line | tr '[:upper:]' '[:lower:]')"$/;"	v	language:Sh
lineCounter	shebangChanger.sh	/^	lineCounter=1$/;"	v	language:Sh
local	rsyncr.sh	/^local="$1"$/;"	v	language:Sh
messageToSpeak	say.sh	/^messageToSpeak=""$/;"	v	language:Sh
newfile	batchRename.sh	/^        local newfile=$first$number.$endFileEnding$/;"	v
newfile	createScriptButDontOpenSublime.sh	/^	newfile="$newfile".txt$/;"	v
newfile	createScriptButDontOpenSublime.sh	/^newfile="$1"$/;"	v
newfile	createTextFile.sh	/^    newfile="$newfile".txt$/;"	v	language:Sh
newfile	createTextFile.sh	/^newfile="$1"$/;"	v	language:Sh
number	batchRename.sh	/^        local number=$((10#$number))$/;"	v
number	batchRename.sh	/^        local number=`echo ${last%%.*}`$/;"	v
openTextEditor	createScriptButDontOpenSublime.sh	/^openTextEditor(){$/;"	f
openTextEditor	createTextFile.sh	/^openTextEditor(){$/;"	f	language:Sh
optstring	directoryContentsSize.sh	/^optstring=shta$/;"	v	language:Sh
optstring	gitgo.sh	/^optstring=p:hcl$/;"	v
optstring	myWatchNoBlink.sh	/^optstring=bh$/;"	v	language:Sh
optstring	myWatchNoBlinkColorized.sh	/^optstring=bh$/;"	v	language:Sh
optstring	mywatch.sh	/^optstring=dh$/;"	v	language:Sh
os	test.py	/^import os$/;"	i
outdated	updater.sh	/^outdated=$(pip3 list --outdated | awk '{print $1}')$/;"	v	language:Sh
output	watchServiceFSWatchRustCompile.sh	/^		output="$(rustc $2 2>&1)"$/;"	v	language:Sh
pass_count	secureDelete.sh	/^    pass_count=1$/;"	v	language:Sh
path	shebangChanger.sh	/^path="#!\/usr\/bin\/env $executableProgram"$/;"	v	language:Sh
perlOutdated	updater.sh	/^perlOutdated=$(cpan-outdated -p)$/;"	v	language:Sh
pipe	readFIFO.sh	/^pipe=\/Users\/jacobmenke\/Desktop\/testpipe$/;"	v	language:Sh
pipe	readFIFO.sh	/^pipe=\/tmp\/testpipe$/;"	v	language:Sh
prettyPrint	gitgo.sh	/^prettyPrint(){$/;"	f
prettyPrint	updater.sh	/^prettyPrint(){$/;"	f	language:Sh
printD	banner.pl	/^sub printD{$/;"	s
printDate	banner.pl	/^sub printDate{$/;"	s
progress_pid	batchRename.sh	/^    progress_pid=$!$/;"	v
progress_pid	openAll.sh	/^	progress_pid=$!$/;"	v	language:Sh
progress_pid	picture_finder.sh	/^  progress_pid=$!$/;"	v	language:Sh
progress_pid	secureDelete.sh	/^    progress_pid=$!$/;"	v	language:Sh
prompt	batchRename.sh	/^    local prompt="press any key..." # user prompt$/;"	v
prompt	openAll.sh	/^local prompt="press any key..." # user prompt$/;"	v	language:Sh
randIndex	eyes.sh	/^	randIndex=$(jot -r 1 0 $rangePossibleIndices )$/;"	v	language:Sh
rangePossibleIndices	eyes.sh	/^rangePossibleIndices=${#ary[*]}$/;"	v	language:Sh
remote	rsyncr.sh	/^remote="$2"$/;"	v	language:Sh
revarr	picture_finder.sh	/^local revarr=( '|' '\/' '-' '\\')$/;"	v	language:Sh
revarr	secureDelete.sh	/^    local revarr=( '|' '\/' '-' '\\')$/;"	v	language:Sh
robot	animation	/^robot="`cat << "EOF"                               $/;"	v
rows	animation	/^rows=`tput lines`$/;"	v
showHidden	directoryContentsSize.sh	/^showHidden(){$/;"	f	language:Sh
sorted	sortedArrayCounter.sh	/^sorted=( $(sort -f <<<"${arr[*]}") )$/;"	v	language:Sh
sorted	sortedArrayCounter.sh	/^sorted=($(uniq <<< "${sorted[*]}"))$/;"	v	language:Sh
spinner	batchRename.sh	/^        spinner="$temp${spinner%"$temp"}" # and add it to the end$/;"	v
spinner	batchRename.sh	/^    local spinner="\\|\/-" # spinner$/;"	v
spinner	openAll.sh	/^	spinner=$temp${spinner%"$temp"} # and add it to the end$/;"	v	language:Sh
spinner	openAll.sh	/^local spinner="\\|\/-" # spinner$/;"	v	language:Sh
startCursor	batchRename.sh	/^startCursor(){$/;"	f
startCursor	openAll.sh	/^startCursor(){$/;"	f	language:Sh
startCursor	picture_finder.sh	/^startCursor(){$/;"	f	language:Sh
startCursor	secureDelete.sh	/^startCursor(){$/;"	f	language:Sh
suckers	test.py	/^def suckers():$/;"	f
sum	listAllCommands.sh	/^sum=0$/;"	v	language:Sh
sum	sortedArrayCounter.sh	/^sum=0$/;"	v	language:Sh
summarizeSizes	directoryContentsSize.sh	/^summarizeSizes(){$/;"	f	language:Sh
sys	test.py	/^import sys$/;"	i
tail	shebangChanger.sh	/^		tail=$(cat "$file")$/;"	v	language:Sh
tail	shebangChanger.sh	/^		tail=$(tail +$lineCounter "$file")$/;"	v	language:Sh
temp	batchRename.sh	/^        local temp=${spinner#?}               # remove first character from $spinner$/;"	v
temp	openAll.sh	/^	local temp=${spinner#?}               # remove first character from $spinner$/;"	v	language:Sh
timeToSleep	myWatchNoBlink.sh	/^    timeToSleep=$2$/;"	v	language:Sh
timeToSleep	myWatchNoBlink.sh	/^    timeToSleep=0.5$/;"	v	language:Sh
timeToSleep	myWatchNoBlinkColorized.sh	/^    timeToSleep=$2$/;"	v	language:Sh
timeToSleep	myWatchNoBlinkColorized.sh	/^    timeToSleep=0.5$/;"	v	language:Sh
topline	animation	/^topline=0$/;"	v
total	oldCounter.sh	/^total=0$/;"	v	language:Sh
total	oldCounter.sh	/^total=`expr $(ls -F $1 | grep ".*[*@]" | wc -l) + $total`$/;"	v	language:Sh
transferFile	transfer.sh	/^transferFile="$1"$/;"	v	language:Sh
tutorialDir	tutorialConfigUpdater.sh	/^tutorialDir="$HOME\/Documents\/tutorialsRepo"$/;"	v
updatePI	updater.sh	/^updatePI(){$/;"	f	language:Sh
usage	directoryContentsSize.sh	/^usage(){$/;"	f	language:Sh
usage	duplicateLineDeleter.sh	/^usage(){$/;"	f	language:Sh
usage	gitgo.sh	/^usage(){$/;"	f
usage	myWatchNoBlink.sh	/^usage(){$/;"	f	language:Sh
usage	myWatchNoBlinkColorized.sh	/^usage(){$/;"	f	language:Sh
usage	mywatch.sh	/^usage(){$/;"	f	language:Sh
usage	shebangChanger.sh	/^usage(){$/;"	f	language:Sh
view	eyes.sh	/^	view=${ary[$randIndex]}$/;"	v	language:Sh
watchCommand	myWatchNoBlink.sh	/^watchCommand() {$/;"	f	language:Sh
watchCommand	myWatchNoBlinkColorized.sh	/^watchCommand() {$/;"	f	language:Sh
watchingFile	watchServiceFSWatchRustCompile.sh	/^	watchingFile=`basename $2`$/;"	v	language:Sh
websiteDir	tutorialConfigUpdater.sh	/^websiteDir="$HOME\/WebstormProjects\/PersonalWebsite"$/;"	v
x	mywatch.sh	/^    x=$(eval "$1")$/;"	v	language:Sh
x	test.py	/^x=5$/;"	v
